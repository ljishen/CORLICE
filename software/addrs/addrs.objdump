
addrs.elf:     file format elf32-littlenios2
addrs.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000244

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f854 memsz 0x0000f854 flags r-x
    LOAD off    0x00010874 vaddr 0x0000f874 paddr 0x00011360 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012e4c vaddr 0x00012e4c paddr 0x00012e4c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f2fc  00000244  00000244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000334  0000f540  0000f540  00010540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0000f874  00011360  00010874  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00012e4c  00012e4c  00012e4c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00012fac  00012fac  00012360  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012360  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed8  00000000  00000000  00012388  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002351c  00000000  00000000  00013260  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000903a  00000000  00000000  0003677c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b4b6  00000000  00000000  0003f7b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020b4  00000000  00000000  0004ac6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000037cb  00000000  00000000  0004cd20  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017868  00000000  00000000  000504eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00067d54  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00067d88  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c6c2  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c6c5  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c6d1  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c6d2  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0006c6d3  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0006c6dc  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  0006c6e5  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006c6ee  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000001c  00000000  00000000  0006c6f8  2**0
                  CONTENTS, READONLY
 26 .jdi          0000595f  00000000  00000000  0006c714  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     002be389  00000000  00000000  00072073  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000244 l    d  .text	00000000 .text
0000f540 l    d  .rodata	00000000 .rodata
0000f874 l    d  .rwdata	00000000 .rwdata
00012e4c l    d  .bss	00000000 .bss
00012fac l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../addrs_bsp//obj/HAL/src/crt0.o
0000028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 addr_mapping.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000f5c2 l     O .rodata	00000010 zeroes.4404
000029a8 l     F .text	000000bc __sbprintf
0000f5d2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002bb8 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000046e8 l     F .text	00000008 __fp_unlock
000046fc l     F .text	0000019c __sinit.part.1
00004898 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000f874 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0000fcb8 l     O .rwdata	00000020 lc_ctype_charset
0000fc98 l     O .rwdata	00000020 lc_message_charset
0000fcd8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f604 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007b4c l     F .text	000000fc __sprint_r.part.0
0000f738 l     O .rodata	00000010 blanks.4348
0000f728 l     O .rodata	00000010 zeroes.4349
000090d8 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000cd94 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000cee8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000cf14 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d000 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d0e0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d1cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d3a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011350 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d5ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d720 l     F .text	00000034 alt_dev_reg
000102c0 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000da10 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000dc1c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000e254 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e474 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e8e8 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000ea28 l     F .text	0000003c alt_get_errno
0000ea64 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00012e80 g     O .bss	00000004 alt_instruction_exception_handler
00007190 g     F .text	00000074 _mprec_log10
0000727c g     F .text	0000008c __any_on
00009674 g     F .text	00000054 _isatty_r
0000f610 g     O .rodata	00000028 __mprec_tinytens
00000290 g     F .text	00000198 start_mapping_listener
0000d2dc g     F .text	0000007c alt_main
00000628 g     F .text	000000c0 _puts_r
00012eac g     O .bss	00000100 alt_irq
000096c8 g     F .text	00000060 _lseek_r
00011360 g       *ABS*	00000000 __flash_rwdata_start
0000b8c0 g     F .text	00000088 .hidden __eqdf2
00012fac g       *ABS*	00000000 __alt_heap_start
000005ec g     F .text	0000003c printf
000098e0 g     F .text	0000009c _wcrtomb_r
00007a0c g     F .text	0000005c __sseek
00004a38 g     F .text	00000010 __sinit
00009788 g     F .text	00000140 __swbuf_r
00005500 g     F .text	0000007c _setlocale_r
000048a0 g     F .text	00000068 __sfmoreglue
0000d37c g     F .text	00000024 __malloc_unlock
00006088 g     F .text	0000015c memmove
00004a20 g     F .text	00000018 _cleanup
0000630c g     F .text	000000a8 _Balloc
0000b948 g     F .text	000000dc .hidden __gtdf2
0000ee20 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009618 g     F .text	0000005c _fstat_r
00012e64 g     O .bss	00000004 errno
00007988 g     F .text	00000008 __seofread
00012e6c g     O .bss	00000004 alt_argv
00019320 g       *ABS*	00000000 _gp
00010140 g     O .rwdata	00000180 alt_fd_list
0000ee44 g     F .text	00000090 alt_find_dev
00000474 g     F .text	00000148 memcpy
000046f0 g     F .text	0000000c _cleanup_r
0000cbac g     F .text	000000dc .hidden __floatsidf
0000e9ac g     F .text	0000007c alt_io_redirect
0000ba24 g     F .text	000000f4 .hidden __ltdf2
0000f540 g       *ABS*	00000000 __DTOR_END__
000006e8 g     F .text	00000014 puts
0000f110 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0000786c g     F .text	00000074 __fpclassifyd
000070ec g     F .text	000000a4 __ratio
000090bc g     F .text	0000001c __vfiprintf_internal
0000de14 g     F .text	0000021c altera_avalon_jtag_uart_read
000005bc g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a670 g     F .text	00000064 .hidden __udivsi3
0000d03c g     F .text	000000a4 isatty
0000f660 g     O .rodata	000000c8 __mprec_tens
0000557c g     F .text	0000000c __locale_charset
0000f080 g     F .text	00000090 alt_icache_flush
00012e60 g     O .bss	00000004 __malloc_top_pad
00011328 g     O .rwdata	00000004 __mb_cur_max
000055ac g     F .text	0000000c _localeconv_r
00006718 g     F .text	0000003c __i2b
00004ebc g     F .text	000004bc __sfvwrite_r
000078e0 g     F .text	00000054 _sbrk_r
00009728 g     F .text	00000060 _read_r
00011348 g     O .rwdata	00000004 alt_max_fd
0000930c g     F .text	000000f0 _fclose_r
000046b8 g     F .text	00000030 fflush
00012e5c g     O .bss	00000004 __malloc_max_sbrked_mem
0000a72c g     F .text	000008ac .hidden __adddf3
00006e94 g     F .text	0000010c __b2d
0000a040 g     F .text	00000538 .hidden __umoddi3
0000d208 g     F .text	000000d4 lseek
00011320 g     O .rwdata	00000004 _global_impure_ptr
00007308 g     F .text	00000564 _realloc_r
00012fac g       *ABS*	00000000 __bss_end
0000e7f8 g     F .text	000000f0 alt_iic_isr_register
0000ed18 g     F .text	00000108 alt_tick
00009ac8 g     F .text	00000578 .hidden __udivdi3
00009574 g     F .text	00000024 _fputwc_r
0000f638 g     O .rodata	00000028 __mprec_bigtens
000064fc g     F .text	00000104 __s2b
0000cc88 g     F .text	000000a8 .hidden __floatunsidf
00006bd4 g     F .text	00000060 __mcmp
00004a58 g     F .text	00000018 __fp_lock_all
0000e7ac g     F .text	0000004c alt_ic_irq_enabled
0000ec7c g     F .text	0000009c alt_alarm_stop
00012e74 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
00010118 g     O .rwdata	00000028 alt_dev_null
0000cea0 g     F .text	00000048 alt_dcache_flush_all
00006600 g     F .text	00000068 __hi0bits
0000cb2c g     F .text	00000080 .hidden __fixdfsi
00011360 g       *ABS*	00000000 __ram_rwdata_end
00011340 g     O .rwdata	00000008 alt_dev_list
0000d628 g     F .text	000000f8 write
0000f874 g       *ABS*	00000000 __ram_rodata_end
0000cf50 g     F .text	000000b0 fstat
0000ba24 g     F .text	000000f4 .hidden __ledf2
0000694c g     F .text	00000140 __pow5mult
00007c60 g     F .text	0000145c ___vfiprintf_internal_r
00012e54 g     O .bss	00000004 __nlocale_changed
0000a6d4 g     F .text	00000058 .hidden __umodsi3
00012fac g       *ABS*	00000000 end
0000d950 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0000f540 g       *ABS*	00000000 __CTOR_LIST__
000186a0 g       *ABS*	00000000 __alt_stack_pointer
0000e2cc g     F .text	0000007c alt_avalon_timer_sc_init
0000cd30 g     F .text	00000064 .hidden __clzsi2
0000e030 g     F .text	00000224 altera_avalon_jtag_uart_write
00004a48 g     F .text	00000004 __sfp_lock_acquire
00005fa4 g     F .text	000000e4 memchr
00000794 g     F .text	000021f8 ___vfprintf_internal_r
00004bac g     F .text	00000310 _free_r
00005588 g     F .text	00000010 __locale_mb_cur_max
0000f38c g     F .text	00000180 __call_exitprocs
00012e50 g     O .bss	00000004 __mlocale_changed
0001132c g     O .rwdata	00000004 __malloc_sbrk_base
00000244 g     F .text	0000004c _start
00012e78 g     O .bss	00000004 _alt_tick_rate
00006a8c g     F .text	00000148 __lshift
00012e7c g     O .bss	00000004 _alt_nticks
0000d3dc g     F .text	000000fc read
0000d78c g     F .text	00000060 alt_sys_init
0000f274 g     F .text	00000118 __register_exitproc
00006754 g     F .text	000001f8 __multiply
0000dcbc g     F .text	00000068 altera_avalon_jtag_uart_close
0000f874 g       *ABS*	00000000 __ram_rwdata_start
0000f540 g       *ABS*	00000000 __ram_rodata_start
00012e84 g     O .bss	00000028 __malloc_current_mallinfo
00006fa0 g     F .text	0000014c __d2b
0000d7ec g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000efdc g     F .text	000000a4 alt_get_fd
000091f4 g     F .text	00000054 _close_r
0000f1f8 g     F .text	0000007c memcmp
0000d8ac g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00012fac g       *ABS*	00000000 __alt_stack_base
0000d8fc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002a64 g     F .text	00000154 __swsetup_r
0000afd8 g     F .text	000008e8 .hidden __divdf3
00004908 g     F .text	00000118 __sfp
00007204 g     F .text	00000078 __copybits
0000fd10 g     O .rwdata	00000408 __malloc_av_
00004a54 g     F .text	00000004 __sinit_lock_release
0000bb18 g     F .text	00000718 .hidden __muldf3
00007934 g     F .text	00000054 __sread
0000eed4 g     F .text	00000108 alt_find_file
0000e4b0 g     F .text	000000a4 alt_dev_llist_insert
0000d358 g     F .text	00000024 __malloc_lock
0000d53c g     F .text	000000b0 sbrk
0000465c g     F .text	0000005c _fflush_r
00009248 g     F .text	000000c4 _calloc_r
00012e4c g       *ABS*	00000000 __bss_start
000061e4 g     F .text	00000128 memset
00000428 g     F .text	0000004c main
00012e70 g     O .bss	00000004 alt_envp
00012e58 g     O .bss	00000004 __malloc_max_total_mem
0000d84c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000098c8 g     F .text	00000018 __swbuf
00007a68 g     F .text	00000008 __sclose
000186a0 g       *ABS*	00000000 __alt_heap_limit
000093fc g     F .text	00000014 fclose
00002db8 g     F .text	00001688 _dtoa_r
00005798 g     F .text	0000080c _malloc_r
00009a3c g     F .text	00000030 __ascii_wctomb
0001134c g     O .rwdata	00000004 alt_errno
00005378 g     F .text	000000c4 _fwalk
0000a578 g     F .text	00000084 .hidden __divsi3
00004a88 g     F .text	00000124 _malloc_trim_r
0000f540 g       *ABS*	00000000 __CTOR_END__
00007a70 g     F .text	000000dc strcmp
0000f540 g       *ABS*	00000000 __flash_rodata_start
0000f540 g       *ABS*	00000000 __DTOR_LIST__
0000b8c0 g     F .text	00000088 .hidden __nedf2
0000d754 g     F .text	00000038 alt_irq_init
0000d4d8 g     F .text	00000064 alt_release_fd
0000f748 g     O .rodata	00000100 .hidden __clz_tab
00012e4c g     O .bss	00000004 _PathLocale
0000f1ac g     F .text	00000014 atexit
00009194 g     F .text	00000060 _write_r
000055b8 g     F .text	00000018 setlocale
00011324 g     O .rwdata	00000004 _impure_ptr
00012e68 g     O .bss	00000004 alt_argc
00004440 g     F .text	0000021c __sflush_r
0000e5b4 g     F .text	00000060 _do_dtors
000055a4 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006e30 g     F .text	00000064 __ulp
00004a70 g     F .text	00000018 __fp_unlock_all
00011338 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000055d0 g     F .text	0000000c localeconv
0000e648 g     F .text	00000050 alt_ic_isr_register
00011360 g       *ABS*	00000000 _edata
00012fac g       *ABS*	00000000 _end
00009410 g     F .text	00000164 __fputwc
00000244 g       *ABS*	00000000 __ram_exceptions_end
0000dd24 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000e720 g     F .text	0000008c alt_ic_irq_disable
00007990 g     F .text	0000007c __swrite
00011330 g     O .rwdata	00000004 __malloc_trim_threshold
00005598 g     F .text	0000000c __locale_msgcharset
0000f1c0 g     F .text	00000038 exit
0000543c g     F .text	000000c4 _fwalk_reent
00006c34 g     F .text	000001fc __mdiff
0000a5fc g     F .text	00000074 .hidden __modsi3
000186a0 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004a4c g     F .text	00000004 __sfp_lock_release
0000f50c g     F .text	00000034 _exit
0000e348 g     F .text	0000012c alt_alarm_start
000055dc g     F .text	000001bc __smakebuf_r
000006fc g     F .text	00000098 strlen
0000eb28 g     F .text	00000154 open
0000b948 g     F .text	000000dc .hidden __gedf2
00011334 g     O .rwdata	00000004 __wctomb
00007c48 g     F .text	00000018 __sprint_r
0000e614 g     F .text	00000034 alt_icache_flush_all
00011354 g     O .rwdata	00000004 alt_priority_mask
0000e698 g     F .text	00000088 alt_ic_irq_enable
0000298c g     F .text	0000001c __vfprintf_internal
00009a6c g     F .text	0000005c _wctomb_r
0000c230 g     F .text	000008fc .hidden __subdf3
00006668 g     F .text	000000b0 __lo0bits
00011358 g     O .rwdata	00000008 alt_alarm_list
0000e554 g     F .text	00000060 _do_ctors
0000997c g     F .text	000000c0 wcrtomb
0000cdd0 g     F .text	000000d0 close
0000d148 g     F .text	00000084 alt_load
00009598 g     F .text	00000080 fputwc
00004a50 g     F .text	00000004 __sinit_lock_acquire
000063dc g     F .text	00000120 __multadd
000063b4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409114 	ori	at,at,580
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	108bab04 	addi	r2,r2,11948
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	108bab04 	addi	r2,r2,11948
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e4:	000531fa 	rdctl	r2,exception
 1e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1ec:	e0bffd17 	ldw	r2,-12(fp)
 1f0:	10801f0c 	andi	r2,r2,124
 1f4:	1004d0ba 	srli	r2,r2,2
 1f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 1fc:	0005333a 	rdctl	r2,badaddr
 200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 204:	d0a6d817 	ldw	r2,-25760(gp)
 208:	10000726 	beq	r2,zero,228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 20c:	d0a6d817 	ldw	r2,-25760(gp)
 210:	e0fffd17 	ldw	r3,-12(fp)
 214:	e1bffe17 	ldw	r6,-8(fp)
 218:	e17fff17 	ldw	r5,-4(fp)
 21c:	1809883a 	mov	r4,r3
 220:	103ee83a 	callr	r2
 224:	00000206 	br	230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 22c:	0005883a 	mov	r2,zero
}
 230:	e037883a 	mov	sp,fp
 234:	dfc00117 	ldw	ra,4(sp)
 238:	df000017 	ldw	fp,0(sp)
 23c:	dec00204 	addi	sp,sp,8
 240:	f800283a 	ret

Disassembly of section .text:

00000244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
     244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
     248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
     24c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
     250:	00bffd16 	blt	zero,r2,248 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     254:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     258:	dee1a814 	ori	sp,sp,34464
    movhi gp, %hi(_gp)
     25c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     260:	d6a4c814 	ori	gp,gp,37664
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     264:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     268:	108b9314 	ori	r2,r2,11852

    movhi r3, %hi(__bss_end)
     26c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     270:	18cbeb14 	ori	r3,r3,12204

    beq r2, r3, 1f
     274:	10c00326 	beq	r2,r3,284 <_start+0x40>

0:
    stw zero, (r2)
     278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     27c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     280:	10fffd36 	bltu	r2,r3,278 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     284:	000d1480 	call	d148 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     288:	000d2dc0 	call	d2dc <alt_main>

0000028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     28c:	003fff06 	br	28c <alt_after_alt_main>

00000290 <start_mapping_listener>:

#include <stdlib.h>
#include "terasic_includes.h"
#include "addr_mapping.h"

void start_mapping_listener(alt_u32 BaseAddr, alt_u32 ByteLen) {
     290:	defff504 	addi	sp,sp,-44
     294:	dfc00a15 	stw	ra,40(sp)
     298:	df000915 	stw	fp,36(sp)
     29c:	dc000815 	stw	r16,32(sp)
     2a0:	df000904 	addi	fp,sp,36
     2a4:	e13ffd15 	stw	r4,-12(fp)
     2a8:	e17ffe15 	stw	r5,-8(fp)
     2ac:	d809883a 	mov	r4,sp
     2b0:	2021883a 	mov	r16,r4
    typedef alt_u32 my_data;
    const int item_num = 5;
     2b4:	01000144 	movi	r4,5
     2b8:	e13ff915 	stw	r4,-28(fp)

    my_data *pSrc;
    pSrc = (my_data *)BaseAddr;
     2bc:	e13ffd17 	ldw	r4,-12(fp)
     2c0:	e13ffa15 	stw	r4,-24(fp)

    my_data szData[item_num];
     2c4:	e13ff917 	ldw	r4,-28(fp)
     2c8:	213fffc4 	addi	r4,r4,-1
     2cc:	e13ffb15 	stw	r4,-20(fp)
     2d0:	e13ff917 	ldw	r4,-28(fp)
     2d4:	2015883a 	mov	r10,r4
     2d8:	0017883a 	mov	r11,zero
     2dc:	5008d6fa 	srli	r4,r10,27
     2e0:	580e917a 	slli	r7,r11,5
     2e4:	21ceb03a 	or	r7,r4,r7
     2e8:	500c917a 	slli	r6,r10,5
     2ec:	e13ff917 	ldw	r4,-28(fp)
     2f0:	2011883a 	mov	r8,r4
     2f4:	0013883a 	mov	r9,zero
     2f8:	4008d6fa 	srli	r4,r8,27
     2fc:	4806917a 	slli	r3,r9,5
     300:	20c6b03a 	or	r3,r4,r3
     304:	4004917a 	slli	r2,r8,5
     308:	e0bff917 	ldw	r2,-28(fp)
     30c:	1085883a 	add	r2,r2,r2
     310:	1085883a 	add	r2,r2,r2
     314:	108000c4 	addi	r2,r2,3
     318:	108000c4 	addi	r2,r2,3
     31c:	1004d0ba 	srli	r2,r2,2
     320:	1085883a 	add	r2,r2,r2
     324:	1085883a 	add	r2,r2,r2
     328:	d8b7c83a 	sub	sp,sp,r2
     32c:	d805883a 	mov	r2,sp
     330:	108000c4 	addi	r2,r2,3
     334:	1004d0ba 	srli	r2,r2,2
     338:	1085883a 	add	r2,r2,r2
     33c:	1085883a 	add	r2,r2,r2
     340:	e0bffc15 	stw	r2,-16(fp)
    szData[0] = 0xAAAAAAAA;
     344:	e0fffc17 	ldw	r3,-16(fp)
     348:	00aaaaf4 	movhi	r2,43691
     34c:	10aaaa84 	addi	r2,r2,-21846
     350:	18800015 	stw	r2,0(r3)
    szData[1] = 0x11111111;
     354:	e0fffc17 	ldw	r3,-16(fp)
     358:	00844474 	movhi	r2,4369
     35c:	10844444 	addi	r2,r2,4369
     360:	18800115 	stw	r2,4(r3)
    szData[2] = 0x44444444;
     364:	e0fffc17 	ldw	r3,-16(fp)
     368:	00911134 	movhi	r2,17476
     36c:	10911104 	addi	r2,r2,17476
     370:	18800215 	stw	r2,8(r3)
    szData[3] = 0x3BBEEEE1;
     374:	e0fffc17 	ldw	r3,-16(fp)
     378:	008eeff4 	movhi	r2,15295
     37c:	10bbb844 	addi	r2,r2,-4383
     380:	18800315 	stw	r2,12(r3)
    szData[4] = 0x123321AA;
     384:	e0fffc17 	ldw	r3,-16(fp)
     388:	00848cf4 	movhi	r2,4659
     38c:	10886a84 	addi	r2,r2,8618
     390:	18800415 	stw	r2,16(r3)

    memcpy(pSrc, szData, sizeof(szData));
     394:	e0fffc17 	ldw	r3,-16(fp)
     398:	e0bff917 	ldw	r2,-28(fp)
     39c:	1085883a 	add	r2,r2,r2
     3a0:	1085883a 	add	r2,r2,r2
     3a4:	100d883a 	mov	r6,r2
     3a8:	180b883a 	mov	r5,r3
     3ac:	e13ffa17 	ldw	r4,-24(fp)
     3b0:	00004740 	call	474 <memcpy>
    alt_dcache_flush_all();
     3b4:	000cea00 	call	cea0 <alt_dcache_flush_all>

    my_data *pDes;
    pDes = (my_data *)BaseAddr;
     3b8:	e0bffd17 	ldw	r2,-12(fp)
     3bc:	e0bff715 	stw	r2,-36(fp)

    int i;
    for (i = 0; i < item_num; i++) {
     3c0:	e03ff815 	stw	zero,-32(fp)
     3c4:	00000d06 	br	3fc <start_mapping_listener+0x16c>
        printf("address=%08Xh, read=%08Xh\n", pDes, (int)*pDes);
     3c8:	e0bff717 	ldw	r2,-36(fp)
     3cc:	10800017 	ldw	r2,0(r2)
     3d0:	100d883a 	mov	r6,r2
     3d4:	e17ff717 	ldw	r5,-36(fp)
     3d8:	01000074 	movhi	r4,1
     3dc:	213d5004 	addi	r4,r4,-2752
     3e0:	00005ec0 	call	5ec <printf>
        *pDes++;
     3e4:	e0bff717 	ldw	r2,-36(fp)
     3e8:	10800104 	addi	r2,r2,4
     3ec:	e0bff715 	stw	r2,-36(fp)

    my_data *pDes;
    pDes = (my_data *)BaseAddr;

    int i;
    for (i = 0; i < item_num; i++) {
     3f0:	e0bff817 	ldw	r2,-32(fp)
     3f4:	10800044 	addi	r2,r2,1
     3f8:	e0bff815 	stw	r2,-32(fp)
     3fc:	e0fff817 	ldw	r3,-32(fp)
     400:	e0bff917 	ldw	r2,-28(fp)
     404:	18bff016 	blt	r3,r2,3c8 <start_mapping_listener+0x138>
     408:	8037883a 	mov	sp,r16
        printf("address=%08Xh, read=%08Xh\n", pDes, (int)*pDes);
        *pDes++;
    }
}
     40c:	0001883a 	nop
     410:	e6ffff04 	addi	sp,fp,-4
     414:	dfc00217 	ldw	ra,8(sp)
     418:	df000117 	ldw	fp,4(sp)
     41c:	dc000017 	ldw	r16,0(sp)
     420:	dec00304 	addi	sp,sp,12
     424:	f800283a 	ret

00000428 <main>:
 */

#include <stdio.h>
#include "addr_mapping.h"

int main() {
     428:	defffe04 	addi	sp,sp,-8
     42c:	dfc00115 	stw	ra,4(sp)
     430:	df000015 	stw	fp,0(sp)
     434:	d839883a 	mov	fp,sp
    printf("Hello from Nios II!\n");
     438:	01000074 	movhi	r4,1
     43c:	213d5704 	addi	r4,r4,-2724
     440:	00006e80 	call	6e8 <puts>

    start_mapping_listener(ADDRESS_SPAN_EXTENDER_0_WINDOWED_SLAVE_BASE,
     444:	01420034 	movhi	r5,2048
     448:	01020034 	movhi	r4,2048
     44c:	00002900 	call	290 <start_mapping_listener>
            ADDRESS_SPAN_EXTENDER_0_WINDOWED_SLAVE_SPAN);

    printf("end12...");
     450:	01000074 	movhi	r4,1
     454:	213d5c04 	addi	r4,r4,-2704
     458:	00005ec0 	call	5ec <printf>

    return 0;
     45c:	0005883a 	mov	r2,zero
}
     460:	e037883a 	mov	sp,fp
     464:	dfc00117 	ldw	ra,4(sp)
     468:	df000017 	ldw	fp,0(sp)
     46c:	dec00204 	addi	sp,sp,8
     470:	f800283a 	ret

00000474 <memcpy>:
     474:	defffd04 	addi	sp,sp,-12
     478:	dfc00215 	stw	ra,8(sp)
     47c:	dc400115 	stw	r17,4(sp)
     480:	dc000015 	stw	r16,0(sp)
     484:	00c003c4 	movi	r3,15
     488:	2005883a 	mov	r2,r4
     48c:	1980452e 	bgeu	r3,r6,5a4 <memcpy+0x130>
     490:	2906b03a 	or	r3,r5,r4
     494:	18c000cc 	andi	r3,r3,3
     498:	1800441e 	bne	r3,zero,5ac <memcpy+0x138>
     49c:	347ffc04 	addi	r17,r6,-16
     4a0:	8822d13a 	srli	r17,r17,4
     4a4:	28c00104 	addi	r3,r5,4
     4a8:	23400104 	addi	r13,r4,4
     4ac:	8820913a 	slli	r16,r17,4
     4b0:	2b000204 	addi	r12,r5,8
     4b4:	22c00204 	addi	r11,r4,8
     4b8:	84000504 	addi	r16,r16,20
     4bc:	2a800304 	addi	r10,r5,12
     4c0:	22400304 	addi	r9,r4,12
     4c4:	2c21883a 	add	r16,r5,r16
     4c8:	2811883a 	mov	r8,r5
     4cc:	200f883a 	mov	r7,r4
     4d0:	41000017 	ldw	r4,0(r8)
     4d4:	1fc00017 	ldw	ra,0(r3)
     4d8:	63c00017 	ldw	r15,0(r12)
     4dc:	39000015 	stw	r4,0(r7)
     4e0:	53800017 	ldw	r14,0(r10)
     4e4:	6fc00015 	stw	ra,0(r13)
     4e8:	5bc00015 	stw	r15,0(r11)
     4ec:	4b800015 	stw	r14,0(r9)
     4f0:	18c00404 	addi	r3,r3,16
     4f4:	39c00404 	addi	r7,r7,16
     4f8:	42000404 	addi	r8,r8,16
     4fc:	6b400404 	addi	r13,r13,16
     500:	63000404 	addi	r12,r12,16
     504:	5ac00404 	addi	r11,r11,16
     508:	52800404 	addi	r10,r10,16
     50c:	4a400404 	addi	r9,r9,16
     510:	1c3fef1e 	bne	r3,r16,4d0 <memcpy+0x5c>
     514:	89c00044 	addi	r7,r17,1
     518:	380e913a 	slli	r7,r7,4
     51c:	310003cc 	andi	r4,r6,15
     520:	02c000c4 	movi	r11,3
     524:	11c7883a 	add	r3,r2,r7
     528:	29cb883a 	add	r5,r5,r7
     52c:	5900212e 	bgeu	r11,r4,5b4 <memcpy+0x140>
     530:	1813883a 	mov	r9,r3
     534:	2811883a 	mov	r8,r5
     538:	200f883a 	mov	r7,r4
     53c:	42800017 	ldw	r10,0(r8)
     540:	4a400104 	addi	r9,r9,4
     544:	39ffff04 	addi	r7,r7,-4
     548:	4abfff15 	stw	r10,-4(r9)
     54c:	42000104 	addi	r8,r8,4
     550:	59fffa36 	bltu	r11,r7,53c <memcpy+0xc8>
     554:	213fff04 	addi	r4,r4,-4
     558:	2008d0ba 	srli	r4,r4,2
     55c:	318000cc 	andi	r6,r6,3
     560:	21000044 	addi	r4,r4,1
     564:	2109883a 	add	r4,r4,r4
     568:	2109883a 	add	r4,r4,r4
     56c:	1907883a 	add	r3,r3,r4
     570:	290b883a 	add	r5,r5,r4
     574:	30000626 	beq	r6,zero,590 <memcpy+0x11c>
     578:	198d883a 	add	r6,r3,r6
     57c:	29c00003 	ldbu	r7,0(r5)
     580:	18c00044 	addi	r3,r3,1
     584:	29400044 	addi	r5,r5,1
     588:	19ffffc5 	stb	r7,-1(r3)
     58c:	19bffb1e 	bne	r3,r6,57c <memcpy+0x108>
     590:	dfc00217 	ldw	ra,8(sp)
     594:	dc400117 	ldw	r17,4(sp)
     598:	dc000017 	ldw	r16,0(sp)
     59c:	dec00304 	addi	sp,sp,12
     5a0:	f800283a 	ret
     5a4:	2007883a 	mov	r3,r4
     5a8:	003ff206 	br	574 <memcpy+0x100>
     5ac:	2007883a 	mov	r3,r4
     5b0:	003ff106 	br	578 <memcpy+0x104>
     5b4:	200d883a 	mov	r6,r4
     5b8:	003fee06 	br	574 <memcpy+0x100>

000005bc <_printf_r>:
     5bc:	defffd04 	addi	sp,sp,-12
     5c0:	2805883a 	mov	r2,r5
     5c4:	dfc00015 	stw	ra,0(sp)
     5c8:	d9800115 	stw	r6,4(sp)
     5cc:	d9c00215 	stw	r7,8(sp)
     5d0:	21400217 	ldw	r5,8(r4)
     5d4:	d9c00104 	addi	r7,sp,4
     5d8:	100d883a 	mov	r6,r2
     5dc:	00007940 	call	794 <___vfprintf_internal_r>
     5e0:	dfc00017 	ldw	ra,0(sp)
     5e4:	dec00304 	addi	sp,sp,12
     5e8:	f800283a 	ret

000005ec <printf>:
     5ec:	defffc04 	addi	sp,sp,-16
     5f0:	dfc00015 	stw	ra,0(sp)
     5f4:	d9400115 	stw	r5,4(sp)
     5f8:	d9800215 	stw	r6,8(sp)
     5fc:	d9c00315 	stw	r7,12(sp)
     600:	00800074 	movhi	r2,1
     604:	1084c904 	addi	r2,r2,4900
     608:	10800017 	ldw	r2,0(r2)
     60c:	200b883a 	mov	r5,r4
     610:	d9800104 	addi	r6,sp,4
     614:	11000217 	ldw	r4,8(r2)
     618:	000298c0 	call	298c <__vfprintf_internal>
     61c:	dfc00017 	ldw	ra,0(sp)
     620:	dec00404 	addi	sp,sp,16
     624:	f800283a 	ret

00000628 <_puts_r>:
     628:	defff604 	addi	sp,sp,-40
     62c:	dc000715 	stw	r16,28(sp)
     630:	2021883a 	mov	r16,r4
     634:	2809883a 	mov	r4,r5
     638:	dc400815 	stw	r17,32(sp)
     63c:	dfc00915 	stw	ra,36(sp)
     640:	2823883a 	mov	r17,r5
     644:	00006fc0 	call	6fc <strlen>
     648:	10c00044 	addi	r3,r2,1
     64c:	d8800115 	stw	r2,4(sp)
     650:	00800074 	movhi	r2,1
     654:	10bd5f04 	addi	r2,r2,-2692
     658:	d8800215 	stw	r2,8(sp)
     65c:	00800044 	movi	r2,1
     660:	d8800315 	stw	r2,12(sp)
     664:	00800084 	movi	r2,2
     668:	dc400015 	stw	r17,0(sp)
     66c:	d8c00615 	stw	r3,24(sp)
     670:	dec00415 	stw	sp,16(sp)
     674:	d8800515 	stw	r2,20(sp)
     678:	80000226 	beq	r16,zero,684 <_puts_r+0x5c>
     67c:	80800e17 	ldw	r2,56(r16)
     680:	10001426 	beq	r2,zero,6d4 <_puts_r+0xac>
     684:	81400217 	ldw	r5,8(r16)
     688:	2880030b 	ldhu	r2,12(r5)
     68c:	10c8000c 	andi	r3,r2,8192
     690:	1800061e 	bne	r3,zero,6ac <_puts_r+0x84>
     694:	29001917 	ldw	r4,100(r5)
     698:	00f7ffc4 	movi	r3,-8193
     69c:	10880014 	ori	r2,r2,8192
     6a0:	20c6703a 	and	r3,r4,r3
     6a4:	2880030d 	sth	r2,12(r5)
     6a8:	28c01915 	stw	r3,100(r5)
     6ac:	d9800404 	addi	r6,sp,16
     6b0:	8009883a 	mov	r4,r16
     6b4:	0004ebc0 	call	4ebc <__sfvwrite_r>
     6b8:	1000091e 	bne	r2,zero,6e0 <_puts_r+0xb8>
     6bc:	00800284 	movi	r2,10
     6c0:	dfc00917 	ldw	ra,36(sp)
     6c4:	dc400817 	ldw	r17,32(sp)
     6c8:	dc000717 	ldw	r16,28(sp)
     6cc:	dec00a04 	addi	sp,sp,40
     6d0:	f800283a 	ret
     6d4:	8009883a 	mov	r4,r16
     6d8:	0004a380 	call	4a38 <__sinit>
     6dc:	003fe906 	br	684 <_puts_r+0x5c>
     6e0:	00bfffc4 	movi	r2,-1
     6e4:	003ff606 	br	6c0 <_puts_r+0x98>

000006e8 <puts>:
     6e8:	00800074 	movhi	r2,1
     6ec:	1084c904 	addi	r2,r2,4900
     6f0:	200b883a 	mov	r5,r4
     6f4:	11000017 	ldw	r4,0(r2)
     6f8:	00006281 	jmpi	628 <_puts_r>

000006fc <strlen>:
     6fc:	208000cc 	andi	r2,r4,3
     700:	10002026 	beq	r2,zero,784 <strlen+0x88>
     704:	20800007 	ldb	r2,0(r4)
     708:	10002026 	beq	r2,zero,78c <strlen+0x90>
     70c:	2005883a 	mov	r2,r4
     710:	00000206 	br	71c <strlen+0x20>
     714:	10c00007 	ldb	r3,0(r2)
     718:	18001826 	beq	r3,zero,77c <strlen+0x80>
     71c:	10800044 	addi	r2,r2,1
     720:	10c000cc 	andi	r3,r2,3
     724:	183ffb1e 	bne	r3,zero,714 <strlen+0x18>
     728:	10c00017 	ldw	r3,0(r2)
     72c:	01ffbff4 	movhi	r7,65279
     730:	39ffbfc4 	addi	r7,r7,-257
     734:	00ca303a 	nor	r5,zero,r3
     738:	01a02074 	movhi	r6,32897
     73c:	19c7883a 	add	r3,r3,r7
     740:	31a02004 	addi	r6,r6,-32640
     744:	1946703a 	and	r3,r3,r5
     748:	1986703a 	and	r3,r3,r6
     74c:	1800091e 	bne	r3,zero,774 <strlen+0x78>
     750:	10800104 	addi	r2,r2,4
     754:	10c00017 	ldw	r3,0(r2)
     758:	19cb883a 	add	r5,r3,r7
     75c:	00c6303a 	nor	r3,zero,r3
     760:	28c6703a 	and	r3,r5,r3
     764:	1986703a 	and	r3,r3,r6
     768:	183ff926 	beq	r3,zero,750 <strlen+0x54>
     76c:	00000106 	br	774 <strlen+0x78>
     770:	10800044 	addi	r2,r2,1
     774:	10c00007 	ldb	r3,0(r2)
     778:	183ffd1e 	bne	r3,zero,770 <strlen+0x74>
     77c:	1105c83a 	sub	r2,r2,r4
     780:	f800283a 	ret
     784:	2005883a 	mov	r2,r4
     788:	003fe706 	br	728 <strlen+0x2c>
     78c:	0005883a 	mov	r2,zero
     790:	f800283a 	ret

00000794 <___vfprintf_internal_r>:
     794:	deffb804 	addi	sp,sp,-288
     798:	dfc04715 	stw	ra,284(sp)
     79c:	ddc04515 	stw	r23,276(sp)
     7a0:	dd404315 	stw	r21,268(sp)
     7a4:	d9002c15 	stw	r4,176(sp)
     7a8:	282f883a 	mov	r23,r5
     7ac:	302b883a 	mov	r21,r6
     7b0:	d9c02d15 	stw	r7,180(sp)
     7b4:	df004615 	stw	fp,280(sp)
     7b8:	dd804415 	stw	r22,272(sp)
     7bc:	dd004215 	stw	r20,264(sp)
     7c0:	dcc04115 	stw	r19,260(sp)
     7c4:	dc804015 	stw	r18,256(sp)
     7c8:	dc403f15 	stw	r17,252(sp)
     7cc:	dc003e15 	stw	r16,248(sp)
     7d0:	00055ac0 	call	55ac <_localeconv_r>
     7d4:	10800017 	ldw	r2,0(r2)
     7d8:	1009883a 	mov	r4,r2
     7dc:	d8803415 	stw	r2,208(sp)
     7e0:	00006fc0 	call	6fc <strlen>
     7e4:	d8803715 	stw	r2,220(sp)
     7e8:	d8802c17 	ldw	r2,176(sp)
     7ec:	10000226 	beq	r2,zero,7f8 <___vfprintf_internal_r+0x64>
     7f0:	10800e17 	ldw	r2,56(r2)
     7f4:	1000f926 	beq	r2,zero,bdc <___vfprintf_internal_r+0x448>
     7f8:	b880030b 	ldhu	r2,12(r23)
     7fc:	10c8000c 	andi	r3,r2,8192
     800:	1800061e 	bne	r3,zero,81c <___vfprintf_internal_r+0x88>
     804:	b9001917 	ldw	r4,100(r23)
     808:	00f7ffc4 	movi	r3,-8193
     80c:	10880014 	ori	r2,r2,8192
     810:	20c6703a 	and	r3,r4,r3
     814:	b880030d 	sth	r2,12(r23)
     818:	b8c01915 	stw	r3,100(r23)
     81c:	10c0020c 	andi	r3,r2,8
     820:	1800c126 	beq	r3,zero,b28 <___vfprintf_internal_r+0x394>
     824:	b8c00417 	ldw	r3,16(r23)
     828:	1800bf26 	beq	r3,zero,b28 <___vfprintf_internal_r+0x394>
     82c:	1080068c 	andi	r2,r2,26
     830:	00c00284 	movi	r3,10
     834:	10c0c426 	beq	r2,r3,b48 <___vfprintf_internal_r+0x3b4>
     838:	d8c00404 	addi	r3,sp,16
     83c:	05000074 	movhi	r20,1
     840:	d9001e04 	addi	r4,sp,120
     844:	a53d7084 	addi	r20,r20,-2622
     848:	d8c01e15 	stw	r3,120(sp)
     84c:	d8002015 	stw	zero,128(sp)
     850:	d8001f15 	stw	zero,124(sp)
     854:	d8003315 	stw	zero,204(sp)
     858:	d8003615 	stw	zero,216(sp)
     85c:	d8003815 	stw	zero,224(sp)
     860:	1811883a 	mov	r8,r3
     864:	d8003915 	stw	zero,228(sp)
     868:	d8003a15 	stw	zero,232(sp)
     86c:	d8002f15 	stw	zero,188(sp)
     870:	d9002815 	stw	r4,160(sp)
     874:	a8800007 	ldb	r2,0(r21)
     878:	10027b26 	beq	r2,zero,1268 <___vfprintf_internal_r+0xad4>
     87c:	00c00944 	movi	r3,37
     880:	a821883a 	mov	r16,r21
     884:	10c0021e 	bne	r2,r3,890 <___vfprintf_internal_r+0xfc>
     888:	00001406 	br	8dc <___vfprintf_internal_r+0x148>
     88c:	10c00326 	beq	r2,r3,89c <___vfprintf_internal_r+0x108>
     890:	84000044 	addi	r16,r16,1
     894:	80800007 	ldb	r2,0(r16)
     898:	103ffc1e 	bne	r2,zero,88c <___vfprintf_internal_r+0xf8>
     89c:	8563c83a 	sub	r17,r16,r21
     8a0:	88000e26 	beq	r17,zero,8dc <___vfprintf_internal_r+0x148>
     8a4:	d8c02017 	ldw	r3,128(sp)
     8a8:	d8801f17 	ldw	r2,124(sp)
     8ac:	45400015 	stw	r21,0(r8)
     8b0:	1c47883a 	add	r3,r3,r17
     8b4:	10800044 	addi	r2,r2,1
     8b8:	d8c02015 	stw	r3,128(sp)
     8bc:	44400115 	stw	r17,4(r8)
     8c0:	d8801f15 	stw	r2,124(sp)
     8c4:	00c001c4 	movi	r3,7
     8c8:	1880a716 	blt	r3,r2,b68 <___vfprintf_internal_r+0x3d4>
     8cc:	42000204 	addi	r8,r8,8
     8d0:	d9402f17 	ldw	r5,188(sp)
     8d4:	2c4b883a 	add	r5,r5,r17
     8d8:	d9402f15 	stw	r5,188(sp)
     8dc:	80800007 	ldb	r2,0(r16)
     8e0:	1000a826 	beq	r2,zero,b84 <___vfprintf_internal_r+0x3f0>
     8e4:	84400047 	ldb	r17,1(r16)
     8e8:	00bfffc4 	movi	r2,-1
     8ec:	85400044 	addi	r21,r16,1
     8f0:	d8002785 	stb	zero,158(sp)
     8f4:	0007883a 	mov	r3,zero
     8f8:	000f883a 	mov	r7,zero
     8fc:	d8802915 	stw	r2,164(sp)
     900:	d8003115 	stw	zero,196(sp)
     904:	0025883a 	mov	r18,zero
     908:	01401604 	movi	r5,88
     90c:	01800244 	movi	r6,9
     910:	02800a84 	movi	r10,42
     914:	02401b04 	movi	r9,108
     918:	ad400044 	addi	r21,r21,1
     91c:	88bff804 	addi	r2,r17,-32
     920:	28830436 	bltu	r5,r2,1534 <___vfprintf_internal_r+0xda0>
     924:	100490ba 	slli	r2,r2,2
     928:	01000034 	movhi	r4,0
     92c:	21024f04 	addi	r4,r4,2364
     930:	1105883a 	add	r2,r2,r4
     934:	10800017 	ldw	r2,0(r2)
     938:	1000683a 	jmp	r2
     93c:	00001454 	movui	zero,81
     940:	00001534 	movhi	zero,84
     944:	00001534 	movhi	zero,84
     948:	00001474 	movhi	zero,81
     94c:	00001534 	movhi	zero,84
     950:	00001534 	movhi	zero,84
     954:	00001534 	movhi	zero,84
     958:	00001534 	movhi	zero,84
     95c:	00001534 	movhi	zero,84
     960:	00001534 	movhi	zero,84
     964:	00000be8 	cmpgeui	zero,zero,47
     968:	00001390 	cmplti	zero,zero,78
     96c:	00001534 	movhi	zero,84
     970:	00000ab0 	cmpltui	zero,zero,42
     974:	00000c10 	cmplti	zero,zero,48
     978:	00001534 	movhi	zero,84
     97c:	00000c50 	cmplti	zero,zero,49
     980:	00000c5c 	xori	zero,zero,49
     984:	00000c5c 	xori	zero,zero,49
     988:	00000c5c 	xori	zero,zero,49
     98c:	00000c5c 	xori	zero,zero,49
     990:	00000c5c 	xori	zero,zero,49
     994:	00000c5c 	xori	zero,zero,49
     998:	00000c5c 	xori	zero,zero,49
     99c:	00000c5c 	xori	zero,zero,49
     9a0:	00000c5c 	xori	zero,zero,49
     9a4:	00001534 	movhi	zero,84
     9a8:	00001534 	movhi	zero,84
     9ac:	00001534 	movhi	zero,84
     9b0:	00001534 	movhi	zero,84
     9b4:	00001534 	movhi	zero,84
     9b8:	00001534 	movhi	zero,84
     9bc:	00001534 	movhi	zero,84
     9c0:	00001534 	movhi	zero,84
     9c4:	00001534 	movhi	zero,84
     9c8:	00001534 	movhi	zero,84
     9cc:	00000c90 	cmplti	zero,zero,50
     9d0:	00000d4c 	andi	zero,zero,53
     9d4:	00001534 	movhi	zero,84
     9d8:	00000d4c 	andi	zero,zero,53
     9dc:	00001534 	movhi	zero,84
     9e0:	00001534 	movhi	zero,84
     9e4:	00001534 	movhi	zero,84
     9e8:	00001534 	movhi	zero,84
     9ec:	00000dec 	andhi	zero,zero,55
     9f0:	00001534 	movhi	zero,84
     9f4:	00001534 	movhi	zero,84
     9f8:	00000df8 	rdprs	zero,zero,55
     9fc:	00001534 	movhi	zero,84
     a00:	00001534 	movhi	zero,84
     a04:	00001534 	movhi	zero,84
     a08:	00001534 	movhi	zero,84
     a0c:	00001534 	movhi	zero,84
     a10:	00001270 	cmpltui	zero,zero,73
     a14:	00001534 	movhi	zero,84
     a18:	00001534 	movhi	zero,84
     a1c:	000012d0 	cmplti	zero,zero,75
     a20:	00001534 	movhi	zero,84
     a24:	00001534 	movhi	zero,84
     a28:	00001534 	movhi	zero,84
     a2c:	00001534 	movhi	zero,84
     a30:	00001534 	movhi	zero,84
     a34:	00001534 	movhi	zero,84
     a38:	00001534 	movhi	zero,84
     a3c:	00001534 	movhi	zero,84
     a40:	00001534 	movhi	zero,84
     a44:	00001534 	movhi	zero,84
     a48:	000014e0 	cmpeqi	zero,zero,83
     a4c:	00001480 	call	148 <alt_irq_handler+0x4c>
     a50:	00000d4c 	andi	zero,zero,53
     a54:	00000d4c 	andi	zero,zero,53
     a58:	00000d4c 	andi	zero,zero,53
     a5c:	00001490 	cmplti	zero,zero,82
     a60:	00001480 	call	148 <alt_irq_handler+0x4c>
     a64:	00001534 	movhi	zero,84
     a68:	00001534 	movhi	zero,84
     a6c:	0000149c 	xori	zero,zero,82
     a70:	00001534 	movhi	zero,84
     a74:	000014ac 	andhi	zero,zero,82
     a78:	00001380 	call	138 <alt_irq_handler+0x3c>
     a7c:	00000abc 	xorhi	zero,zero,42
     a80:	000013a0 	cmpeqi	zero,zero,78
     a84:	00001534 	movhi	zero,84
     a88:	000013ac 	andhi	zero,zero,78
     a8c:	00001534 	movhi	zero,84
     a90:	00001408 	cmpgei	zero,zero,80
     a94:	00001534 	movhi	zero,84
     a98:	00001534 	movhi	zero,84
     a9c:	00001418 	cmpnei	zero,zero,80
     aa0:	d9003117 	ldw	r4,196(sp)
     aa4:	d8802d15 	stw	r2,180(sp)
     aa8:	0109c83a 	sub	r4,zero,r4
     aac:	d9003115 	stw	r4,196(sp)
     ab0:	94800114 	ori	r18,r18,4
     ab4:	ac400007 	ldb	r17,0(r21)
     ab8:	003f9706 	br	918 <___vfprintf_internal_r+0x184>
     abc:	00800c04 	movi	r2,48
     ac0:	d9002d17 	ldw	r4,180(sp)
     ac4:	d9402917 	ldw	r5,164(sp)
     ac8:	d8802705 	stb	r2,156(sp)
     acc:	00801e04 	movi	r2,120
     ad0:	d8802745 	stb	r2,157(sp)
     ad4:	d8002785 	stb	zero,158(sp)
     ad8:	20c00104 	addi	r3,r4,4
     adc:	24c00017 	ldw	r19,0(r4)
     ae0:	002d883a 	mov	r22,zero
     ae4:	90800094 	ori	r2,r18,2
     ae8:	28029a16 	blt	r5,zero,1554 <___vfprintf_internal_r+0xdc0>
     aec:	00bfdfc4 	movi	r2,-129
     af0:	90a4703a 	and	r18,r18,r2
     af4:	d8c02d15 	stw	r3,180(sp)
     af8:	94800094 	ori	r18,r18,2
     afc:	9802871e 	bne	r19,zero,151c <___vfprintf_internal_r+0xd88>
     b00:	00800074 	movhi	r2,1
     b04:	10bd6904 	addi	r2,r2,-2652
     b08:	d8803915 	stw	r2,228(sp)
     b0c:	04401e04 	movi	r17,120
     b10:	d8802917 	ldw	r2,164(sp)
     b14:	0039883a 	mov	fp,zero
     b18:	1001e926 	beq	r2,zero,12c0 <___vfprintf_internal_r+0xb2c>
     b1c:	0027883a 	mov	r19,zero
     b20:	002d883a 	mov	r22,zero
     b24:	00020506 	br	133c <___vfprintf_internal_r+0xba8>
     b28:	d9002c17 	ldw	r4,176(sp)
     b2c:	b80b883a 	mov	r5,r23
     b30:	0002a640 	call	2a64 <__swsetup_r>
     b34:	1005ac1e 	bne	r2,zero,21e8 <___vfprintf_internal_r+0x1a54>
     b38:	b880030b 	ldhu	r2,12(r23)
     b3c:	00c00284 	movi	r3,10
     b40:	1080068c 	andi	r2,r2,26
     b44:	10ff3c1e 	bne	r2,r3,838 <___vfprintf_internal_r+0xa4>
     b48:	b880038f 	ldh	r2,14(r23)
     b4c:	103f3a16 	blt	r2,zero,838 <___vfprintf_internal_r+0xa4>
     b50:	d9c02d17 	ldw	r7,180(sp)
     b54:	d9002c17 	ldw	r4,176(sp)
     b58:	a80d883a 	mov	r6,r21
     b5c:	b80b883a 	mov	r5,r23
     b60:	00029a80 	call	29a8 <__sbprintf>
     b64:	00001106 	br	bac <___vfprintf_internal_r+0x418>
     b68:	d9002c17 	ldw	r4,176(sp)
     b6c:	d9801e04 	addi	r6,sp,120
     b70:	b80b883a 	mov	r5,r23
     b74:	0007c480 	call	7c48 <__sprint_r>
     b78:	1000081e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
     b7c:	da000404 	addi	r8,sp,16
     b80:	003f5306 	br	8d0 <___vfprintf_internal_r+0x13c>
     b84:	d8802017 	ldw	r2,128(sp)
     b88:	10000426 	beq	r2,zero,b9c <___vfprintf_internal_r+0x408>
     b8c:	d9002c17 	ldw	r4,176(sp)
     b90:	d9801e04 	addi	r6,sp,120
     b94:	b80b883a 	mov	r5,r23
     b98:	0007c480 	call	7c48 <__sprint_r>
     b9c:	b880030b 	ldhu	r2,12(r23)
     ba0:	1080100c 	andi	r2,r2,64
     ba4:	1005901e 	bne	r2,zero,21e8 <___vfprintf_internal_r+0x1a54>
     ba8:	d8802f17 	ldw	r2,188(sp)
     bac:	dfc04717 	ldw	ra,284(sp)
     bb0:	df004617 	ldw	fp,280(sp)
     bb4:	ddc04517 	ldw	r23,276(sp)
     bb8:	dd804417 	ldw	r22,272(sp)
     bbc:	dd404317 	ldw	r21,268(sp)
     bc0:	dd004217 	ldw	r20,264(sp)
     bc4:	dcc04117 	ldw	r19,260(sp)
     bc8:	dc804017 	ldw	r18,256(sp)
     bcc:	dc403f17 	ldw	r17,252(sp)
     bd0:	dc003e17 	ldw	r16,248(sp)
     bd4:	dec04804 	addi	sp,sp,288
     bd8:	f800283a 	ret
     bdc:	d9002c17 	ldw	r4,176(sp)
     be0:	0004a380 	call	4a38 <__sinit>
     be4:	003f0406 	br	7f8 <___vfprintf_internal_r+0x64>
     be8:	d8802d17 	ldw	r2,180(sp)
     bec:	d9002d17 	ldw	r4,180(sp)
     bf0:	10800017 	ldw	r2,0(r2)
     bf4:	d8803115 	stw	r2,196(sp)
     bf8:	20800104 	addi	r2,r4,4
     bfc:	d9003117 	ldw	r4,196(sp)
     c00:	203fa716 	blt	r4,zero,aa0 <___vfprintf_internal_r+0x30c>
     c04:	d8802d15 	stw	r2,180(sp)
     c08:	ac400007 	ldb	r17,0(r21)
     c0c:	003f4206 	br	918 <___vfprintf_internal_r+0x184>
     c10:	ac400007 	ldb	r17,0(r21)
     c14:	aac00044 	addi	r11,r21,1
     c18:	8a872826 	beq	r17,r10,28bc <___vfprintf_internal_r+0x2128>
     c1c:	88bff404 	addi	r2,r17,-48
     c20:	0009883a 	mov	r4,zero
     c24:	30867d36 	bltu	r6,r2,261c <___vfprintf_internal_r+0x1e88>
     c28:	5c400007 	ldb	r17,0(r11)
     c2c:	210002a4 	muli	r4,r4,10
     c30:	5d400044 	addi	r21,r11,1
     c34:	a817883a 	mov	r11,r21
     c38:	2089883a 	add	r4,r4,r2
     c3c:	88bff404 	addi	r2,r17,-48
     c40:	30bff92e 	bgeu	r6,r2,c28 <___vfprintf_internal_r+0x494>
     c44:	2005c916 	blt	r4,zero,236c <___vfprintf_internal_r+0x1bd8>
     c48:	d9002915 	stw	r4,164(sp)
     c4c:	003f3306 	br	91c <___vfprintf_internal_r+0x188>
     c50:	94802014 	ori	r18,r18,128
     c54:	ac400007 	ldb	r17,0(r21)
     c58:	003f2f06 	br	918 <___vfprintf_internal_r+0x184>
     c5c:	a809883a 	mov	r4,r21
     c60:	d8003115 	stw	zero,196(sp)
     c64:	88bff404 	addi	r2,r17,-48
     c68:	0017883a 	mov	r11,zero
     c6c:	24400007 	ldb	r17,0(r4)
     c70:	5ac002a4 	muli	r11,r11,10
     c74:	ad400044 	addi	r21,r21,1
     c78:	a809883a 	mov	r4,r21
     c7c:	12d7883a 	add	r11,r2,r11
     c80:	88bff404 	addi	r2,r17,-48
     c84:	30bff92e 	bgeu	r6,r2,c6c <___vfprintf_internal_r+0x4d8>
     c88:	dac03115 	stw	r11,196(sp)
     c8c:	003f2306 	br	91c <___vfprintf_internal_r+0x188>
     c90:	18c03fcc 	andi	r3,r3,255
     c94:	18072b1e 	bne	r3,zero,2944 <___vfprintf_internal_r+0x21b0>
     c98:	94800414 	ori	r18,r18,16
     c9c:	9080080c 	andi	r2,r18,32
     ca0:	10037b26 	beq	r2,zero,1a90 <___vfprintf_internal_r+0x12fc>
     ca4:	d9402d17 	ldw	r5,180(sp)
     ca8:	28800117 	ldw	r2,4(r5)
     cac:	2cc00017 	ldw	r19,0(r5)
     cb0:	29400204 	addi	r5,r5,8
     cb4:	d9402d15 	stw	r5,180(sp)
     cb8:	102d883a 	mov	r22,r2
     cbc:	10044b16 	blt	r2,zero,1dec <___vfprintf_internal_r+0x1658>
     cc0:	d9402917 	ldw	r5,164(sp)
     cc4:	df002783 	ldbu	fp,158(sp)
     cc8:	2803bc16 	blt	r5,zero,1bbc <___vfprintf_internal_r+0x1428>
     ccc:	00ffdfc4 	movi	r3,-129
     cd0:	9d84b03a 	or	r2,r19,r22
     cd4:	90e4703a 	and	r18,r18,r3
     cd8:	10017726 	beq	r2,zero,12b8 <___vfprintf_internal_r+0xb24>
     cdc:	b0038326 	beq	r22,zero,1aec <___vfprintf_internal_r+0x1358>
     ce0:	dc402a15 	stw	r17,168(sp)
     ce4:	dc001e04 	addi	r16,sp,120
     ce8:	b023883a 	mov	r17,r22
     cec:	402d883a 	mov	r22,r8
     cf0:	9809883a 	mov	r4,r19
     cf4:	880b883a 	mov	r5,r17
     cf8:	01800284 	movi	r6,10
     cfc:	000f883a 	mov	r7,zero
     d00:	000a0400 	call	a040 <__umoddi3>
     d04:	10800c04 	addi	r2,r2,48
     d08:	843fffc4 	addi	r16,r16,-1
     d0c:	9809883a 	mov	r4,r19
     d10:	880b883a 	mov	r5,r17
     d14:	80800005 	stb	r2,0(r16)
     d18:	01800284 	movi	r6,10
     d1c:	000f883a 	mov	r7,zero
     d20:	0009ac80 	call	9ac8 <__udivdi3>
     d24:	1027883a 	mov	r19,r2
     d28:	10c4b03a 	or	r2,r2,r3
     d2c:	1823883a 	mov	r17,r3
     d30:	103fef1e 	bne	r2,zero,cf0 <___vfprintf_internal_r+0x55c>
     d34:	d8c02817 	ldw	r3,160(sp)
     d38:	dc402a17 	ldw	r17,168(sp)
     d3c:	b011883a 	mov	r8,r22
     d40:	1c07c83a 	sub	r3,r3,r16
     d44:	d8c02e15 	stw	r3,184(sp)
     d48:	00005906 	br	eb0 <___vfprintf_internal_r+0x71c>
     d4c:	18c03fcc 	andi	r3,r3,255
     d50:	1806fa1e 	bne	r3,zero,293c <___vfprintf_internal_r+0x21a8>
     d54:	9080020c 	andi	r2,r18,8
     d58:	10048a26 	beq	r2,zero,1f84 <___vfprintf_internal_r+0x17f0>
     d5c:	d8c02d17 	ldw	r3,180(sp)
     d60:	d9002d17 	ldw	r4,180(sp)
     d64:	d9402d17 	ldw	r5,180(sp)
     d68:	18c00017 	ldw	r3,0(r3)
     d6c:	21000117 	ldw	r4,4(r4)
     d70:	29400204 	addi	r5,r5,8
     d74:	d8c03615 	stw	r3,216(sp)
     d78:	d9003815 	stw	r4,224(sp)
     d7c:	d9402d15 	stw	r5,180(sp)
     d80:	d9003617 	ldw	r4,216(sp)
     d84:	d9403817 	ldw	r5,224(sp)
     d88:	da003d15 	stw	r8,244(sp)
     d8c:	04000044 	movi	r16,1
     d90:	000786c0 	call	786c <__fpclassifyd>
     d94:	da003d17 	ldw	r8,244(sp)
     d98:	14041f1e 	bne	r2,r16,1e18 <___vfprintf_internal_r+0x1684>
     d9c:	d9003617 	ldw	r4,216(sp)
     da0:	d9403817 	ldw	r5,224(sp)
     da4:	000d883a 	mov	r6,zero
     da8:	000f883a 	mov	r7,zero
     dac:	000ba240 	call	ba24 <__ledf2>
     db0:	da003d17 	ldw	r8,244(sp)
     db4:	1005be16 	blt	r2,zero,24b0 <___vfprintf_internal_r+0x1d1c>
     db8:	df002783 	ldbu	fp,158(sp)
     dbc:	008011c4 	movi	r2,71
     dc0:	1445330e 	bge	r2,r17,2290 <___vfprintf_internal_r+0x1afc>
     dc4:	04000074 	movhi	r16,1
     dc8:	843d6104 	addi	r16,r16,-2684
     dcc:	00c000c4 	movi	r3,3
     dd0:	00bfdfc4 	movi	r2,-129
     dd4:	d8c02a15 	stw	r3,168(sp)
     dd8:	90a4703a 	and	r18,r18,r2
     ddc:	d8c02e15 	stw	r3,184(sp)
     de0:	d8002915 	stw	zero,164(sp)
     de4:	d8003215 	stw	zero,200(sp)
     de8:	00003706 	br	ec8 <___vfprintf_internal_r+0x734>
     dec:	94800214 	ori	r18,r18,8
     df0:	ac400007 	ldb	r17,0(r21)
     df4:	003ec806 	br	918 <___vfprintf_internal_r+0x184>
     df8:	18c03fcc 	andi	r3,r3,255
     dfc:	1806db1e 	bne	r3,zero,296c <___vfprintf_internal_r+0x21d8>
     e00:	94800414 	ori	r18,r18,16
     e04:	9080080c 	andi	r2,r18,32
     e08:	1002d826 	beq	r2,zero,196c <___vfprintf_internal_r+0x11d8>
     e0c:	d9402d17 	ldw	r5,180(sp)
     e10:	d8c02917 	ldw	r3,164(sp)
     e14:	d8002785 	stb	zero,158(sp)
     e18:	28800204 	addi	r2,r5,8
     e1c:	2cc00017 	ldw	r19,0(r5)
     e20:	2d800117 	ldw	r22,4(r5)
     e24:	18048f16 	blt	r3,zero,2064 <___vfprintf_internal_r+0x18d0>
     e28:	013fdfc4 	movi	r4,-129
     e2c:	9d86b03a 	or	r3,r19,r22
     e30:	d8802d15 	stw	r2,180(sp)
     e34:	9124703a 	and	r18,r18,r4
     e38:	1802d91e 	bne	r3,zero,19a0 <___vfprintf_internal_r+0x120c>
     e3c:	d8c02917 	ldw	r3,164(sp)
     e40:	0039883a 	mov	fp,zero
     e44:	1805c326 	beq	r3,zero,2554 <___vfprintf_internal_r+0x1dc0>
     e48:	0027883a 	mov	r19,zero
     e4c:	002d883a 	mov	r22,zero
     e50:	dc001e04 	addi	r16,sp,120
     e54:	9806d0fa 	srli	r3,r19,3
     e58:	b008977a 	slli	r4,r22,29
     e5c:	b02cd0fa 	srli	r22,r22,3
     e60:	9cc001cc 	andi	r19,r19,7
     e64:	98800c04 	addi	r2,r19,48
     e68:	843fffc4 	addi	r16,r16,-1
     e6c:	20e6b03a 	or	r19,r4,r3
     e70:	80800005 	stb	r2,0(r16)
     e74:	9d86b03a 	or	r3,r19,r22
     e78:	183ff61e 	bne	r3,zero,e54 <___vfprintf_internal_r+0x6c0>
     e7c:	90c0004c 	andi	r3,r18,1
     e80:	18013b26 	beq	r3,zero,1370 <___vfprintf_internal_r+0xbdc>
     e84:	10803fcc 	andi	r2,r2,255
     e88:	1080201c 	xori	r2,r2,128
     e8c:	10bfe004 	addi	r2,r2,-128
     e90:	00c00c04 	movi	r3,48
     e94:	10c13626 	beq	r2,r3,1370 <___vfprintf_internal_r+0xbdc>
     e98:	80ffffc5 	stb	r3,-1(r16)
     e9c:	d8c02817 	ldw	r3,160(sp)
     ea0:	80bfffc4 	addi	r2,r16,-1
     ea4:	1021883a 	mov	r16,r2
     ea8:	1887c83a 	sub	r3,r3,r2
     eac:	d8c02e15 	stw	r3,184(sp)
     eb0:	d8802e17 	ldw	r2,184(sp)
     eb4:	d9002917 	ldw	r4,164(sp)
     eb8:	1100010e 	bge	r2,r4,ec0 <___vfprintf_internal_r+0x72c>
     ebc:	2005883a 	mov	r2,r4
     ec0:	d8802a15 	stw	r2,168(sp)
     ec4:	d8003215 	stw	zero,200(sp)
     ec8:	e7003fcc 	andi	fp,fp,255
     ecc:	e700201c 	xori	fp,fp,128
     ed0:	e73fe004 	addi	fp,fp,-128
     ed4:	e0000326 	beq	fp,zero,ee4 <___vfprintf_internal_r+0x750>
     ed8:	d8c02a17 	ldw	r3,168(sp)
     edc:	18c00044 	addi	r3,r3,1
     ee0:	d8c02a15 	stw	r3,168(sp)
     ee4:	90c0008c 	andi	r3,r18,2
     ee8:	d8c02b15 	stw	r3,172(sp)
     eec:	18000326 	beq	r3,zero,efc <___vfprintf_internal_r+0x768>
     ef0:	d8c02a17 	ldw	r3,168(sp)
     ef4:	18c00084 	addi	r3,r3,2
     ef8:	d8c02a15 	stw	r3,168(sp)
     efc:	90c0210c 	andi	r3,r18,132
     f00:	d8c03015 	stw	r3,192(sp)
     f04:	1801a31e 	bne	r3,zero,1594 <___vfprintf_internal_r+0xe00>
     f08:	d9003117 	ldw	r4,196(sp)
     f0c:	d8c02a17 	ldw	r3,168(sp)
     f10:	20e7c83a 	sub	r19,r4,r3
     f14:	04c19f0e 	bge	zero,r19,1594 <___vfprintf_internal_r+0xe00>
     f18:	02400404 	movi	r9,16
     f1c:	d8c02017 	ldw	r3,128(sp)
     f20:	d8801f17 	ldw	r2,124(sp)
     f24:	4cc50d0e 	bge	r9,r19,235c <___vfprintf_internal_r+0x1bc8>
     f28:	01400074 	movhi	r5,1
     f2c:	297d7484 	addi	r5,r5,-2606
     f30:	dc403b15 	stw	r17,236(sp)
     f34:	d9403515 	stw	r5,212(sp)
     f38:	9823883a 	mov	r17,r19
     f3c:	482d883a 	mov	r22,r9
     f40:	9027883a 	mov	r19,r18
     f44:	070001c4 	movi	fp,7
     f48:	8025883a 	mov	r18,r16
     f4c:	dc002c17 	ldw	r16,176(sp)
     f50:	00000306 	br	f60 <___vfprintf_internal_r+0x7cc>
     f54:	8c7ffc04 	addi	r17,r17,-16
     f58:	42000204 	addi	r8,r8,8
     f5c:	b440130e 	bge	r22,r17,fac <___vfprintf_internal_r+0x818>
     f60:	01000074 	movhi	r4,1
     f64:	18c00404 	addi	r3,r3,16
     f68:	10800044 	addi	r2,r2,1
     f6c:	213d7484 	addi	r4,r4,-2606
     f70:	41000015 	stw	r4,0(r8)
     f74:	45800115 	stw	r22,4(r8)
     f78:	d8c02015 	stw	r3,128(sp)
     f7c:	d8801f15 	stw	r2,124(sp)
     f80:	e0bff40e 	bge	fp,r2,f54 <___vfprintf_internal_r+0x7c0>
     f84:	d9801e04 	addi	r6,sp,120
     f88:	b80b883a 	mov	r5,r23
     f8c:	8009883a 	mov	r4,r16
     f90:	0007c480 	call	7c48 <__sprint_r>
     f94:	103f011e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
     f98:	8c7ffc04 	addi	r17,r17,-16
     f9c:	d8c02017 	ldw	r3,128(sp)
     fa0:	d8801f17 	ldw	r2,124(sp)
     fa4:	da000404 	addi	r8,sp,16
     fa8:	b47fed16 	blt	r22,r17,f60 <___vfprintf_internal_r+0x7cc>
     fac:	9021883a 	mov	r16,r18
     fb0:	9825883a 	mov	r18,r19
     fb4:	8827883a 	mov	r19,r17
     fb8:	dc403b17 	ldw	r17,236(sp)
     fbc:	d9403517 	ldw	r5,212(sp)
     fc0:	98c7883a 	add	r3,r19,r3
     fc4:	10800044 	addi	r2,r2,1
     fc8:	41400015 	stw	r5,0(r8)
     fcc:	44c00115 	stw	r19,4(r8)
     fd0:	d8c02015 	stw	r3,128(sp)
     fd4:	d8801f15 	stw	r2,124(sp)
     fd8:	010001c4 	movi	r4,7
     fdc:	2082a316 	blt	r4,r2,1a6c <___vfprintf_internal_r+0x12d8>
     fe0:	df002787 	ldb	fp,158(sp)
     fe4:	42000204 	addi	r8,r8,8
     fe8:	e0000c26 	beq	fp,zero,101c <___vfprintf_internal_r+0x888>
     fec:	d8801f17 	ldw	r2,124(sp)
     ff0:	d9002784 	addi	r4,sp,158
     ff4:	18c00044 	addi	r3,r3,1
     ff8:	10800044 	addi	r2,r2,1
     ffc:	41000015 	stw	r4,0(r8)
    1000:	01000044 	movi	r4,1
    1004:	41000115 	stw	r4,4(r8)
    1008:	d8c02015 	stw	r3,128(sp)
    100c:	d8801f15 	stw	r2,124(sp)
    1010:	010001c4 	movi	r4,7
    1014:	20823c16 	blt	r4,r2,1908 <___vfprintf_internal_r+0x1174>
    1018:	42000204 	addi	r8,r8,8
    101c:	d8802b17 	ldw	r2,172(sp)
    1020:	10000c26 	beq	r2,zero,1054 <___vfprintf_internal_r+0x8c0>
    1024:	d8801f17 	ldw	r2,124(sp)
    1028:	d9002704 	addi	r4,sp,156
    102c:	18c00084 	addi	r3,r3,2
    1030:	10800044 	addi	r2,r2,1
    1034:	41000015 	stw	r4,0(r8)
    1038:	01000084 	movi	r4,2
    103c:	41000115 	stw	r4,4(r8)
    1040:	d8c02015 	stw	r3,128(sp)
    1044:	d8801f15 	stw	r2,124(sp)
    1048:	010001c4 	movi	r4,7
    104c:	20823616 	blt	r4,r2,1928 <___vfprintf_internal_r+0x1194>
    1050:	42000204 	addi	r8,r8,8
    1054:	d9003017 	ldw	r4,192(sp)
    1058:	00802004 	movi	r2,128
    105c:	20819926 	beq	r4,r2,16c4 <___vfprintf_internal_r+0xf30>
    1060:	d9402917 	ldw	r5,164(sp)
    1064:	d8802e17 	ldw	r2,184(sp)
    1068:	28adc83a 	sub	r22,r5,r2
    106c:	0580310e 	bge	zero,r22,1134 <___vfprintf_internal_r+0x9a0>
    1070:	07000404 	movi	fp,16
    1074:	d8801f17 	ldw	r2,124(sp)
    1078:	e584140e 	bge	fp,r22,20cc <___vfprintf_internal_r+0x1938>
    107c:	01400074 	movhi	r5,1
    1080:	297d7084 	addi	r5,r5,-2622
    1084:	dc402915 	stw	r17,164(sp)
    1088:	d9402b15 	stw	r5,172(sp)
    108c:	b023883a 	mov	r17,r22
    1090:	04c001c4 	movi	r19,7
    1094:	a82d883a 	mov	r22,r21
    1098:	902b883a 	mov	r21,r18
    109c:	8025883a 	mov	r18,r16
    10a0:	dc002c17 	ldw	r16,176(sp)
    10a4:	00000306 	br	10b4 <___vfprintf_internal_r+0x920>
    10a8:	8c7ffc04 	addi	r17,r17,-16
    10ac:	42000204 	addi	r8,r8,8
    10b0:	e440110e 	bge	fp,r17,10f8 <___vfprintf_internal_r+0x964>
    10b4:	18c00404 	addi	r3,r3,16
    10b8:	10800044 	addi	r2,r2,1
    10bc:	45000015 	stw	r20,0(r8)
    10c0:	47000115 	stw	fp,4(r8)
    10c4:	d8c02015 	stw	r3,128(sp)
    10c8:	d8801f15 	stw	r2,124(sp)
    10cc:	98bff60e 	bge	r19,r2,10a8 <___vfprintf_internal_r+0x914>
    10d0:	d9801e04 	addi	r6,sp,120
    10d4:	b80b883a 	mov	r5,r23
    10d8:	8009883a 	mov	r4,r16
    10dc:	0007c480 	call	7c48 <__sprint_r>
    10e0:	103eae1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    10e4:	8c7ffc04 	addi	r17,r17,-16
    10e8:	d8c02017 	ldw	r3,128(sp)
    10ec:	d8801f17 	ldw	r2,124(sp)
    10f0:	da000404 	addi	r8,sp,16
    10f4:	e47fef16 	blt	fp,r17,10b4 <___vfprintf_internal_r+0x920>
    10f8:	9021883a 	mov	r16,r18
    10fc:	a825883a 	mov	r18,r21
    1100:	b02b883a 	mov	r21,r22
    1104:	882d883a 	mov	r22,r17
    1108:	dc402917 	ldw	r17,164(sp)
    110c:	d9002b17 	ldw	r4,172(sp)
    1110:	1d87883a 	add	r3,r3,r22
    1114:	10800044 	addi	r2,r2,1
    1118:	41000015 	stw	r4,0(r8)
    111c:	45800115 	stw	r22,4(r8)
    1120:	d8c02015 	stw	r3,128(sp)
    1124:	d8801f15 	stw	r2,124(sp)
    1128:	010001c4 	movi	r4,7
    112c:	2081ee16 	blt	r4,r2,18e8 <___vfprintf_internal_r+0x1154>
    1130:	42000204 	addi	r8,r8,8
    1134:	9080400c 	andi	r2,r18,256
    1138:	1001181e 	bne	r2,zero,159c <___vfprintf_internal_r+0xe08>
    113c:	d9402e17 	ldw	r5,184(sp)
    1140:	d8801f17 	ldw	r2,124(sp)
    1144:	44000015 	stw	r16,0(r8)
    1148:	1947883a 	add	r3,r3,r5
    114c:	10800044 	addi	r2,r2,1
    1150:	41400115 	stw	r5,4(r8)
    1154:	d8c02015 	stw	r3,128(sp)
    1158:	d8801f15 	stw	r2,124(sp)
    115c:	010001c4 	movi	r4,7
    1160:	2081d316 	blt	r4,r2,18b0 <___vfprintf_internal_r+0x111c>
    1164:	42000204 	addi	r8,r8,8
    1168:	9480010c 	andi	r18,r18,4
    116c:	90003226 	beq	r18,zero,1238 <___vfprintf_internal_r+0xaa4>
    1170:	d9403117 	ldw	r5,196(sp)
    1174:	d8802a17 	ldw	r2,168(sp)
    1178:	28a1c83a 	sub	r16,r5,r2
    117c:	04002e0e 	bge	zero,r16,1238 <___vfprintf_internal_r+0xaa4>
    1180:	04400404 	movi	r17,16
    1184:	d8801f17 	ldw	r2,124(sp)
    1188:	8c04a20e 	bge	r17,r16,2414 <___vfprintf_internal_r+0x1c80>
    118c:	01400074 	movhi	r5,1
    1190:	297d7484 	addi	r5,r5,-2606
    1194:	d9403515 	stw	r5,212(sp)
    1198:	048001c4 	movi	r18,7
    119c:	dcc02c17 	ldw	r19,176(sp)
    11a0:	00000306 	br	11b0 <___vfprintf_internal_r+0xa1c>
    11a4:	843ffc04 	addi	r16,r16,-16
    11a8:	42000204 	addi	r8,r8,8
    11ac:	8c00130e 	bge	r17,r16,11fc <___vfprintf_internal_r+0xa68>
    11b0:	01000074 	movhi	r4,1
    11b4:	18c00404 	addi	r3,r3,16
    11b8:	10800044 	addi	r2,r2,1
    11bc:	213d7484 	addi	r4,r4,-2606
    11c0:	41000015 	stw	r4,0(r8)
    11c4:	44400115 	stw	r17,4(r8)
    11c8:	d8c02015 	stw	r3,128(sp)
    11cc:	d8801f15 	stw	r2,124(sp)
    11d0:	90bff40e 	bge	r18,r2,11a4 <___vfprintf_internal_r+0xa10>
    11d4:	d9801e04 	addi	r6,sp,120
    11d8:	b80b883a 	mov	r5,r23
    11dc:	9809883a 	mov	r4,r19
    11e0:	0007c480 	call	7c48 <__sprint_r>
    11e4:	103e6d1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    11e8:	843ffc04 	addi	r16,r16,-16
    11ec:	d8c02017 	ldw	r3,128(sp)
    11f0:	d8801f17 	ldw	r2,124(sp)
    11f4:	da000404 	addi	r8,sp,16
    11f8:	8c3fed16 	blt	r17,r16,11b0 <___vfprintf_internal_r+0xa1c>
    11fc:	d9403517 	ldw	r5,212(sp)
    1200:	1c07883a 	add	r3,r3,r16
    1204:	10800044 	addi	r2,r2,1
    1208:	41400015 	stw	r5,0(r8)
    120c:	44000115 	stw	r16,4(r8)
    1210:	d8c02015 	stw	r3,128(sp)
    1214:	d8801f15 	stw	r2,124(sp)
    1218:	010001c4 	movi	r4,7
    121c:	2080060e 	bge	r4,r2,1238 <___vfprintf_internal_r+0xaa4>
    1220:	d9002c17 	ldw	r4,176(sp)
    1224:	d9801e04 	addi	r6,sp,120
    1228:	b80b883a 	mov	r5,r23
    122c:	0007c480 	call	7c48 <__sprint_r>
    1230:	103e5a1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1234:	d8c02017 	ldw	r3,128(sp)
    1238:	d8803117 	ldw	r2,196(sp)
    123c:	d9002a17 	ldw	r4,168(sp)
    1240:	1100010e 	bge	r2,r4,1248 <___vfprintf_internal_r+0xab4>
    1244:	2005883a 	mov	r2,r4
    1248:	d9402f17 	ldw	r5,188(sp)
    124c:	288b883a 	add	r5,r5,r2
    1250:	d9402f15 	stw	r5,188(sp)
    1254:	18019e1e 	bne	r3,zero,18d0 <___vfprintf_internal_r+0x113c>
    1258:	a8800007 	ldb	r2,0(r21)
    125c:	d8001f15 	stw	zero,124(sp)
    1260:	da000404 	addi	r8,sp,16
    1264:	103d851e 	bne	r2,zero,87c <___vfprintf_internal_r+0xe8>
    1268:	a821883a 	mov	r16,r21
    126c:	003d9b06 	br	8dc <___vfprintf_internal_r+0x148>
    1270:	18c03fcc 	andi	r3,r3,255
    1274:	1805c11e 	bne	r3,zero,297c <___vfprintf_internal_r+0x21e8>
    1278:	94800414 	ori	r18,r18,16
    127c:	9080080c 	andi	r2,r18,32
    1280:	10020c26 	beq	r2,zero,1ab4 <___vfprintf_internal_r+0x1320>
    1284:	d8802d17 	ldw	r2,180(sp)
    1288:	d9002917 	ldw	r4,164(sp)
    128c:	d8002785 	stb	zero,158(sp)
    1290:	10c00204 	addi	r3,r2,8
    1294:	14c00017 	ldw	r19,0(r2)
    1298:	15800117 	ldw	r22,4(r2)
    129c:	20040f16 	blt	r4,zero,22dc <___vfprintf_internal_r+0x1b48>
    12a0:	013fdfc4 	movi	r4,-129
    12a4:	9d84b03a 	or	r2,r19,r22
    12a8:	d8c02d15 	stw	r3,180(sp)
    12ac:	9124703a 	and	r18,r18,r4
    12b0:	0039883a 	mov	fp,zero
    12b4:	103e891e 	bne	r2,zero,cdc <___vfprintf_internal_r+0x548>
    12b8:	d9002917 	ldw	r4,164(sp)
    12bc:	2002c11e 	bne	r4,zero,1dc4 <___vfprintf_internal_r+0x1630>
    12c0:	d8002915 	stw	zero,164(sp)
    12c4:	d8002e15 	stw	zero,184(sp)
    12c8:	dc001e04 	addi	r16,sp,120
    12cc:	003ef806 	br	eb0 <___vfprintf_internal_r+0x71c>
    12d0:	18c03fcc 	andi	r3,r3,255
    12d4:	18059d1e 	bne	r3,zero,294c <___vfprintf_internal_r+0x21b8>
    12d8:	01400074 	movhi	r5,1
    12dc:	297d6404 	addi	r5,r5,-2672
    12e0:	d9403915 	stw	r5,228(sp)
    12e4:	9080080c 	andi	r2,r18,32
    12e8:	10005226 	beq	r2,zero,1434 <___vfprintf_internal_r+0xca0>
    12ec:	d8802d17 	ldw	r2,180(sp)
    12f0:	14c00017 	ldw	r19,0(r2)
    12f4:	15800117 	ldw	r22,4(r2)
    12f8:	10800204 	addi	r2,r2,8
    12fc:	d8802d15 	stw	r2,180(sp)
    1300:	9080004c 	andi	r2,r18,1
    1304:	10019026 	beq	r2,zero,1948 <___vfprintf_internal_r+0x11b4>
    1308:	9d84b03a 	or	r2,r19,r22
    130c:	10036926 	beq	r2,zero,20b4 <___vfprintf_internal_r+0x1920>
    1310:	d8c02917 	ldw	r3,164(sp)
    1314:	00800c04 	movi	r2,48
    1318:	d8802705 	stb	r2,156(sp)
    131c:	dc402745 	stb	r17,157(sp)
    1320:	d8002785 	stb	zero,158(sp)
    1324:	90800094 	ori	r2,r18,2
    1328:	18045d16 	blt	r3,zero,24a0 <___vfprintf_internal_r+0x1d0c>
    132c:	00bfdfc4 	movi	r2,-129
    1330:	90a4703a 	and	r18,r18,r2
    1334:	94800094 	ori	r18,r18,2
    1338:	0039883a 	mov	fp,zero
    133c:	d9003917 	ldw	r4,228(sp)
    1340:	dc001e04 	addi	r16,sp,120
    1344:	988003cc 	andi	r2,r19,15
    1348:	b006973a 	slli	r3,r22,28
    134c:	2085883a 	add	r2,r4,r2
    1350:	9826d13a 	srli	r19,r19,4
    1354:	10800003 	ldbu	r2,0(r2)
    1358:	b02cd13a 	srli	r22,r22,4
    135c:	843fffc4 	addi	r16,r16,-1
    1360:	1ce6b03a 	or	r19,r3,r19
    1364:	80800005 	stb	r2,0(r16)
    1368:	9d84b03a 	or	r2,r19,r22
    136c:	103ff51e 	bne	r2,zero,1344 <___vfprintf_internal_r+0xbb0>
    1370:	d8c02817 	ldw	r3,160(sp)
    1374:	1c07c83a 	sub	r3,r3,r16
    1378:	d8c02e15 	stw	r3,184(sp)
    137c:	003ecc06 	br	eb0 <___vfprintf_internal_r+0x71c>
    1380:	18c03fcc 	andi	r3,r3,255
    1384:	183e9f26 	beq	r3,zero,e04 <___vfprintf_internal_r+0x670>
    1388:	d9c02785 	stb	r7,158(sp)
    138c:	003e9d06 	br	e04 <___vfprintf_internal_r+0x670>
    1390:	00c00044 	movi	r3,1
    1394:	01c00ac4 	movi	r7,43
    1398:	ac400007 	ldb	r17,0(r21)
    139c:	003d5e06 	br	918 <___vfprintf_internal_r+0x184>
    13a0:	94800814 	ori	r18,r18,32
    13a4:	ac400007 	ldb	r17,0(r21)
    13a8:	003d5b06 	br	918 <___vfprintf_internal_r+0x184>
    13ac:	d8c02d17 	ldw	r3,180(sp)
    13b0:	d8002785 	stb	zero,158(sp)
    13b4:	1c000017 	ldw	r16,0(r3)
    13b8:	1cc00104 	addi	r19,r3,4
    13bc:	80041926 	beq	r16,zero,2424 <___vfprintf_internal_r+0x1c90>
    13c0:	d9002917 	ldw	r4,164(sp)
    13c4:	2003d016 	blt	r4,zero,2308 <___vfprintf_internal_r+0x1b74>
    13c8:	200d883a 	mov	r6,r4
    13cc:	000b883a 	mov	r5,zero
    13d0:	8009883a 	mov	r4,r16
    13d4:	da003d15 	stw	r8,244(sp)
    13d8:	0005fa40 	call	5fa4 <memchr>
    13dc:	da003d17 	ldw	r8,244(sp)
    13e0:	10045426 	beq	r2,zero,2534 <___vfprintf_internal_r+0x1da0>
    13e4:	1405c83a 	sub	r2,r2,r16
    13e8:	d8802e15 	stw	r2,184(sp)
    13ec:	1003cc16 	blt	r2,zero,2320 <___vfprintf_internal_r+0x1b8c>
    13f0:	df002783 	ldbu	fp,158(sp)
    13f4:	d8802a15 	stw	r2,168(sp)
    13f8:	dcc02d15 	stw	r19,180(sp)
    13fc:	d8002915 	stw	zero,164(sp)
    1400:	d8003215 	stw	zero,200(sp)
    1404:	003eb006 	br	ec8 <___vfprintf_internal_r+0x734>
    1408:	18c03fcc 	andi	r3,r3,255
    140c:	183f9b26 	beq	r3,zero,127c <___vfprintf_internal_r+0xae8>
    1410:	d9c02785 	stb	r7,158(sp)
    1414:	003f9906 	br	127c <___vfprintf_internal_r+0xae8>
    1418:	18c03fcc 	andi	r3,r3,255
    141c:	1805551e 	bne	r3,zero,2974 <___vfprintf_internal_r+0x21e0>
    1420:	01400074 	movhi	r5,1
    1424:	297d6904 	addi	r5,r5,-2652
    1428:	d9403915 	stw	r5,228(sp)
    142c:	9080080c 	andi	r2,r18,32
    1430:	103fae1e 	bne	r2,zero,12ec <___vfprintf_internal_r+0xb58>
    1434:	9080040c 	andi	r2,r18,16
    1438:	1002de26 	beq	r2,zero,1fb4 <___vfprintf_internal_r+0x1820>
    143c:	d8c02d17 	ldw	r3,180(sp)
    1440:	002d883a 	mov	r22,zero
    1444:	1cc00017 	ldw	r19,0(r3)
    1448:	18c00104 	addi	r3,r3,4
    144c:	d8c02d15 	stw	r3,180(sp)
    1450:	003fab06 	br	1300 <___vfprintf_internal_r+0xb6c>
    1454:	38803fcc 	andi	r2,r7,255
    1458:	1080201c 	xori	r2,r2,128
    145c:	10bfe004 	addi	r2,r2,-128
    1460:	1002d21e 	bne	r2,zero,1fac <___vfprintf_internal_r+0x1818>
    1464:	00c00044 	movi	r3,1
    1468:	01c00804 	movi	r7,32
    146c:	ac400007 	ldb	r17,0(r21)
    1470:	003d2906 	br	918 <___vfprintf_internal_r+0x184>
    1474:	94800054 	ori	r18,r18,1
    1478:	ac400007 	ldb	r17,0(r21)
    147c:	003d2606 	br	918 <___vfprintf_internal_r+0x184>
    1480:	18c03fcc 	andi	r3,r3,255
    1484:	183e0526 	beq	r3,zero,c9c <___vfprintf_internal_r+0x508>
    1488:	d9c02785 	stb	r7,158(sp)
    148c:	003e0306 	br	c9c <___vfprintf_internal_r+0x508>
    1490:	94801014 	ori	r18,r18,64
    1494:	ac400007 	ldb	r17,0(r21)
    1498:	003d1f06 	br	918 <___vfprintf_internal_r+0x184>
    149c:	ac400007 	ldb	r17,0(r21)
    14a0:	8a438726 	beq	r17,r9,22c0 <___vfprintf_internal_r+0x1b2c>
    14a4:	94800414 	ori	r18,r18,16
    14a8:	003d1b06 	br	918 <___vfprintf_internal_r+0x184>
    14ac:	18c03fcc 	andi	r3,r3,255
    14b0:	1805341e 	bne	r3,zero,2984 <___vfprintf_internal_r+0x21f0>
    14b4:	9080080c 	andi	r2,r18,32
    14b8:	1002cd26 	beq	r2,zero,1ff0 <___vfprintf_internal_r+0x185c>
    14bc:	d9402d17 	ldw	r5,180(sp)
    14c0:	d9002f17 	ldw	r4,188(sp)
    14c4:	28800017 	ldw	r2,0(r5)
    14c8:	2007d7fa 	srai	r3,r4,31
    14cc:	29400104 	addi	r5,r5,4
    14d0:	d9402d15 	stw	r5,180(sp)
    14d4:	11000015 	stw	r4,0(r2)
    14d8:	10c00115 	stw	r3,4(r2)
    14dc:	003ce506 	br	874 <___vfprintf_internal_r+0xe0>
    14e0:	d8c02d17 	ldw	r3,180(sp)
    14e4:	d9002d17 	ldw	r4,180(sp)
    14e8:	d8002785 	stb	zero,158(sp)
    14ec:	18800017 	ldw	r2,0(r3)
    14f0:	21000104 	addi	r4,r4,4
    14f4:	00c00044 	movi	r3,1
    14f8:	d8c02a15 	stw	r3,168(sp)
    14fc:	d8801405 	stb	r2,80(sp)
    1500:	d9002d15 	stw	r4,180(sp)
    1504:	d8c02e15 	stw	r3,184(sp)
    1508:	d8002915 	stw	zero,164(sp)
    150c:	d8003215 	stw	zero,200(sp)
    1510:	dc001404 	addi	r16,sp,80
    1514:	0039883a 	mov	fp,zero
    1518:	003e7206 	br	ee4 <___vfprintf_internal_r+0x750>
    151c:	01000074 	movhi	r4,1
    1520:	213d6904 	addi	r4,r4,-2652
    1524:	0039883a 	mov	fp,zero
    1528:	d9003915 	stw	r4,228(sp)
    152c:	04401e04 	movi	r17,120
    1530:	003f8206 	br	133c <___vfprintf_internal_r+0xba8>
    1534:	18c03fcc 	andi	r3,r3,255
    1538:	1805061e 	bne	r3,zero,2954 <___vfprintf_internal_r+0x21c0>
    153c:	883d9126 	beq	r17,zero,b84 <___vfprintf_internal_r+0x3f0>
    1540:	00c00044 	movi	r3,1
    1544:	d8c02a15 	stw	r3,168(sp)
    1548:	dc401405 	stb	r17,80(sp)
    154c:	d8002785 	stb	zero,158(sp)
    1550:	003fec06 	br	1504 <___vfprintf_internal_r+0xd70>
    1554:	01400074 	movhi	r5,1
    1558:	297d6904 	addi	r5,r5,-2652
    155c:	d9403915 	stw	r5,228(sp)
    1560:	d8c02d15 	stw	r3,180(sp)
    1564:	1025883a 	mov	r18,r2
    1568:	04401e04 	movi	r17,120
    156c:	9d84b03a 	or	r2,r19,r22
    1570:	1000fc1e 	bne	r2,zero,1964 <___vfprintf_internal_r+0x11d0>
    1574:	0039883a 	mov	fp,zero
    1578:	00800084 	movi	r2,2
    157c:	10803fcc 	andi	r2,r2,255
    1580:	00c00044 	movi	r3,1
    1584:	10c20f26 	beq	r2,r3,1dc4 <___vfprintf_internal_r+0x1630>
    1588:	00c00084 	movi	r3,2
    158c:	10fd6326 	beq	r2,r3,b1c <___vfprintf_internal_r+0x388>
    1590:	003e2d06 	br	e48 <___vfprintf_internal_r+0x6b4>
    1594:	d8c02017 	ldw	r3,128(sp)
    1598:	003e9306 	br	fe8 <___vfprintf_internal_r+0x854>
    159c:	00801944 	movi	r2,101
    15a0:	14407e0e 	bge	r2,r17,179c <___vfprintf_internal_r+0x1008>
    15a4:	d9003617 	ldw	r4,216(sp)
    15a8:	d9403817 	ldw	r5,224(sp)
    15ac:	000d883a 	mov	r6,zero
    15b0:	000f883a 	mov	r7,zero
    15b4:	d8c03c15 	stw	r3,240(sp)
    15b8:	da003d15 	stw	r8,244(sp)
    15bc:	000b8c00 	call	b8c0 <__eqdf2>
    15c0:	d8c03c17 	ldw	r3,240(sp)
    15c4:	da003d17 	ldw	r8,244(sp)
    15c8:	1000f71e 	bne	r2,zero,19a8 <___vfprintf_internal_r+0x1214>
    15cc:	d8801f17 	ldw	r2,124(sp)
    15d0:	01000074 	movhi	r4,1
    15d4:	213d7004 	addi	r4,r4,-2624
    15d8:	18c00044 	addi	r3,r3,1
    15dc:	10800044 	addi	r2,r2,1
    15e0:	41000015 	stw	r4,0(r8)
    15e4:	01000044 	movi	r4,1
    15e8:	41000115 	stw	r4,4(r8)
    15ec:	d8c02015 	stw	r3,128(sp)
    15f0:	d8801f15 	stw	r2,124(sp)
    15f4:	010001c4 	movi	r4,7
    15f8:	2082b816 	blt	r4,r2,20dc <___vfprintf_internal_r+0x1948>
    15fc:	42000204 	addi	r8,r8,8
    1600:	d8802617 	ldw	r2,152(sp)
    1604:	d9403317 	ldw	r5,204(sp)
    1608:	11400216 	blt	r2,r5,1614 <___vfprintf_internal_r+0xe80>
    160c:	9080004c 	andi	r2,r18,1
    1610:	103ed526 	beq	r2,zero,1168 <___vfprintf_internal_r+0x9d4>
    1614:	d8803717 	ldw	r2,220(sp)
    1618:	d9003417 	ldw	r4,208(sp)
    161c:	d9403717 	ldw	r5,220(sp)
    1620:	1887883a 	add	r3,r3,r2
    1624:	d8801f17 	ldw	r2,124(sp)
    1628:	41000015 	stw	r4,0(r8)
    162c:	41400115 	stw	r5,4(r8)
    1630:	10800044 	addi	r2,r2,1
    1634:	d8c02015 	stw	r3,128(sp)
    1638:	d8801f15 	stw	r2,124(sp)
    163c:	010001c4 	movi	r4,7
    1640:	20832916 	blt	r4,r2,22e8 <___vfprintf_internal_r+0x1b54>
    1644:	42000204 	addi	r8,r8,8
    1648:	d8803317 	ldw	r2,204(sp)
    164c:	143fffc4 	addi	r16,r2,-1
    1650:	043ec50e 	bge	zero,r16,1168 <___vfprintf_internal_r+0x9d4>
    1654:	04400404 	movi	r17,16
    1658:	d8801f17 	ldw	r2,124(sp)
    165c:	8c00880e 	bge	r17,r16,1880 <___vfprintf_internal_r+0x10ec>
    1660:	01400074 	movhi	r5,1
    1664:	297d7084 	addi	r5,r5,-2622
    1668:	d9402b15 	stw	r5,172(sp)
    166c:	058001c4 	movi	r22,7
    1670:	dcc02c17 	ldw	r19,176(sp)
    1674:	00000306 	br	1684 <___vfprintf_internal_r+0xef0>
    1678:	42000204 	addi	r8,r8,8
    167c:	843ffc04 	addi	r16,r16,-16
    1680:	8c00820e 	bge	r17,r16,188c <___vfprintf_internal_r+0x10f8>
    1684:	18c00404 	addi	r3,r3,16
    1688:	10800044 	addi	r2,r2,1
    168c:	45000015 	stw	r20,0(r8)
    1690:	44400115 	stw	r17,4(r8)
    1694:	d8c02015 	stw	r3,128(sp)
    1698:	d8801f15 	stw	r2,124(sp)
    169c:	b0bff60e 	bge	r22,r2,1678 <___vfprintf_internal_r+0xee4>
    16a0:	d9801e04 	addi	r6,sp,120
    16a4:	b80b883a 	mov	r5,r23
    16a8:	9809883a 	mov	r4,r19
    16ac:	0007c480 	call	7c48 <__sprint_r>
    16b0:	103d3a1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    16b4:	d8c02017 	ldw	r3,128(sp)
    16b8:	d8801f17 	ldw	r2,124(sp)
    16bc:	da000404 	addi	r8,sp,16
    16c0:	003fee06 	br	167c <___vfprintf_internal_r+0xee8>
    16c4:	d9403117 	ldw	r5,196(sp)
    16c8:	d8802a17 	ldw	r2,168(sp)
    16cc:	28adc83a 	sub	r22,r5,r2
    16d0:	05be630e 	bge	zero,r22,1060 <___vfprintf_internal_r+0x8cc>
    16d4:	07000404 	movi	fp,16
    16d8:	d8801f17 	ldw	r2,124(sp)
    16dc:	e5838f0e 	bge	fp,r22,251c <___vfprintf_internal_r+0x1d88>
    16e0:	01400074 	movhi	r5,1
    16e4:	297d7084 	addi	r5,r5,-2622
    16e8:	dc403015 	stw	r17,192(sp)
    16ec:	d9402b15 	stw	r5,172(sp)
    16f0:	b023883a 	mov	r17,r22
    16f4:	04c001c4 	movi	r19,7
    16f8:	a82d883a 	mov	r22,r21
    16fc:	902b883a 	mov	r21,r18
    1700:	8025883a 	mov	r18,r16
    1704:	dc002c17 	ldw	r16,176(sp)
    1708:	00000306 	br	1718 <___vfprintf_internal_r+0xf84>
    170c:	8c7ffc04 	addi	r17,r17,-16
    1710:	42000204 	addi	r8,r8,8
    1714:	e440110e 	bge	fp,r17,175c <___vfprintf_internal_r+0xfc8>
    1718:	18c00404 	addi	r3,r3,16
    171c:	10800044 	addi	r2,r2,1
    1720:	45000015 	stw	r20,0(r8)
    1724:	47000115 	stw	fp,4(r8)
    1728:	d8c02015 	stw	r3,128(sp)
    172c:	d8801f15 	stw	r2,124(sp)
    1730:	98bff60e 	bge	r19,r2,170c <___vfprintf_internal_r+0xf78>
    1734:	d9801e04 	addi	r6,sp,120
    1738:	b80b883a 	mov	r5,r23
    173c:	8009883a 	mov	r4,r16
    1740:	0007c480 	call	7c48 <__sprint_r>
    1744:	103d151e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1748:	8c7ffc04 	addi	r17,r17,-16
    174c:	d8c02017 	ldw	r3,128(sp)
    1750:	d8801f17 	ldw	r2,124(sp)
    1754:	da000404 	addi	r8,sp,16
    1758:	e47fef16 	blt	fp,r17,1718 <___vfprintf_internal_r+0xf84>
    175c:	9021883a 	mov	r16,r18
    1760:	a825883a 	mov	r18,r21
    1764:	b02b883a 	mov	r21,r22
    1768:	882d883a 	mov	r22,r17
    176c:	dc403017 	ldw	r17,192(sp)
    1770:	d9002b17 	ldw	r4,172(sp)
    1774:	1d87883a 	add	r3,r3,r22
    1778:	10800044 	addi	r2,r2,1
    177c:	41000015 	stw	r4,0(r8)
    1780:	45800115 	stw	r22,4(r8)
    1784:	d8c02015 	stw	r3,128(sp)
    1788:	d8801f15 	stw	r2,124(sp)
    178c:	010001c4 	movi	r4,7
    1790:	20818e16 	blt	r4,r2,1dcc <___vfprintf_internal_r+0x1638>
    1794:	42000204 	addi	r8,r8,8
    1798:	003e3106 	br	1060 <___vfprintf_internal_r+0x8cc>
    179c:	d9403317 	ldw	r5,204(sp)
    17a0:	00800044 	movi	r2,1
    17a4:	18c00044 	addi	r3,r3,1
    17a8:	1141530e 	bge	r2,r5,1cf8 <___vfprintf_internal_r+0x1564>
    17ac:	dc401f17 	ldw	r17,124(sp)
    17b0:	00800044 	movi	r2,1
    17b4:	40800115 	stw	r2,4(r8)
    17b8:	8c400044 	addi	r17,r17,1
    17bc:	44000015 	stw	r16,0(r8)
    17c0:	d8c02015 	stw	r3,128(sp)
    17c4:	dc401f15 	stw	r17,124(sp)
    17c8:	008001c4 	movi	r2,7
    17cc:	14416b16 	blt	r2,r17,1d7c <___vfprintf_internal_r+0x15e8>
    17d0:	42000204 	addi	r8,r8,8
    17d4:	d8803717 	ldw	r2,220(sp)
    17d8:	d9003417 	ldw	r4,208(sp)
    17dc:	8c400044 	addi	r17,r17,1
    17e0:	10c7883a 	add	r3,r2,r3
    17e4:	40800115 	stw	r2,4(r8)
    17e8:	41000015 	stw	r4,0(r8)
    17ec:	d8c02015 	stw	r3,128(sp)
    17f0:	dc401f15 	stw	r17,124(sp)
    17f4:	008001c4 	movi	r2,7
    17f8:	14416916 	blt	r2,r17,1da0 <___vfprintf_internal_r+0x160c>
    17fc:	45800204 	addi	r22,r8,8
    1800:	d9003617 	ldw	r4,216(sp)
    1804:	d9403817 	ldw	r5,224(sp)
    1808:	000d883a 	mov	r6,zero
    180c:	000f883a 	mov	r7,zero
    1810:	d8c03c15 	stw	r3,240(sp)
    1814:	000b8c00 	call	b8c0 <__eqdf2>
    1818:	d8c03c17 	ldw	r3,240(sp)
    181c:	1000bc26 	beq	r2,zero,1b10 <___vfprintf_internal_r+0x137c>
    1820:	d9403317 	ldw	r5,204(sp)
    1824:	84000044 	addi	r16,r16,1
    1828:	8c400044 	addi	r17,r17,1
    182c:	28bfffc4 	addi	r2,r5,-1
    1830:	1887883a 	add	r3,r3,r2
    1834:	b0800115 	stw	r2,4(r22)
    1838:	b4000015 	stw	r16,0(r22)
    183c:	d8c02015 	stw	r3,128(sp)
    1840:	dc401f15 	stw	r17,124(sp)
    1844:	008001c4 	movi	r2,7
    1848:	14414316 	blt	r2,r17,1d58 <___vfprintf_internal_r+0x15c4>
    184c:	b5800204 	addi	r22,r22,8
    1850:	d9003a17 	ldw	r4,232(sp)
    1854:	df0022c4 	addi	fp,sp,139
    1858:	8c400044 	addi	r17,r17,1
    185c:	20c7883a 	add	r3,r4,r3
    1860:	b7000015 	stw	fp,0(r22)
    1864:	b1000115 	stw	r4,4(r22)
    1868:	d8c02015 	stw	r3,128(sp)
    186c:	dc401f15 	stw	r17,124(sp)
    1870:	008001c4 	movi	r2,7
    1874:	14400e16 	blt	r2,r17,18b0 <___vfprintf_internal_r+0x111c>
    1878:	b2000204 	addi	r8,r22,8
    187c:	003e3a06 	br	1168 <___vfprintf_internal_r+0x9d4>
    1880:	01000074 	movhi	r4,1
    1884:	213d7084 	addi	r4,r4,-2622
    1888:	d9002b15 	stw	r4,172(sp)
    188c:	d9002b17 	ldw	r4,172(sp)
    1890:	1c07883a 	add	r3,r3,r16
    1894:	44000115 	stw	r16,4(r8)
    1898:	41000015 	stw	r4,0(r8)
    189c:	10800044 	addi	r2,r2,1
    18a0:	d8c02015 	stw	r3,128(sp)
    18a4:	d8801f15 	stw	r2,124(sp)
    18a8:	010001c4 	movi	r4,7
    18ac:	20be2d0e 	bge	r4,r2,1164 <___vfprintf_internal_r+0x9d0>
    18b0:	d9002c17 	ldw	r4,176(sp)
    18b4:	d9801e04 	addi	r6,sp,120
    18b8:	b80b883a 	mov	r5,r23
    18bc:	0007c480 	call	7c48 <__sprint_r>
    18c0:	103cb61e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    18c4:	d8c02017 	ldw	r3,128(sp)
    18c8:	da000404 	addi	r8,sp,16
    18cc:	003e2606 	br	1168 <___vfprintf_internal_r+0x9d4>
    18d0:	d9002c17 	ldw	r4,176(sp)
    18d4:	d9801e04 	addi	r6,sp,120
    18d8:	b80b883a 	mov	r5,r23
    18dc:	0007c480 	call	7c48 <__sprint_r>
    18e0:	103e5d26 	beq	r2,zero,1258 <___vfprintf_internal_r+0xac4>
    18e4:	003cad06 	br	b9c <___vfprintf_internal_r+0x408>
    18e8:	d9002c17 	ldw	r4,176(sp)
    18ec:	d9801e04 	addi	r6,sp,120
    18f0:	b80b883a 	mov	r5,r23
    18f4:	0007c480 	call	7c48 <__sprint_r>
    18f8:	103ca81e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    18fc:	d8c02017 	ldw	r3,128(sp)
    1900:	da000404 	addi	r8,sp,16
    1904:	003e0b06 	br	1134 <___vfprintf_internal_r+0x9a0>
    1908:	d9002c17 	ldw	r4,176(sp)
    190c:	d9801e04 	addi	r6,sp,120
    1910:	b80b883a 	mov	r5,r23
    1914:	0007c480 	call	7c48 <__sprint_r>
    1918:	103ca01e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    191c:	d8c02017 	ldw	r3,128(sp)
    1920:	da000404 	addi	r8,sp,16
    1924:	003dbd06 	br	101c <___vfprintf_internal_r+0x888>
    1928:	d9002c17 	ldw	r4,176(sp)
    192c:	d9801e04 	addi	r6,sp,120
    1930:	b80b883a 	mov	r5,r23
    1934:	0007c480 	call	7c48 <__sprint_r>
    1938:	103c981e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    193c:	d8c02017 	ldw	r3,128(sp)
    1940:	da000404 	addi	r8,sp,16
    1944:	003dc306 	br	1054 <___vfprintf_internal_r+0x8c0>
    1948:	d8802917 	ldw	r2,164(sp)
    194c:	d8002785 	stb	zero,158(sp)
    1950:	103f0616 	blt	r2,zero,156c <___vfprintf_internal_r+0xdd8>
    1954:	00ffdfc4 	movi	r3,-129
    1958:	9d84b03a 	or	r2,r19,r22
    195c:	90e4703a 	and	r18,r18,r3
    1960:	103c6b26 	beq	r2,zero,b10 <___vfprintf_internal_r+0x37c>
    1964:	0039883a 	mov	fp,zero
    1968:	003e7406 	br	133c <___vfprintf_internal_r+0xba8>
    196c:	9080040c 	andi	r2,r18,16
    1970:	1001b326 	beq	r2,zero,2040 <___vfprintf_internal_r+0x18ac>
    1974:	d9002d17 	ldw	r4,180(sp)
    1978:	d9402917 	ldw	r5,164(sp)
    197c:	d8002785 	stb	zero,158(sp)
    1980:	20800104 	addi	r2,r4,4
    1984:	24c00017 	ldw	r19,0(r4)
    1988:	002d883a 	mov	r22,zero
    198c:	2801b516 	blt	r5,zero,2064 <___vfprintf_internal_r+0x18d0>
    1990:	00ffdfc4 	movi	r3,-129
    1994:	d8802d15 	stw	r2,180(sp)
    1998:	90e4703a 	and	r18,r18,r3
    199c:	983d2726 	beq	r19,zero,e3c <___vfprintf_internal_r+0x6a8>
    19a0:	0039883a 	mov	fp,zero
    19a4:	003d2a06 	br	e50 <___vfprintf_internal_r+0x6bc>
    19a8:	dc402617 	ldw	r17,152(sp)
    19ac:	0441d30e 	bge	zero,r17,20fc <___vfprintf_internal_r+0x1968>
    19b0:	dc403217 	ldw	r17,200(sp)
    19b4:	d8803317 	ldw	r2,204(sp)
    19b8:	1440010e 	bge	r2,r17,19c0 <___vfprintf_internal_r+0x122c>
    19bc:	1023883a 	mov	r17,r2
    19c0:	04400a0e 	bge	zero,r17,19ec <___vfprintf_internal_r+0x1258>
    19c4:	d8801f17 	ldw	r2,124(sp)
    19c8:	1c47883a 	add	r3,r3,r17
    19cc:	44000015 	stw	r16,0(r8)
    19d0:	10800044 	addi	r2,r2,1
    19d4:	44400115 	stw	r17,4(r8)
    19d8:	d8c02015 	stw	r3,128(sp)
    19dc:	d8801f15 	stw	r2,124(sp)
    19e0:	010001c4 	movi	r4,7
    19e4:	20826516 	blt	r4,r2,237c <___vfprintf_internal_r+0x1be8>
    19e8:	42000204 	addi	r8,r8,8
    19ec:	88026116 	blt	r17,zero,2374 <___vfprintf_internal_r+0x1be0>
    19f0:	d9003217 	ldw	r4,200(sp)
    19f4:	2463c83a 	sub	r17,r4,r17
    19f8:	04407b0e 	bge	zero,r17,1be8 <___vfprintf_internal_r+0x1454>
    19fc:	05800404 	movi	r22,16
    1a00:	d8801f17 	ldw	r2,124(sp)
    1a04:	b4419d0e 	bge	r22,r17,207c <___vfprintf_internal_r+0x18e8>
    1a08:	01000074 	movhi	r4,1
    1a0c:	213d7084 	addi	r4,r4,-2622
    1a10:	d9002b15 	stw	r4,172(sp)
    1a14:	070001c4 	movi	fp,7
    1a18:	dcc02c17 	ldw	r19,176(sp)
    1a1c:	00000306 	br	1a2c <___vfprintf_internal_r+0x1298>
    1a20:	42000204 	addi	r8,r8,8
    1a24:	8c7ffc04 	addi	r17,r17,-16
    1a28:	b441970e 	bge	r22,r17,2088 <___vfprintf_internal_r+0x18f4>
    1a2c:	18c00404 	addi	r3,r3,16
    1a30:	10800044 	addi	r2,r2,1
    1a34:	45000015 	stw	r20,0(r8)
    1a38:	45800115 	stw	r22,4(r8)
    1a3c:	d8c02015 	stw	r3,128(sp)
    1a40:	d8801f15 	stw	r2,124(sp)
    1a44:	e0bff60e 	bge	fp,r2,1a20 <___vfprintf_internal_r+0x128c>
    1a48:	d9801e04 	addi	r6,sp,120
    1a4c:	b80b883a 	mov	r5,r23
    1a50:	9809883a 	mov	r4,r19
    1a54:	0007c480 	call	7c48 <__sprint_r>
    1a58:	103c501e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1a5c:	d8c02017 	ldw	r3,128(sp)
    1a60:	d8801f17 	ldw	r2,124(sp)
    1a64:	da000404 	addi	r8,sp,16
    1a68:	003fee06 	br	1a24 <___vfprintf_internal_r+0x1290>
    1a6c:	d9002c17 	ldw	r4,176(sp)
    1a70:	d9801e04 	addi	r6,sp,120
    1a74:	b80b883a 	mov	r5,r23
    1a78:	0007c480 	call	7c48 <__sprint_r>
    1a7c:	103c471e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1a80:	d8c02017 	ldw	r3,128(sp)
    1a84:	df002787 	ldb	fp,158(sp)
    1a88:	da000404 	addi	r8,sp,16
    1a8c:	003d5606 	br	fe8 <___vfprintf_internal_r+0x854>
    1a90:	9080040c 	andi	r2,r18,16
    1a94:	10016126 	beq	r2,zero,201c <___vfprintf_internal_r+0x1888>
    1a98:	d8802d17 	ldw	r2,180(sp)
    1a9c:	14c00017 	ldw	r19,0(r2)
    1aa0:	10800104 	addi	r2,r2,4
    1aa4:	d8802d15 	stw	r2,180(sp)
    1aa8:	982dd7fa 	srai	r22,r19,31
    1aac:	b005883a 	mov	r2,r22
    1ab0:	003c8206 	br	cbc <___vfprintf_internal_r+0x528>
    1ab4:	9080040c 	andi	r2,r18,16
    1ab8:	10003526 	beq	r2,zero,1b90 <___vfprintf_internal_r+0x13fc>
    1abc:	d9402d17 	ldw	r5,180(sp)
    1ac0:	d8c02917 	ldw	r3,164(sp)
    1ac4:	d8002785 	stb	zero,158(sp)
    1ac8:	28800104 	addi	r2,r5,4
    1acc:	2cc00017 	ldw	r19,0(r5)
    1ad0:	002d883a 	mov	r22,zero
    1ad4:	18003716 	blt	r3,zero,1bb4 <___vfprintf_internal_r+0x1420>
    1ad8:	00ffdfc4 	movi	r3,-129
    1adc:	d8802d15 	stw	r2,180(sp)
    1ae0:	90e4703a 	and	r18,r18,r3
    1ae4:	0039883a 	mov	fp,zero
    1ae8:	983df326 	beq	r19,zero,12b8 <___vfprintf_internal_r+0xb24>
    1aec:	00800244 	movi	r2,9
    1af0:	14fc7b36 	bltu	r2,r19,ce0 <___vfprintf_internal_r+0x54c>
    1af4:	d8c02817 	ldw	r3,160(sp)
    1af8:	dc001dc4 	addi	r16,sp,119
    1afc:	9cc00c04 	addi	r19,r19,48
    1b00:	1c07c83a 	sub	r3,r3,r16
    1b04:	dcc01dc5 	stb	r19,119(sp)
    1b08:	d8c02e15 	stw	r3,184(sp)
    1b0c:	003ce806 	br	eb0 <___vfprintf_internal_r+0x71c>
    1b10:	d8803317 	ldw	r2,204(sp)
    1b14:	143fffc4 	addi	r16,r2,-1
    1b18:	043f4d0e 	bge	zero,r16,1850 <___vfprintf_internal_r+0x10bc>
    1b1c:	07000404 	movi	fp,16
    1b20:	e400810e 	bge	fp,r16,1d28 <___vfprintf_internal_r+0x1594>
    1b24:	01400074 	movhi	r5,1
    1b28:	297d7084 	addi	r5,r5,-2622
    1b2c:	d9402b15 	stw	r5,172(sp)
    1b30:	01c001c4 	movi	r7,7
    1b34:	dcc02c17 	ldw	r19,176(sp)
    1b38:	00000306 	br	1b48 <___vfprintf_internal_r+0x13b4>
    1b3c:	b5800204 	addi	r22,r22,8
    1b40:	843ffc04 	addi	r16,r16,-16
    1b44:	e4007b0e 	bge	fp,r16,1d34 <___vfprintf_internal_r+0x15a0>
    1b48:	18c00404 	addi	r3,r3,16
    1b4c:	8c400044 	addi	r17,r17,1
    1b50:	b5000015 	stw	r20,0(r22)
    1b54:	b7000115 	stw	fp,4(r22)
    1b58:	d8c02015 	stw	r3,128(sp)
    1b5c:	dc401f15 	stw	r17,124(sp)
    1b60:	3c7ff60e 	bge	r7,r17,1b3c <___vfprintf_internal_r+0x13a8>
    1b64:	d9801e04 	addi	r6,sp,120
    1b68:	b80b883a 	mov	r5,r23
    1b6c:	9809883a 	mov	r4,r19
    1b70:	d9c03c15 	stw	r7,240(sp)
    1b74:	0007c480 	call	7c48 <__sprint_r>
    1b78:	d9c03c17 	ldw	r7,240(sp)
    1b7c:	103c071e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1b80:	d8c02017 	ldw	r3,128(sp)
    1b84:	dc401f17 	ldw	r17,124(sp)
    1b88:	dd800404 	addi	r22,sp,16
    1b8c:	003fec06 	br	1b40 <___vfprintf_internal_r+0x13ac>
    1b90:	9080100c 	andi	r2,r18,64
    1b94:	d8002785 	stb	zero,158(sp)
    1b98:	10010e26 	beq	r2,zero,1fd4 <___vfprintf_internal_r+0x1840>
    1b9c:	d9002d17 	ldw	r4,180(sp)
    1ba0:	d9402917 	ldw	r5,164(sp)
    1ba4:	002d883a 	mov	r22,zero
    1ba8:	20800104 	addi	r2,r4,4
    1bac:	24c0000b 	ldhu	r19,0(r4)
    1bb0:	283fc90e 	bge	r5,zero,1ad8 <___vfprintf_internal_r+0x1344>
    1bb4:	d8802d15 	stw	r2,180(sp)
    1bb8:	0039883a 	mov	fp,zero
    1bbc:	9d84b03a 	or	r2,r19,r22
    1bc0:	103c461e 	bne	r2,zero,cdc <___vfprintf_internal_r+0x548>
    1bc4:	00800044 	movi	r2,1
    1bc8:	003e6c06 	br	157c <___vfprintf_internal_r+0xde8>
    1bcc:	d9002c17 	ldw	r4,176(sp)
    1bd0:	d9801e04 	addi	r6,sp,120
    1bd4:	b80b883a 	mov	r5,r23
    1bd8:	0007c480 	call	7c48 <__sprint_r>
    1bdc:	103bef1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1be0:	d8c02017 	ldw	r3,128(sp)
    1be4:	da000404 	addi	r8,sp,16
    1be8:	d9003217 	ldw	r4,200(sp)
    1bec:	d8802617 	ldw	r2,152(sp)
    1bf0:	d9403317 	ldw	r5,204(sp)
    1bf4:	8123883a 	add	r17,r16,r4
    1bf8:	11400216 	blt	r2,r5,1c04 <___vfprintf_internal_r+0x1470>
    1bfc:	9100004c 	andi	r4,r18,1
    1c00:	20000d26 	beq	r4,zero,1c38 <___vfprintf_internal_r+0x14a4>
    1c04:	d9003717 	ldw	r4,220(sp)
    1c08:	d9403417 	ldw	r5,208(sp)
    1c0c:	1907883a 	add	r3,r3,r4
    1c10:	d9001f17 	ldw	r4,124(sp)
    1c14:	41400015 	stw	r5,0(r8)
    1c18:	d9403717 	ldw	r5,220(sp)
    1c1c:	21000044 	addi	r4,r4,1
    1c20:	d8c02015 	stw	r3,128(sp)
    1c24:	41400115 	stw	r5,4(r8)
    1c28:	d9001f15 	stw	r4,124(sp)
    1c2c:	014001c4 	movi	r5,7
    1c30:	2901e816 	blt	r5,r4,23d4 <___vfprintf_internal_r+0x1c40>
    1c34:	42000204 	addi	r8,r8,8
    1c38:	d9003317 	ldw	r4,204(sp)
    1c3c:	8121883a 	add	r16,r16,r4
    1c40:	2085c83a 	sub	r2,r4,r2
    1c44:	8461c83a 	sub	r16,r16,r17
    1c48:	1400010e 	bge	r2,r16,1c50 <___vfprintf_internal_r+0x14bc>
    1c4c:	1021883a 	mov	r16,r2
    1c50:	04000a0e 	bge	zero,r16,1c7c <___vfprintf_internal_r+0x14e8>
    1c54:	d9001f17 	ldw	r4,124(sp)
    1c58:	1c07883a 	add	r3,r3,r16
    1c5c:	44400015 	stw	r17,0(r8)
    1c60:	21000044 	addi	r4,r4,1
    1c64:	44000115 	stw	r16,4(r8)
    1c68:	d8c02015 	stw	r3,128(sp)
    1c6c:	d9001f15 	stw	r4,124(sp)
    1c70:	014001c4 	movi	r5,7
    1c74:	2901fb16 	blt	r5,r4,2464 <___vfprintf_internal_r+0x1cd0>
    1c78:	42000204 	addi	r8,r8,8
    1c7c:	8001f716 	blt	r16,zero,245c <___vfprintf_internal_r+0x1cc8>
    1c80:	1421c83a 	sub	r16,r2,r16
    1c84:	043d380e 	bge	zero,r16,1168 <___vfprintf_internal_r+0x9d4>
    1c88:	04400404 	movi	r17,16
    1c8c:	d8801f17 	ldw	r2,124(sp)
    1c90:	8c3efb0e 	bge	r17,r16,1880 <___vfprintf_internal_r+0x10ec>
    1c94:	01400074 	movhi	r5,1
    1c98:	297d7084 	addi	r5,r5,-2622
    1c9c:	d9402b15 	stw	r5,172(sp)
    1ca0:	058001c4 	movi	r22,7
    1ca4:	dcc02c17 	ldw	r19,176(sp)
    1ca8:	00000306 	br	1cb8 <___vfprintf_internal_r+0x1524>
    1cac:	42000204 	addi	r8,r8,8
    1cb0:	843ffc04 	addi	r16,r16,-16
    1cb4:	8c3ef50e 	bge	r17,r16,188c <___vfprintf_internal_r+0x10f8>
    1cb8:	18c00404 	addi	r3,r3,16
    1cbc:	10800044 	addi	r2,r2,1
    1cc0:	45000015 	stw	r20,0(r8)
    1cc4:	44400115 	stw	r17,4(r8)
    1cc8:	d8c02015 	stw	r3,128(sp)
    1ccc:	d8801f15 	stw	r2,124(sp)
    1cd0:	b0bff60e 	bge	r22,r2,1cac <___vfprintf_internal_r+0x1518>
    1cd4:	d9801e04 	addi	r6,sp,120
    1cd8:	b80b883a 	mov	r5,r23
    1cdc:	9809883a 	mov	r4,r19
    1ce0:	0007c480 	call	7c48 <__sprint_r>
    1ce4:	103bad1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1ce8:	d8c02017 	ldw	r3,128(sp)
    1cec:	d8801f17 	ldw	r2,124(sp)
    1cf0:	da000404 	addi	r8,sp,16
    1cf4:	003fee06 	br	1cb0 <___vfprintf_internal_r+0x151c>
    1cf8:	9088703a 	and	r4,r18,r2
    1cfc:	203eab1e 	bne	r4,zero,17ac <___vfprintf_internal_r+0x1018>
    1d00:	dc401f17 	ldw	r17,124(sp)
    1d04:	40800115 	stw	r2,4(r8)
    1d08:	44000015 	stw	r16,0(r8)
    1d0c:	8c400044 	addi	r17,r17,1
    1d10:	d8c02015 	stw	r3,128(sp)
    1d14:	dc401f15 	stw	r17,124(sp)
    1d18:	008001c4 	movi	r2,7
    1d1c:	14400e16 	blt	r2,r17,1d58 <___vfprintf_internal_r+0x15c4>
    1d20:	45800204 	addi	r22,r8,8
    1d24:	003eca06 	br	1850 <___vfprintf_internal_r+0x10bc>
    1d28:	01000074 	movhi	r4,1
    1d2c:	213d7084 	addi	r4,r4,-2622
    1d30:	d9002b15 	stw	r4,172(sp)
    1d34:	d8802b17 	ldw	r2,172(sp)
    1d38:	1c07883a 	add	r3,r3,r16
    1d3c:	8c400044 	addi	r17,r17,1
    1d40:	b0800015 	stw	r2,0(r22)
    1d44:	b4000115 	stw	r16,4(r22)
    1d48:	d8c02015 	stw	r3,128(sp)
    1d4c:	dc401f15 	stw	r17,124(sp)
    1d50:	008001c4 	movi	r2,7
    1d54:	147ebd0e 	bge	r2,r17,184c <___vfprintf_internal_r+0x10b8>
    1d58:	d9002c17 	ldw	r4,176(sp)
    1d5c:	d9801e04 	addi	r6,sp,120
    1d60:	b80b883a 	mov	r5,r23
    1d64:	0007c480 	call	7c48 <__sprint_r>
    1d68:	103b8c1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1d6c:	d8c02017 	ldw	r3,128(sp)
    1d70:	dc401f17 	ldw	r17,124(sp)
    1d74:	dd800404 	addi	r22,sp,16
    1d78:	003eb506 	br	1850 <___vfprintf_internal_r+0x10bc>
    1d7c:	d9002c17 	ldw	r4,176(sp)
    1d80:	d9801e04 	addi	r6,sp,120
    1d84:	b80b883a 	mov	r5,r23
    1d88:	0007c480 	call	7c48 <__sprint_r>
    1d8c:	103b831e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1d90:	d8c02017 	ldw	r3,128(sp)
    1d94:	dc401f17 	ldw	r17,124(sp)
    1d98:	da000404 	addi	r8,sp,16
    1d9c:	003e8d06 	br	17d4 <___vfprintf_internal_r+0x1040>
    1da0:	d9002c17 	ldw	r4,176(sp)
    1da4:	d9801e04 	addi	r6,sp,120
    1da8:	b80b883a 	mov	r5,r23
    1dac:	0007c480 	call	7c48 <__sprint_r>
    1db0:	103b7a1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1db4:	d8c02017 	ldw	r3,128(sp)
    1db8:	dc401f17 	ldw	r17,124(sp)
    1dbc:	dd800404 	addi	r22,sp,16
    1dc0:	003e8f06 	br	1800 <___vfprintf_internal_r+0x106c>
    1dc4:	0027883a 	mov	r19,zero
    1dc8:	003f4a06 	br	1af4 <___vfprintf_internal_r+0x1360>
    1dcc:	d9002c17 	ldw	r4,176(sp)
    1dd0:	d9801e04 	addi	r6,sp,120
    1dd4:	b80b883a 	mov	r5,r23
    1dd8:	0007c480 	call	7c48 <__sprint_r>
    1ddc:	103b6f1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    1de0:	d8c02017 	ldw	r3,128(sp)
    1de4:	da000404 	addi	r8,sp,16
    1de8:	003c9d06 	br	1060 <___vfprintf_internal_r+0x8cc>
    1dec:	04e7c83a 	sub	r19,zero,r19
    1df0:	9804c03a 	cmpne	r2,r19,zero
    1df4:	05adc83a 	sub	r22,zero,r22
    1df8:	b0adc83a 	sub	r22,r22,r2
    1dfc:	d8802917 	ldw	r2,164(sp)
    1e00:	07000b44 	movi	fp,45
    1e04:	df002785 	stb	fp,158(sp)
    1e08:	10017b16 	blt	r2,zero,23f8 <___vfprintf_internal_r+0x1c64>
    1e0c:	00bfdfc4 	movi	r2,-129
    1e10:	90a4703a 	and	r18,r18,r2
    1e14:	003bb106 	br	cdc <___vfprintf_internal_r+0x548>
    1e18:	d9003617 	ldw	r4,216(sp)
    1e1c:	d9403817 	ldw	r5,224(sp)
    1e20:	da003d15 	stw	r8,244(sp)
    1e24:	000786c0 	call	786c <__fpclassifyd>
    1e28:	da003d17 	ldw	r8,244(sp)
    1e2c:	1000f026 	beq	r2,zero,21f0 <___vfprintf_internal_r+0x1a5c>
    1e30:	d9002917 	ldw	r4,164(sp)
    1e34:	05bff7c4 	movi	r22,-33
    1e38:	00bfffc4 	movi	r2,-1
    1e3c:	8dac703a 	and	r22,r17,r22
    1e40:	20820026 	beq	r4,r2,2644 <___vfprintf_internal_r+0x1eb0>
    1e44:	008011c4 	movi	r2,71
    1e48:	b081f726 	beq	r22,r2,2628 <___vfprintf_internal_r+0x1e94>
    1e4c:	d9003817 	ldw	r4,224(sp)
    1e50:	90c04014 	ori	r3,r18,256
    1e54:	d8c02b15 	stw	r3,172(sp)
    1e58:	20021516 	blt	r4,zero,26b0 <___vfprintf_internal_r+0x1f1c>
    1e5c:	dcc03817 	ldw	r19,224(sp)
    1e60:	d8002a05 	stb	zero,168(sp)
    1e64:	00801984 	movi	r2,102
    1e68:	8881f926 	beq	r17,r2,2650 <___vfprintf_internal_r+0x1ebc>
    1e6c:	00801184 	movi	r2,70
    1e70:	88821c26 	beq	r17,r2,26e4 <___vfprintf_internal_r+0x1f50>
    1e74:	00801144 	movi	r2,69
    1e78:	b081ef26 	beq	r22,r2,2638 <___vfprintf_internal_r+0x1ea4>
    1e7c:	d8c02917 	ldw	r3,164(sp)
    1e80:	d8802104 	addi	r2,sp,132
    1e84:	d8800315 	stw	r2,12(sp)
    1e88:	d9403617 	ldw	r5,216(sp)
    1e8c:	d8802504 	addi	r2,sp,148
    1e90:	d9002c17 	ldw	r4,176(sp)
    1e94:	d8800215 	stw	r2,8(sp)
    1e98:	d8802604 	addi	r2,sp,152
    1e9c:	d8c00015 	stw	r3,0(sp)
    1ea0:	d8800115 	stw	r2,4(sp)
    1ea4:	01c00084 	movi	r7,2
    1ea8:	980d883a 	mov	r6,r19
    1eac:	d8c03c15 	stw	r3,240(sp)
    1eb0:	da003d15 	stw	r8,244(sp)
    1eb4:	0002db80 	call	2db8 <_dtoa_r>
    1eb8:	1021883a 	mov	r16,r2
    1ebc:	008019c4 	movi	r2,103
    1ec0:	d8c03c17 	ldw	r3,240(sp)
    1ec4:	da003d17 	ldw	r8,244(sp)
    1ec8:	88817126 	beq	r17,r2,2490 <___vfprintf_internal_r+0x1cfc>
    1ecc:	008011c4 	movi	r2,71
    1ed0:	88829226 	beq	r17,r2,291c <___vfprintf_internal_r+0x2188>
    1ed4:	80f9883a 	add	fp,r16,r3
    1ed8:	d9003617 	ldw	r4,216(sp)
    1edc:	000d883a 	mov	r6,zero
    1ee0:	000f883a 	mov	r7,zero
    1ee4:	980b883a 	mov	r5,r19
    1ee8:	da003d15 	stw	r8,244(sp)
    1eec:	000b8c00 	call	b8c0 <__eqdf2>
    1ef0:	da003d17 	ldw	r8,244(sp)
    1ef4:	10018d26 	beq	r2,zero,252c <___vfprintf_internal_r+0x1d98>
    1ef8:	d8802117 	ldw	r2,132(sp)
    1efc:	1700062e 	bgeu	r2,fp,1f18 <___vfprintf_internal_r+0x1784>
    1f00:	01000c04 	movi	r4,48
    1f04:	10c00044 	addi	r3,r2,1
    1f08:	d8c02115 	stw	r3,132(sp)
    1f0c:	11000005 	stb	r4,0(r2)
    1f10:	d8802117 	ldw	r2,132(sp)
    1f14:	173ffb36 	bltu	r2,fp,1f04 <___vfprintf_internal_r+0x1770>
    1f18:	1405c83a 	sub	r2,r2,r16
    1f1c:	d8803315 	stw	r2,204(sp)
    1f20:	008011c4 	movi	r2,71
    1f24:	b0817626 	beq	r22,r2,2500 <___vfprintf_internal_r+0x1d6c>
    1f28:	00801944 	movi	r2,101
    1f2c:	1442810e 	bge	r2,r17,2934 <___vfprintf_internal_r+0x21a0>
    1f30:	d8c02617 	ldw	r3,152(sp)
    1f34:	00801984 	movi	r2,102
    1f38:	d8c03215 	stw	r3,200(sp)
    1f3c:	8881fe26 	beq	r17,r2,2738 <___vfprintf_internal_r+0x1fa4>
    1f40:	d8c03217 	ldw	r3,200(sp)
    1f44:	d9003317 	ldw	r4,204(sp)
    1f48:	1901dd16 	blt	r3,r4,26c0 <___vfprintf_internal_r+0x1f2c>
    1f4c:	9480004c 	andi	r18,r18,1
    1f50:	90022b1e 	bne	r18,zero,2800 <___vfprintf_internal_r+0x206c>
    1f54:	1805883a 	mov	r2,r3
    1f58:	18028016 	blt	r3,zero,295c <___vfprintf_internal_r+0x21c8>
    1f5c:	d8c03217 	ldw	r3,200(sp)
    1f60:	044019c4 	movi	r17,103
    1f64:	d8c02e15 	stw	r3,184(sp)
    1f68:	df002a07 	ldb	fp,168(sp)
    1f6c:	e001531e 	bne	fp,zero,24bc <___vfprintf_internal_r+0x1d28>
    1f70:	df002783 	ldbu	fp,158(sp)
    1f74:	d8802a15 	stw	r2,168(sp)
    1f78:	dc802b17 	ldw	r18,172(sp)
    1f7c:	d8002915 	stw	zero,164(sp)
    1f80:	003bd106 	br	ec8 <___vfprintf_internal_r+0x734>
    1f84:	d8802d17 	ldw	r2,180(sp)
    1f88:	d8c02d17 	ldw	r3,180(sp)
    1f8c:	d9002d17 	ldw	r4,180(sp)
    1f90:	10800017 	ldw	r2,0(r2)
    1f94:	18c00117 	ldw	r3,4(r3)
    1f98:	21000204 	addi	r4,r4,8
    1f9c:	d8803615 	stw	r2,216(sp)
    1fa0:	d8c03815 	stw	r3,224(sp)
    1fa4:	d9002d15 	stw	r4,180(sp)
    1fa8:	003b7506 	br	d80 <___vfprintf_internal_r+0x5ec>
    1fac:	ac400007 	ldb	r17,0(r21)
    1fb0:	003a5906 	br	918 <___vfprintf_internal_r+0x184>
    1fb4:	9080100c 	andi	r2,r18,64
    1fb8:	1000a826 	beq	r2,zero,225c <___vfprintf_internal_r+0x1ac8>
    1fbc:	d9002d17 	ldw	r4,180(sp)
    1fc0:	002d883a 	mov	r22,zero
    1fc4:	24c0000b 	ldhu	r19,0(r4)
    1fc8:	21000104 	addi	r4,r4,4
    1fcc:	d9002d15 	stw	r4,180(sp)
    1fd0:	003ccb06 	br	1300 <___vfprintf_internal_r+0xb6c>
    1fd4:	d8c02d17 	ldw	r3,180(sp)
    1fd8:	d9002917 	ldw	r4,164(sp)
    1fdc:	002d883a 	mov	r22,zero
    1fe0:	18800104 	addi	r2,r3,4
    1fe4:	1cc00017 	ldw	r19,0(r3)
    1fe8:	203ebb0e 	bge	r4,zero,1ad8 <___vfprintf_internal_r+0x1344>
    1fec:	003ef106 	br	1bb4 <___vfprintf_internal_r+0x1420>
    1ff0:	9080040c 	andi	r2,r18,16
    1ff4:	1000921e 	bne	r2,zero,2240 <___vfprintf_internal_r+0x1aac>
    1ff8:	9480100c 	andi	r18,r18,64
    1ffc:	90013926 	beq	r18,zero,24e4 <___vfprintf_internal_r+0x1d50>
    2000:	d9002d17 	ldw	r4,180(sp)
    2004:	d9402f17 	ldw	r5,188(sp)
    2008:	20800017 	ldw	r2,0(r4)
    200c:	21000104 	addi	r4,r4,4
    2010:	d9002d15 	stw	r4,180(sp)
    2014:	1140000d 	sth	r5,0(r2)
    2018:	003a1606 	br	874 <___vfprintf_internal_r+0xe0>
    201c:	9080100c 	andi	r2,r18,64
    2020:	10008026 	beq	r2,zero,2224 <___vfprintf_internal_r+0x1a90>
    2024:	d8c02d17 	ldw	r3,180(sp)
    2028:	1cc0000f 	ldh	r19,0(r3)
    202c:	18c00104 	addi	r3,r3,4
    2030:	d8c02d15 	stw	r3,180(sp)
    2034:	982dd7fa 	srai	r22,r19,31
    2038:	b005883a 	mov	r2,r22
    203c:	003b1f06 	br	cbc <___vfprintf_internal_r+0x528>
    2040:	9080100c 	andi	r2,r18,64
    2044:	d8002785 	stb	zero,158(sp)
    2048:	10008a1e 	bne	r2,zero,2274 <___vfprintf_internal_r+0x1ae0>
    204c:	d9402d17 	ldw	r5,180(sp)
    2050:	d8c02917 	ldw	r3,164(sp)
    2054:	002d883a 	mov	r22,zero
    2058:	28800104 	addi	r2,r5,4
    205c:	2cc00017 	ldw	r19,0(r5)
    2060:	183e4b0e 	bge	r3,zero,1990 <___vfprintf_internal_r+0x11fc>
    2064:	9d86b03a 	or	r3,r19,r22
    2068:	d8802d15 	stw	r2,180(sp)
    206c:	183e4c1e 	bne	r3,zero,19a0 <___vfprintf_internal_r+0x120c>
    2070:	0039883a 	mov	fp,zero
    2074:	0005883a 	mov	r2,zero
    2078:	003d4006 	br	157c <___vfprintf_internal_r+0xde8>
    207c:	01400074 	movhi	r5,1
    2080:	297d7084 	addi	r5,r5,-2622
    2084:	d9402b15 	stw	r5,172(sp)
    2088:	d9402b17 	ldw	r5,172(sp)
    208c:	1c47883a 	add	r3,r3,r17
    2090:	10800044 	addi	r2,r2,1
    2094:	41400015 	stw	r5,0(r8)
    2098:	44400115 	stw	r17,4(r8)
    209c:	d8c02015 	stw	r3,128(sp)
    20a0:	d8801f15 	stw	r2,124(sp)
    20a4:	010001c4 	movi	r4,7
    20a8:	20bec816 	blt	r4,r2,1bcc <___vfprintf_internal_r+0x1438>
    20ac:	42000204 	addi	r8,r8,8
    20b0:	003ecd06 	br	1be8 <___vfprintf_internal_r+0x1454>
    20b4:	d9002917 	ldw	r4,164(sp)
    20b8:	d8002785 	stb	zero,158(sp)
    20bc:	203d2d16 	blt	r4,zero,1574 <___vfprintf_internal_r+0xde0>
    20c0:	00bfdfc4 	movi	r2,-129
    20c4:	90a4703a 	and	r18,r18,r2
    20c8:	003a9106 	br	b10 <___vfprintf_internal_r+0x37c>
    20cc:	01000074 	movhi	r4,1
    20d0:	213d7084 	addi	r4,r4,-2622
    20d4:	d9002b15 	stw	r4,172(sp)
    20d8:	003c0c06 	br	110c <___vfprintf_internal_r+0x978>
    20dc:	d9002c17 	ldw	r4,176(sp)
    20e0:	d9801e04 	addi	r6,sp,120
    20e4:	b80b883a 	mov	r5,r23
    20e8:	0007c480 	call	7c48 <__sprint_r>
    20ec:	103aab1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    20f0:	d8c02017 	ldw	r3,128(sp)
    20f4:	da000404 	addi	r8,sp,16
    20f8:	003d4106 	br	1600 <___vfprintf_internal_r+0xe6c>
    20fc:	d8801f17 	ldw	r2,124(sp)
    2100:	01400074 	movhi	r5,1
    2104:	01000044 	movi	r4,1
    2108:	18c00044 	addi	r3,r3,1
    210c:	10800044 	addi	r2,r2,1
    2110:	297d7004 	addi	r5,r5,-2624
    2114:	41000115 	stw	r4,4(r8)
    2118:	41400015 	stw	r5,0(r8)
    211c:	d8c02015 	stw	r3,128(sp)
    2120:	d8801f15 	stw	r2,124(sp)
    2124:	010001c4 	movi	r4,7
    2128:	20805c16 	blt	r4,r2,229c <___vfprintf_internal_r+0x1b08>
    212c:	42000204 	addi	r8,r8,8
    2130:	8800041e 	bne	r17,zero,2144 <___vfprintf_internal_r+0x19b0>
    2134:	d8803317 	ldw	r2,204(sp)
    2138:	1000021e 	bne	r2,zero,2144 <___vfprintf_internal_r+0x19b0>
    213c:	9080004c 	andi	r2,r18,1
    2140:	103c0926 	beq	r2,zero,1168 <___vfprintf_internal_r+0x9d4>
    2144:	d9003717 	ldw	r4,220(sp)
    2148:	d8801f17 	ldw	r2,124(sp)
    214c:	d9403417 	ldw	r5,208(sp)
    2150:	20c7883a 	add	r3,r4,r3
    2154:	10800044 	addi	r2,r2,1
    2158:	41000115 	stw	r4,4(r8)
    215c:	41400015 	stw	r5,0(r8)
    2160:	d8c02015 	stw	r3,128(sp)
    2164:	d8801f15 	stw	r2,124(sp)
    2168:	010001c4 	movi	r4,7
    216c:	20812116 	blt	r4,r2,25f4 <___vfprintf_internal_r+0x1e60>
    2170:	42000204 	addi	r8,r8,8
    2174:	0463c83a 	sub	r17,zero,r17
    2178:	0440730e 	bge	zero,r17,2348 <___vfprintf_internal_r+0x1bb4>
    217c:	05800404 	movi	r22,16
    2180:	b440860e 	bge	r22,r17,239c <___vfprintf_internal_r+0x1c08>
    2184:	01400074 	movhi	r5,1
    2188:	297d7084 	addi	r5,r5,-2622
    218c:	d9402b15 	stw	r5,172(sp)
    2190:	070001c4 	movi	fp,7
    2194:	dcc02c17 	ldw	r19,176(sp)
    2198:	00000306 	br	21a8 <___vfprintf_internal_r+0x1a14>
    219c:	42000204 	addi	r8,r8,8
    21a0:	8c7ffc04 	addi	r17,r17,-16
    21a4:	b440800e 	bge	r22,r17,23a8 <___vfprintf_internal_r+0x1c14>
    21a8:	18c00404 	addi	r3,r3,16
    21ac:	10800044 	addi	r2,r2,1
    21b0:	45000015 	stw	r20,0(r8)
    21b4:	45800115 	stw	r22,4(r8)
    21b8:	d8c02015 	stw	r3,128(sp)
    21bc:	d8801f15 	stw	r2,124(sp)
    21c0:	e0bff60e 	bge	fp,r2,219c <___vfprintf_internal_r+0x1a08>
    21c4:	d9801e04 	addi	r6,sp,120
    21c8:	b80b883a 	mov	r5,r23
    21cc:	9809883a 	mov	r4,r19
    21d0:	0007c480 	call	7c48 <__sprint_r>
    21d4:	103a711e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    21d8:	d8c02017 	ldw	r3,128(sp)
    21dc:	d8801f17 	ldw	r2,124(sp)
    21e0:	da000404 	addi	r8,sp,16
    21e4:	003fee06 	br	21a0 <___vfprintf_internal_r+0x1a0c>
    21e8:	00bfffc4 	movi	r2,-1
    21ec:	003a6f06 	br	bac <___vfprintf_internal_r+0x418>
    21f0:	008011c4 	movi	r2,71
    21f4:	1440b816 	blt	r2,r17,24d8 <___vfprintf_internal_r+0x1d44>
    21f8:	04000074 	movhi	r16,1
    21fc:	843d6204 	addi	r16,r16,-2680
    2200:	00c000c4 	movi	r3,3
    2204:	00bfdfc4 	movi	r2,-129
    2208:	d8c02a15 	stw	r3,168(sp)
    220c:	90a4703a 	and	r18,r18,r2
    2210:	df002783 	ldbu	fp,158(sp)
    2214:	d8c02e15 	stw	r3,184(sp)
    2218:	d8002915 	stw	zero,164(sp)
    221c:	d8003215 	stw	zero,200(sp)
    2220:	003b2906 	br	ec8 <___vfprintf_internal_r+0x734>
    2224:	d9002d17 	ldw	r4,180(sp)
    2228:	24c00017 	ldw	r19,0(r4)
    222c:	21000104 	addi	r4,r4,4
    2230:	d9002d15 	stw	r4,180(sp)
    2234:	982dd7fa 	srai	r22,r19,31
    2238:	b005883a 	mov	r2,r22
    223c:	003a9f06 	br	cbc <___vfprintf_internal_r+0x528>
    2240:	d9402d17 	ldw	r5,180(sp)
    2244:	d8c02f17 	ldw	r3,188(sp)
    2248:	28800017 	ldw	r2,0(r5)
    224c:	29400104 	addi	r5,r5,4
    2250:	d9402d15 	stw	r5,180(sp)
    2254:	10c00015 	stw	r3,0(r2)
    2258:	00398606 	br	874 <___vfprintf_internal_r+0xe0>
    225c:	d9402d17 	ldw	r5,180(sp)
    2260:	002d883a 	mov	r22,zero
    2264:	2cc00017 	ldw	r19,0(r5)
    2268:	29400104 	addi	r5,r5,4
    226c:	d9402d15 	stw	r5,180(sp)
    2270:	003c2306 	br	1300 <___vfprintf_internal_r+0xb6c>
    2274:	d8c02d17 	ldw	r3,180(sp)
    2278:	d9002917 	ldw	r4,164(sp)
    227c:	002d883a 	mov	r22,zero
    2280:	18800104 	addi	r2,r3,4
    2284:	1cc0000b 	ldhu	r19,0(r3)
    2288:	203dc10e 	bge	r4,zero,1990 <___vfprintf_internal_r+0x11fc>
    228c:	003f7506 	br	2064 <___vfprintf_internal_r+0x18d0>
    2290:	04000074 	movhi	r16,1
    2294:	843d6004 	addi	r16,r16,-2688
    2298:	003acc06 	br	dcc <___vfprintf_internal_r+0x638>
    229c:	d9002c17 	ldw	r4,176(sp)
    22a0:	d9801e04 	addi	r6,sp,120
    22a4:	b80b883a 	mov	r5,r23
    22a8:	0007c480 	call	7c48 <__sprint_r>
    22ac:	103a3b1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    22b0:	dc402617 	ldw	r17,152(sp)
    22b4:	d8c02017 	ldw	r3,128(sp)
    22b8:	da000404 	addi	r8,sp,16
    22bc:	003f9c06 	br	2130 <___vfprintf_internal_r+0x199c>
    22c0:	ac400043 	ldbu	r17,1(r21)
    22c4:	94800814 	ori	r18,r18,32
    22c8:	ad400044 	addi	r21,r21,1
    22cc:	8c403fcc 	andi	r17,r17,255
    22d0:	8c40201c 	xori	r17,r17,128
    22d4:	8c7fe004 	addi	r17,r17,-128
    22d8:	00398f06 	br	918 <___vfprintf_internal_r+0x184>
    22dc:	d8c02d15 	stw	r3,180(sp)
    22e0:	0039883a 	mov	fp,zero
    22e4:	003e3506 	br	1bbc <___vfprintf_internal_r+0x1428>
    22e8:	d9002c17 	ldw	r4,176(sp)
    22ec:	d9801e04 	addi	r6,sp,120
    22f0:	b80b883a 	mov	r5,r23
    22f4:	0007c480 	call	7c48 <__sprint_r>
    22f8:	103a281e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    22fc:	d8c02017 	ldw	r3,128(sp)
    2300:	da000404 	addi	r8,sp,16
    2304:	003cd006 	br	1648 <___vfprintf_internal_r+0xeb4>
    2308:	8009883a 	mov	r4,r16
    230c:	da003d15 	stw	r8,244(sp)
    2310:	00006fc0 	call	6fc <strlen>
    2314:	d8802e15 	stw	r2,184(sp)
    2318:	da003d17 	ldw	r8,244(sp)
    231c:	103c340e 	bge	r2,zero,13f0 <___vfprintf_internal_r+0xc5c>
    2320:	0005883a 	mov	r2,zero
    2324:	003c3206 	br	13f0 <___vfprintf_internal_r+0xc5c>
    2328:	d9002c17 	ldw	r4,176(sp)
    232c:	d9801e04 	addi	r6,sp,120
    2330:	b80b883a 	mov	r5,r23
    2334:	0007c480 	call	7c48 <__sprint_r>
    2338:	103a181e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    233c:	d8c02017 	ldw	r3,128(sp)
    2340:	d8801f17 	ldw	r2,124(sp)
    2344:	da000404 	addi	r8,sp,16
    2348:	d9403317 	ldw	r5,204(sp)
    234c:	10800044 	addi	r2,r2,1
    2350:	44000015 	stw	r16,0(r8)
    2354:	28c7883a 	add	r3,r5,r3
    2358:	003b7d06 	br	1150 <___vfprintf_internal_r+0x9bc>
    235c:	01000074 	movhi	r4,1
    2360:	213d7484 	addi	r4,r4,-2606
    2364:	d9003515 	stw	r4,212(sp)
    2368:	003b1406 	br	fbc <___vfprintf_internal_r+0x828>
    236c:	013fffc4 	movi	r4,-1
    2370:	003a3506 	br	c48 <___vfprintf_internal_r+0x4b4>
    2374:	0023883a 	mov	r17,zero
    2378:	003d9d06 	br	19f0 <___vfprintf_internal_r+0x125c>
    237c:	d9002c17 	ldw	r4,176(sp)
    2380:	d9801e04 	addi	r6,sp,120
    2384:	b80b883a 	mov	r5,r23
    2388:	0007c480 	call	7c48 <__sprint_r>
    238c:	103a031e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    2390:	d8c02017 	ldw	r3,128(sp)
    2394:	da000404 	addi	r8,sp,16
    2398:	003d9406 	br	19ec <___vfprintf_internal_r+0x1258>
    239c:	01000074 	movhi	r4,1
    23a0:	213d7084 	addi	r4,r4,-2622
    23a4:	d9002b15 	stw	r4,172(sp)
    23a8:	d9002b17 	ldw	r4,172(sp)
    23ac:	1c47883a 	add	r3,r3,r17
    23b0:	10800044 	addi	r2,r2,1
    23b4:	41000015 	stw	r4,0(r8)
    23b8:	44400115 	stw	r17,4(r8)
    23bc:	d8c02015 	stw	r3,128(sp)
    23c0:	d8801f15 	stw	r2,124(sp)
    23c4:	010001c4 	movi	r4,7
    23c8:	20bfd716 	blt	r4,r2,2328 <___vfprintf_internal_r+0x1b94>
    23cc:	42000204 	addi	r8,r8,8
    23d0:	003fdd06 	br	2348 <___vfprintf_internal_r+0x1bb4>
    23d4:	d9002c17 	ldw	r4,176(sp)
    23d8:	d9801e04 	addi	r6,sp,120
    23dc:	b80b883a 	mov	r5,r23
    23e0:	0007c480 	call	7c48 <__sprint_r>
    23e4:	1039ed1e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    23e8:	d8802617 	ldw	r2,152(sp)
    23ec:	d8c02017 	ldw	r3,128(sp)
    23f0:	da000404 	addi	r8,sp,16
    23f4:	003e1006 	br	1c38 <___vfprintf_internal_r+0x14a4>
    23f8:	00800044 	movi	r2,1
    23fc:	10803fcc 	andi	r2,r2,255
    2400:	00c00044 	movi	r3,1
    2404:	10fa3526 	beq	r2,r3,cdc <___vfprintf_internal_r+0x548>
    2408:	00c00084 	movi	r3,2
    240c:	10fbcb26 	beq	r2,r3,133c <___vfprintf_internal_r+0xba8>
    2410:	003a8f06 	br	e50 <___vfprintf_internal_r+0x6bc>
    2414:	01000074 	movhi	r4,1
    2418:	213d7484 	addi	r4,r4,-2606
    241c:	d9003515 	stw	r4,212(sp)
    2420:	003b7606 	br	11fc <___vfprintf_internal_r+0xa68>
    2424:	d8802917 	ldw	r2,164(sp)
    2428:	00c00184 	movi	r3,6
    242c:	1880012e 	bgeu	r3,r2,2434 <___vfprintf_internal_r+0x1ca0>
    2430:	1805883a 	mov	r2,r3
    2434:	d8802e15 	stw	r2,184(sp)
    2438:	1000ef16 	blt	r2,zero,27f8 <___vfprintf_internal_r+0x2064>
    243c:	04000074 	movhi	r16,1
    2440:	d8802a15 	stw	r2,168(sp)
    2444:	dcc02d15 	stw	r19,180(sp)
    2448:	d8002915 	stw	zero,164(sp)
    244c:	d8003215 	stw	zero,200(sp)
    2450:	843d6e04 	addi	r16,r16,-2632
    2454:	0039883a 	mov	fp,zero
    2458:	003aa206 	br	ee4 <___vfprintf_internal_r+0x750>
    245c:	0021883a 	mov	r16,zero
    2460:	003e0706 	br	1c80 <___vfprintf_internal_r+0x14ec>
    2464:	d9002c17 	ldw	r4,176(sp)
    2468:	d9801e04 	addi	r6,sp,120
    246c:	b80b883a 	mov	r5,r23
    2470:	0007c480 	call	7c48 <__sprint_r>
    2474:	1039c91e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    2478:	d8802617 	ldw	r2,152(sp)
    247c:	d9403317 	ldw	r5,204(sp)
    2480:	d8c02017 	ldw	r3,128(sp)
    2484:	da000404 	addi	r8,sp,16
    2488:	2885c83a 	sub	r2,r5,r2
    248c:	003dfb06 	br	1c7c <___vfprintf_internal_r+0x14e8>
    2490:	9080004c 	andi	r2,r18,1
    2494:	103e8f1e 	bne	r2,zero,1ed4 <___vfprintf_internal_r+0x1740>
    2498:	d8802117 	ldw	r2,132(sp)
    249c:	003e9e06 	br	1f18 <___vfprintf_internal_r+0x1784>
    24a0:	1025883a 	mov	r18,r2
    24a4:	0039883a 	mov	fp,zero
    24a8:	00800084 	movi	r2,2
    24ac:	003fd306 	br	23fc <___vfprintf_internal_r+0x1c68>
    24b0:	07000b44 	movi	fp,45
    24b4:	df002785 	stb	fp,158(sp)
    24b8:	003a4006 	br	dbc <___vfprintf_internal_r+0x628>
    24bc:	00c00b44 	movi	r3,45
    24c0:	d8c02785 	stb	r3,158(sp)
    24c4:	d8802a15 	stw	r2,168(sp)
    24c8:	dc802b17 	ldw	r18,172(sp)
    24cc:	d8002915 	stw	zero,164(sp)
    24d0:	07000b44 	movi	fp,45
    24d4:	003a8006 	br	ed8 <___vfprintf_internal_r+0x744>
    24d8:	04000074 	movhi	r16,1
    24dc:	843d6304 	addi	r16,r16,-2676
    24e0:	003f4706 	br	2200 <___vfprintf_internal_r+0x1a6c>
    24e4:	d8c02d17 	ldw	r3,180(sp)
    24e8:	d9002f17 	ldw	r4,188(sp)
    24ec:	18800017 	ldw	r2,0(r3)
    24f0:	18c00104 	addi	r3,r3,4
    24f4:	d8c02d15 	stw	r3,180(sp)
    24f8:	11000015 	stw	r4,0(r2)
    24fc:	0038dd06 	br	874 <___vfprintf_internal_r+0xe0>
    2500:	dd802617 	ldw	r22,152(sp)
    2504:	00bfff44 	movi	r2,-3
    2508:	b0801c16 	blt	r22,r2,257c <___vfprintf_internal_r+0x1de8>
    250c:	d9402917 	ldw	r5,164(sp)
    2510:	2d801a16 	blt	r5,r22,257c <___vfprintf_internal_r+0x1de8>
    2514:	dd803215 	stw	r22,200(sp)
    2518:	003e8906 	br	1f40 <___vfprintf_internal_r+0x17ac>
    251c:	01000074 	movhi	r4,1
    2520:	213d7084 	addi	r4,r4,-2622
    2524:	d9002b15 	stw	r4,172(sp)
    2528:	003c9106 	br	1770 <___vfprintf_internal_r+0xfdc>
    252c:	e005883a 	mov	r2,fp
    2530:	003e7906 	br	1f18 <___vfprintf_internal_r+0x1784>
    2534:	d9402917 	ldw	r5,164(sp)
    2538:	df002783 	ldbu	fp,158(sp)
    253c:	dcc02d15 	stw	r19,180(sp)
    2540:	d9402a15 	stw	r5,168(sp)
    2544:	d9402e15 	stw	r5,184(sp)
    2548:	d8002915 	stw	zero,164(sp)
    254c:	d8003215 	stw	zero,200(sp)
    2550:	003a5d06 	br	ec8 <___vfprintf_internal_r+0x734>
    2554:	9080004c 	andi	r2,r18,1
    2558:	0039883a 	mov	fp,zero
    255c:	10000426 	beq	r2,zero,2570 <___vfprintf_internal_r+0x1ddc>
    2560:	00800c04 	movi	r2,48
    2564:	dc001dc4 	addi	r16,sp,119
    2568:	d8801dc5 	stb	r2,119(sp)
    256c:	003b8006 	br	1370 <___vfprintf_internal_r+0xbdc>
    2570:	d8002e15 	stw	zero,184(sp)
    2574:	dc001e04 	addi	r16,sp,120
    2578:	003a4d06 	br	eb0 <___vfprintf_internal_r+0x71c>
    257c:	8c7fff84 	addi	r17,r17,-2
    2580:	b5bfffc4 	addi	r22,r22,-1
    2584:	dd802615 	stw	r22,152(sp)
    2588:	dc4022c5 	stb	r17,139(sp)
    258c:	b000bf16 	blt	r22,zero,288c <___vfprintf_internal_r+0x20f8>
    2590:	00800ac4 	movi	r2,43
    2594:	d8802305 	stb	r2,140(sp)
    2598:	00800244 	movi	r2,9
    259c:	15807016 	blt	r2,r22,2760 <___vfprintf_internal_r+0x1fcc>
    25a0:	00800c04 	movi	r2,48
    25a4:	b5800c04 	addi	r22,r22,48
    25a8:	d8802345 	stb	r2,141(sp)
    25ac:	dd802385 	stb	r22,142(sp)
    25b0:	d88023c4 	addi	r2,sp,143
    25b4:	df0022c4 	addi	fp,sp,139
    25b8:	d8c03317 	ldw	r3,204(sp)
    25bc:	1739c83a 	sub	fp,r2,fp
    25c0:	d9003317 	ldw	r4,204(sp)
    25c4:	e0c7883a 	add	r3,fp,r3
    25c8:	df003a15 	stw	fp,232(sp)
    25cc:	d8c02e15 	stw	r3,184(sp)
    25d0:	00800044 	movi	r2,1
    25d4:	1100b30e 	bge	r2,r4,28a4 <___vfprintf_internal_r+0x2110>
    25d8:	d8c02e17 	ldw	r3,184(sp)
    25dc:	18c00044 	addi	r3,r3,1
    25e0:	d8c02e15 	stw	r3,184(sp)
    25e4:	1805883a 	mov	r2,r3
    25e8:	1800ac16 	blt	r3,zero,289c <___vfprintf_internal_r+0x2108>
    25ec:	d8003215 	stw	zero,200(sp)
    25f0:	003e5d06 	br	1f68 <___vfprintf_internal_r+0x17d4>
    25f4:	d9002c17 	ldw	r4,176(sp)
    25f8:	d9801e04 	addi	r6,sp,120
    25fc:	b80b883a 	mov	r5,r23
    2600:	0007c480 	call	7c48 <__sprint_r>
    2604:	1039651e 	bne	r2,zero,b9c <___vfprintf_internal_r+0x408>
    2608:	dc402617 	ldw	r17,152(sp)
    260c:	d8c02017 	ldw	r3,128(sp)
    2610:	d8801f17 	ldw	r2,124(sp)
    2614:	da000404 	addi	r8,sp,16
    2618:	003ed606 	br	2174 <___vfprintf_internal_r+0x19e0>
    261c:	582b883a 	mov	r21,r11
    2620:	d8002915 	stw	zero,164(sp)
    2624:	0038bd06 	br	91c <___vfprintf_internal_r+0x188>
    2628:	d8802917 	ldw	r2,164(sp)
    262c:	103e071e 	bne	r2,zero,1e4c <___vfprintf_internal_r+0x16b8>
    2630:	dc002915 	stw	r16,164(sp)
    2634:	003e0506 	br	1e4c <___vfprintf_internal_r+0x16b8>
    2638:	d9002917 	ldw	r4,164(sp)
    263c:	20c00044 	addi	r3,r4,1
    2640:	003e0f06 	br	1e80 <___vfprintf_internal_r+0x16ec>
    2644:	01400184 	movi	r5,6
    2648:	d9402915 	stw	r5,164(sp)
    264c:	003dff06 	br	1e4c <___vfprintf_internal_r+0x16b8>
    2650:	d8802104 	addi	r2,sp,132
    2654:	d8800315 	stw	r2,12(sp)
    2658:	d8802504 	addi	r2,sp,148
    265c:	d8800215 	stw	r2,8(sp)
    2660:	d8802604 	addi	r2,sp,152
    2664:	d8800115 	stw	r2,4(sp)
    2668:	d8802917 	ldw	r2,164(sp)
    266c:	d9403617 	ldw	r5,216(sp)
    2670:	d9002c17 	ldw	r4,176(sp)
    2674:	d8800015 	stw	r2,0(sp)
    2678:	01c000c4 	movi	r7,3
    267c:	980d883a 	mov	r6,r19
    2680:	da003d15 	stw	r8,244(sp)
    2684:	0002db80 	call	2db8 <_dtoa_r>
    2688:	d8c02917 	ldw	r3,164(sp)
    268c:	da003d17 	ldw	r8,244(sp)
    2690:	1021883a 	mov	r16,r2
    2694:	10f9883a 	add	fp,r2,r3
    2698:	81000007 	ldb	r4,0(r16)
    269c:	00800c04 	movi	r2,48
    26a0:	20805e26 	beq	r4,r2,281c <___vfprintf_internal_r+0x2088>
    26a4:	d8c02617 	ldw	r3,152(sp)
    26a8:	e0f9883a 	add	fp,fp,r3
    26ac:	003e0a06 	br	1ed8 <___vfprintf_internal_r+0x1744>
    26b0:	00c00b44 	movi	r3,45
    26b4:	24e0003c 	xorhi	r19,r4,32768
    26b8:	d8c02a05 	stb	r3,168(sp)
    26bc:	003de906 	br	1e64 <___vfprintf_internal_r+0x16d0>
    26c0:	d8c03217 	ldw	r3,200(sp)
    26c4:	00c07a0e 	bge	zero,r3,28b0 <___vfprintf_internal_r+0x211c>
    26c8:	00800044 	movi	r2,1
    26cc:	d9003317 	ldw	r4,204(sp)
    26d0:	1105883a 	add	r2,r2,r4
    26d4:	d8802e15 	stw	r2,184(sp)
    26d8:	10004e16 	blt	r2,zero,2814 <___vfprintf_internal_r+0x2080>
    26dc:	044019c4 	movi	r17,103
    26e0:	003e2106 	br	1f68 <___vfprintf_internal_r+0x17d4>
    26e4:	d9002917 	ldw	r4,164(sp)
    26e8:	d8802104 	addi	r2,sp,132
    26ec:	d8800315 	stw	r2,12(sp)
    26f0:	d9000015 	stw	r4,0(sp)
    26f4:	d8802504 	addi	r2,sp,148
    26f8:	d9403617 	ldw	r5,216(sp)
    26fc:	d9002c17 	ldw	r4,176(sp)
    2700:	d8800215 	stw	r2,8(sp)
    2704:	d8802604 	addi	r2,sp,152
    2708:	d8800115 	stw	r2,4(sp)
    270c:	01c000c4 	movi	r7,3
    2710:	980d883a 	mov	r6,r19
    2714:	da003d15 	stw	r8,244(sp)
    2718:	0002db80 	call	2db8 <_dtoa_r>
    271c:	d8c02917 	ldw	r3,164(sp)
    2720:	da003d17 	ldw	r8,244(sp)
    2724:	1021883a 	mov	r16,r2
    2728:	00801184 	movi	r2,70
    272c:	80f9883a 	add	fp,r16,r3
    2730:	88bfd926 	beq	r17,r2,2698 <___vfprintf_internal_r+0x1f04>
    2734:	003de806 	br	1ed8 <___vfprintf_internal_r+0x1744>
    2738:	d9002917 	ldw	r4,164(sp)
    273c:	00c04d0e 	bge	zero,r3,2874 <___vfprintf_internal_r+0x20e0>
    2740:	2000441e 	bne	r4,zero,2854 <___vfprintf_internal_r+0x20c0>
    2744:	9480004c 	andi	r18,r18,1
    2748:	9000421e 	bne	r18,zero,2854 <___vfprintf_internal_r+0x20c0>
    274c:	1805883a 	mov	r2,r3
    2750:	18007016 	blt	r3,zero,2914 <___vfprintf_internal_r+0x2180>
    2754:	d8c03217 	ldw	r3,200(sp)
    2758:	d8c02e15 	stw	r3,184(sp)
    275c:	003e0206 	br	1f68 <___vfprintf_internal_r+0x17d4>
    2760:	df0022c4 	addi	fp,sp,139
    2764:	dc002915 	stw	r16,164(sp)
    2768:	4027883a 	mov	r19,r8
    276c:	e021883a 	mov	r16,fp
    2770:	b009883a 	mov	r4,r22
    2774:	01400284 	movi	r5,10
    2778:	000a5fc0 	call	a5fc <__modsi3>
    277c:	10800c04 	addi	r2,r2,48
    2780:	843fffc4 	addi	r16,r16,-1
    2784:	b009883a 	mov	r4,r22
    2788:	01400284 	movi	r5,10
    278c:	80800005 	stb	r2,0(r16)
    2790:	000a5780 	call	a578 <__divsi3>
    2794:	102d883a 	mov	r22,r2
    2798:	00800244 	movi	r2,9
    279c:	15bff416 	blt	r2,r22,2770 <___vfprintf_internal_r+0x1fdc>
    27a0:	9811883a 	mov	r8,r19
    27a4:	b0800c04 	addi	r2,r22,48
    27a8:	8027883a 	mov	r19,r16
    27ac:	997fffc4 	addi	r5,r19,-1
    27b0:	98bfffc5 	stb	r2,-1(r19)
    27b4:	dc002917 	ldw	r16,164(sp)
    27b8:	2f006a2e 	bgeu	r5,fp,2964 <___vfprintf_internal_r+0x21d0>
    27bc:	d9c02384 	addi	r7,sp,142
    27c0:	3ccfc83a 	sub	r7,r7,r19
    27c4:	d9002344 	addi	r4,sp,141
    27c8:	e1cf883a 	add	r7,fp,r7
    27cc:	00000106 	br	27d4 <___vfprintf_internal_r+0x2040>
    27d0:	28800003 	ldbu	r2,0(r5)
    27d4:	20800005 	stb	r2,0(r4)
    27d8:	21000044 	addi	r4,r4,1
    27dc:	29400044 	addi	r5,r5,1
    27e0:	393ffb1e 	bne	r7,r4,27d0 <___vfprintf_internal_r+0x203c>
    27e4:	d8802304 	addi	r2,sp,140
    27e8:	14c5c83a 	sub	r2,r2,r19
    27ec:	d8c02344 	addi	r3,sp,141
    27f0:	1885883a 	add	r2,r3,r2
    27f4:	003f7006 	br	25b8 <___vfprintf_internal_r+0x1e24>
    27f8:	0005883a 	mov	r2,zero
    27fc:	003f0f06 	br	243c <___vfprintf_internal_r+0x1ca8>
    2800:	d8c03217 	ldw	r3,200(sp)
    2804:	18c00044 	addi	r3,r3,1
    2808:	d8c02e15 	stw	r3,184(sp)
    280c:	1805883a 	mov	r2,r3
    2810:	183fb20e 	bge	r3,zero,26dc <___vfprintf_internal_r+0x1f48>
    2814:	0005883a 	mov	r2,zero
    2818:	003fb006 	br	26dc <___vfprintf_internal_r+0x1f48>
    281c:	d9003617 	ldw	r4,216(sp)
    2820:	000d883a 	mov	r6,zero
    2824:	000f883a 	mov	r7,zero
    2828:	980b883a 	mov	r5,r19
    282c:	d8c03c15 	stw	r3,240(sp)
    2830:	da003d15 	stw	r8,244(sp)
    2834:	000b8c00 	call	b8c0 <__eqdf2>
    2838:	d8c03c17 	ldw	r3,240(sp)
    283c:	da003d17 	ldw	r8,244(sp)
    2840:	103f9826 	beq	r2,zero,26a4 <___vfprintf_internal_r+0x1f10>
    2844:	00800044 	movi	r2,1
    2848:	10c7c83a 	sub	r3,r2,r3
    284c:	d8c02615 	stw	r3,152(sp)
    2850:	003f9506 	br	26a8 <___vfprintf_internal_r+0x1f14>
    2854:	d9002917 	ldw	r4,164(sp)
    2858:	d8c03217 	ldw	r3,200(sp)
    285c:	20800044 	addi	r2,r4,1
    2860:	1885883a 	add	r2,r3,r2
    2864:	d8802e15 	stw	r2,184(sp)
    2868:	103dbf0e 	bge	r2,zero,1f68 <___vfprintf_internal_r+0x17d4>
    286c:	0005883a 	mov	r2,zero
    2870:	003dbd06 	br	1f68 <___vfprintf_internal_r+0x17d4>
    2874:	2000211e 	bne	r4,zero,28fc <___vfprintf_internal_r+0x2168>
    2878:	9480004c 	andi	r18,r18,1
    287c:	90001f1e 	bne	r18,zero,28fc <___vfprintf_internal_r+0x2168>
    2880:	00800044 	movi	r2,1
    2884:	d8802e15 	stw	r2,184(sp)
    2888:	003db706 	br	1f68 <___vfprintf_internal_r+0x17d4>
    288c:	00800b44 	movi	r2,45
    2890:	05adc83a 	sub	r22,zero,r22
    2894:	d8802305 	stb	r2,140(sp)
    2898:	003f3f06 	br	2598 <___vfprintf_internal_r+0x1e04>
    289c:	0005883a 	mov	r2,zero
    28a0:	003f5206 	br	25ec <___vfprintf_internal_r+0x1e58>
    28a4:	90a4703a 	and	r18,r18,r2
    28a8:	903f4e26 	beq	r18,zero,25e4 <___vfprintf_internal_r+0x1e50>
    28ac:	003f4a06 	br	25d8 <___vfprintf_internal_r+0x1e44>
    28b0:	00800084 	movi	r2,2
    28b4:	10c5c83a 	sub	r2,r2,r3
    28b8:	003f8406 	br	26cc <___vfprintf_internal_r+0x1f38>
    28bc:	d8802d17 	ldw	r2,180(sp)
    28c0:	d9002d17 	ldw	r4,180(sp)
    28c4:	ac400043 	ldbu	r17,1(r21)
    28c8:	10800017 	ldw	r2,0(r2)
    28cc:	582b883a 	mov	r21,r11
    28d0:	d8802915 	stw	r2,164(sp)
    28d4:	20800104 	addi	r2,r4,4
    28d8:	d9002917 	ldw	r4,164(sp)
    28dc:	d8802d15 	stw	r2,180(sp)
    28e0:	203e7a0e 	bge	r4,zero,22cc <___vfprintf_internal_r+0x1b38>
    28e4:	8c403fcc 	andi	r17,r17,255
    28e8:	00bfffc4 	movi	r2,-1
    28ec:	8c40201c 	xori	r17,r17,128
    28f0:	d8802915 	stw	r2,164(sp)
    28f4:	8c7fe004 	addi	r17,r17,-128
    28f8:	00380706 	br	918 <___vfprintf_internal_r+0x184>
    28fc:	d8c02917 	ldw	r3,164(sp)
    2900:	18c00084 	addi	r3,r3,2
    2904:	d8c02e15 	stw	r3,184(sp)
    2908:	1805883a 	mov	r2,r3
    290c:	183d960e 	bge	r3,zero,1f68 <___vfprintf_internal_r+0x17d4>
    2910:	003fd606 	br	286c <___vfprintf_internal_r+0x20d8>
    2914:	0005883a 	mov	r2,zero
    2918:	003f8e06 	br	2754 <___vfprintf_internal_r+0x1fc0>
    291c:	9080004c 	andi	r2,r18,1
    2920:	103f811e 	bne	r2,zero,2728 <___vfprintf_internal_r+0x1f94>
    2924:	d8802117 	ldw	r2,132(sp)
    2928:	1405c83a 	sub	r2,r2,r16
    292c:	d8803315 	stw	r2,204(sp)
    2930:	b47ef326 	beq	r22,r17,2500 <___vfprintf_internal_r+0x1d6c>
    2934:	dd802617 	ldw	r22,152(sp)
    2938:	003f1106 	br	2580 <___vfprintf_internal_r+0x1dec>
    293c:	d9c02785 	stb	r7,158(sp)
    2940:	00390406 	br	d54 <___vfprintf_internal_r+0x5c0>
    2944:	d9c02785 	stb	r7,158(sp)
    2948:	0038d306 	br	c98 <___vfprintf_internal_r+0x504>
    294c:	d9c02785 	stb	r7,158(sp)
    2950:	003a6106 	br	12d8 <___vfprintf_internal_r+0xb44>
    2954:	d9c02785 	stb	r7,158(sp)
    2958:	003af806 	br	153c <___vfprintf_internal_r+0xda8>
    295c:	0005883a 	mov	r2,zero
    2960:	003d7e06 	br	1f5c <___vfprintf_internal_r+0x17c8>
    2964:	d8802344 	addi	r2,sp,141
    2968:	003f1306 	br	25b8 <___vfprintf_internal_r+0x1e24>
    296c:	d9c02785 	stb	r7,158(sp)
    2970:	00392306 	br	e00 <___vfprintf_internal_r+0x66c>
    2974:	d9c02785 	stb	r7,158(sp)
    2978:	003aa906 	br	1420 <___vfprintf_internal_r+0xc8c>
    297c:	d9c02785 	stb	r7,158(sp)
    2980:	003a3d06 	br	1278 <___vfprintf_internal_r+0xae4>
    2984:	d9c02785 	stb	r7,158(sp)
    2988:	003aca06 	br	14b4 <___vfprintf_internal_r+0xd20>

0000298c <__vfprintf_internal>:
    298c:	00800074 	movhi	r2,1
    2990:	1084c904 	addi	r2,r2,4900
    2994:	300f883a 	mov	r7,r6
    2998:	280d883a 	mov	r6,r5
    299c:	200b883a 	mov	r5,r4
    29a0:	11000017 	ldw	r4,0(r2)
    29a4:	00007941 	jmpi	794 <___vfprintf_internal_r>

000029a8 <__sbprintf>:
    29a8:	2880030b 	ldhu	r2,12(r5)
    29ac:	2ac01917 	ldw	r11,100(r5)
    29b0:	2a80038b 	ldhu	r10,14(r5)
    29b4:	2a400717 	ldw	r9,28(r5)
    29b8:	2a000917 	ldw	r8,36(r5)
    29bc:	defee204 	addi	sp,sp,-1144
    29c0:	00c10004 	movi	r3,1024
    29c4:	dc011a15 	stw	r16,1128(sp)
    29c8:	10bfff4c 	andi	r2,r2,65533
    29cc:	2821883a 	mov	r16,r5
    29d0:	d8cb883a 	add	r5,sp,r3
    29d4:	dc811c15 	stw	r18,1136(sp)
    29d8:	dc411b15 	stw	r17,1132(sp)
    29dc:	dfc11d15 	stw	ra,1140(sp)
    29e0:	2025883a 	mov	r18,r4
    29e4:	d881030d 	sth	r2,1036(sp)
    29e8:	dac11915 	stw	r11,1124(sp)
    29ec:	da81038d 	sth	r10,1038(sp)
    29f0:	da410715 	stw	r9,1052(sp)
    29f4:	da010915 	stw	r8,1060(sp)
    29f8:	dec10015 	stw	sp,1024(sp)
    29fc:	dec10415 	stw	sp,1040(sp)
    2a00:	d8c10215 	stw	r3,1032(sp)
    2a04:	d8c10515 	stw	r3,1044(sp)
    2a08:	d8010615 	stw	zero,1048(sp)
    2a0c:	00007940 	call	794 <___vfprintf_internal_r>
    2a10:	1023883a 	mov	r17,r2
    2a14:	10000416 	blt	r2,zero,2a28 <__sbprintf+0x80>
    2a18:	d9410004 	addi	r5,sp,1024
    2a1c:	9009883a 	mov	r4,r18
    2a20:	000465c0 	call	465c <_fflush_r>
    2a24:	10000d1e 	bne	r2,zero,2a5c <__sbprintf+0xb4>
    2a28:	d881030b 	ldhu	r2,1036(sp)
    2a2c:	1080100c 	andi	r2,r2,64
    2a30:	10000326 	beq	r2,zero,2a40 <__sbprintf+0x98>
    2a34:	8080030b 	ldhu	r2,12(r16)
    2a38:	10801014 	ori	r2,r2,64
    2a3c:	8080030d 	sth	r2,12(r16)
    2a40:	8805883a 	mov	r2,r17
    2a44:	dfc11d17 	ldw	ra,1140(sp)
    2a48:	dc811c17 	ldw	r18,1136(sp)
    2a4c:	dc411b17 	ldw	r17,1132(sp)
    2a50:	dc011a17 	ldw	r16,1128(sp)
    2a54:	dec11e04 	addi	sp,sp,1144
    2a58:	f800283a 	ret
    2a5c:	047fffc4 	movi	r17,-1
    2a60:	003ff106 	br	2a28 <__sbprintf+0x80>

00002a64 <__swsetup_r>:
    2a64:	00800074 	movhi	r2,1
    2a68:	defffd04 	addi	sp,sp,-12
    2a6c:	1084c904 	addi	r2,r2,4900
    2a70:	dc400115 	stw	r17,4(sp)
    2a74:	2023883a 	mov	r17,r4
    2a78:	11000017 	ldw	r4,0(r2)
    2a7c:	dc000015 	stw	r16,0(sp)
    2a80:	dfc00215 	stw	ra,8(sp)
    2a84:	2821883a 	mov	r16,r5
    2a88:	20000226 	beq	r4,zero,2a94 <__swsetup_r+0x30>
    2a8c:	20800e17 	ldw	r2,56(r4)
    2a90:	10003126 	beq	r2,zero,2b58 <__swsetup_r+0xf4>
    2a94:	8080030b 	ldhu	r2,12(r16)
    2a98:	10c0020c 	andi	r3,r2,8
    2a9c:	1009883a 	mov	r4,r2
    2aa0:	18000f26 	beq	r3,zero,2ae0 <__swsetup_r+0x7c>
    2aa4:	80c00417 	ldw	r3,16(r16)
    2aa8:	18001526 	beq	r3,zero,2b00 <__swsetup_r+0x9c>
    2aac:	1100004c 	andi	r4,r2,1
    2ab0:	20001c1e 	bne	r4,zero,2b24 <__swsetup_r+0xc0>
    2ab4:	1080008c 	andi	r2,r2,2
    2ab8:	1000291e 	bne	r2,zero,2b60 <__swsetup_r+0xfc>
    2abc:	80800517 	ldw	r2,20(r16)
    2ac0:	80800215 	stw	r2,8(r16)
    2ac4:	18001c26 	beq	r3,zero,2b38 <__swsetup_r+0xd4>
    2ac8:	0005883a 	mov	r2,zero
    2acc:	dfc00217 	ldw	ra,8(sp)
    2ad0:	dc400117 	ldw	r17,4(sp)
    2ad4:	dc000017 	ldw	r16,0(sp)
    2ad8:	dec00304 	addi	sp,sp,12
    2adc:	f800283a 	ret
    2ae0:	2080040c 	andi	r2,r4,16
    2ae4:	10002e26 	beq	r2,zero,2ba0 <__swsetup_r+0x13c>
    2ae8:	2080010c 	andi	r2,r4,4
    2aec:	10001e1e 	bne	r2,zero,2b68 <__swsetup_r+0x104>
    2af0:	80c00417 	ldw	r3,16(r16)
    2af4:	20800214 	ori	r2,r4,8
    2af8:	8080030d 	sth	r2,12(r16)
    2afc:	183feb1e 	bne	r3,zero,2aac <__swsetup_r+0x48>
    2b00:	1100a00c 	andi	r4,r2,640
    2b04:	01408004 	movi	r5,512
    2b08:	217fe826 	beq	r4,r5,2aac <__swsetup_r+0x48>
    2b0c:	800b883a 	mov	r5,r16
    2b10:	8809883a 	mov	r4,r17
    2b14:	00055dc0 	call	55dc <__smakebuf_r>
    2b18:	8080030b 	ldhu	r2,12(r16)
    2b1c:	80c00417 	ldw	r3,16(r16)
    2b20:	003fe206 	br	2aac <__swsetup_r+0x48>
    2b24:	80800517 	ldw	r2,20(r16)
    2b28:	80000215 	stw	zero,8(r16)
    2b2c:	0085c83a 	sub	r2,zero,r2
    2b30:	80800615 	stw	r2,24(r16)
    2b34:	183fe41e 	bne	r3,zero,2ac8 <__swsetup_r+0x64>
    2b38:	80c0030b 	ldhu	r3,12(r16)
    2b3c:	0005883a 	mov	r2,zero
    2b40:	1900200c 	andi	r4,r3,128
    2b44:	203fe126 	beq	r4,zero,2acc <__swsetup_r+0x68>
    2b48:	18c01014 	ori	r3,r3,64
    2b4c:	80c0030d 	sth	r3,12(r16)
    2b50:	00bfffc4 	movi	r2,-1
    2b54:	003fdd06 	br	2acc <__swsetup_r+0x68>
    2b58:	0004a380 	call	4a38 <__sinit>
    2b5c:	003fcd06 	br	2a94 <__swsetup_r+0x30>
    2b60:	0005883a 	mov	r2,zero
    2b64:	003fd606 	br	2ac0 <__swsetup_r+0x5c>
    2b68:	81400c17 	ldw	r5,48(r16)
    2b6c:	28000626 	beq	r5,zero,2b88 <__swsetup_r+0x124>
    2b70:	80801004 	addi	r2,r16,64
    2b74:	28800326 	beq	r5,r2,2b84 <__swsetup_r+0x120>
    2b78:	8809883a 	mov	r4,r17
    2b7c:	0004bac0 	call	4bac <_free_r>
    2b80:	8100030b 	ldhu	r4,12(r16)
    2b84:	80000c15 	stw	zero,48(r16)
    2b88:	80c00417 	ldw	r3,16(r16)
    2b8c:	00bff6c4 	movi	r2,-37
    2b90:	1108703a 	and	r4,r2,r4
    2b94:	80000115 	stw	zero,4(r16)
    2b98:	80c00015 	stw	r3,0(r16)
    2b9c:	003fd506 	br	2af4 <__swsetup_r+0x90>
    2ba0:	00800244 	movi	r2,9
    2ba4:	88800015 	stw	r2,0(r17)
    2ba8:	20801014 	ori	r2,r4,64
    2bac:	8080030d 	sth	r2,12(r16)
    2bb0:	00bfffc4 	movi	r2,-1
    2bb4:	003fc506 	br	2acc <__swsetup_r+0x68>

00002bb8 <quorem>:
    2bb8:	defff704 	addi	sp,sp,-36
    2bbc:	dc800215 	stw	r18,8(sp)
    2bc0:	20800417 	ldw	r2,16(r4)
    2bc4:	2c800417 	ldw	r18,16(r5)
    2bc8:	dfc00815 	stw	ra,32(sp)
    2bcc:	ddc00715 	stw	r23,28(sp)
    2bd0:	dd800615 	stw	r22,24(sp)
    2bd4:	dd400515 	stw	r21,20(sp)
    2bd8:	dd000415 	stw	r20,16(sp)
    2bdc:	dcc00315 	stw	r19,12(sp)
    2be0:	dc400115 	stw	r17,4(sp)
    2be4:	dc000015 	stw	r16,0(sp)
    2be8:	14807116 	blt	r2,r18,2db0 <quorem+0x1f8>
    2bec:	94bfffc4 	addi	r18,r18,-1
    2bf0:	94ad883a 	add	r22,r18,r18
    2bf4:	b5ad883a 	add	r22,r22,r22
    2bf8:	2c400504 	addi	r17,r5,20
    2bfc:	8da9883a 	add	r20,r17,r22
    2c00:	25400504 	addi	r21,r4,20
    2c04:	282f883a 	mov	r23,r5
    2c08:	adad883a 	add	r22,r21,r22
    2c0c:	a1400017 	ldw	r5,0(r20)
    2c10:	2021883a 	mov	r16,r4
    2c14:	b1000017 	ldw	r4,0(r22)
    2c18:	29400044 	addi	r5,r5,1
    2c1c:	000a6700 	call	a670 <__udivsi3>
    2c20:	1027883a 	mov	r19,r2
    2c24:	10002c26 	beq	r2,zero,2cd8 <quorem+0x120>
    2c28:	a813883a 	mov	r9,r21
    2c2c:	880b883a 	mov	r5,r17
    2c30:	0009883a 	mov	r4,zero
    2c34:	000d883a 	mov	r6,zero
    2c38:	2a000017 	ldw	r8,0(r5)
    2c3c:	49c00017 	ldw	r7,0(r9)
    2c40:	29400104 	addi	r5,r5,4
    2c44:	40bfffcc 	andi	r2,r8,65535
    2c48:	14c5383a 	mul	r2,r2,r19
    2c4c:	4010d43a 	srli	r8,r8,16
    2c50:	38ffffcc 	andi	r3,r7,65535
    2c54:	1105883a 	add	r2,r2,r4
    2c58:	1008d43a 	srli	r4,r2,16
    2c5c:	44d1383a 	mul	r8,r8,r19
    2c60:	198d883a 	add	r6,r3,r6
    2c64:	10ffffcc 	andi	r3,r2,65535
    2c68:	30c7c83a 	sub	r3,r6,r3
    2c6c:	380ed43a 	srli	r7,r7,16
    2c70:	4105883a 	add	r2,r8,r4
    2c74:	180dd43a 	srai	r6,r3,16
    2c78:	113fffcc 	andi	r4,r2,65535
    2c7c:	390fc83a 	sub	r7,r7,r4
    2c80:	398d883a 	add	r6,r7,r6
    2c84:	300e943a 	slli	r7,r6,16
    2c88:	18ffffcc 	andi	r3,r3,65535
    2c8c:	1008d43a 	srli	r4,r2,16
    2c90:	38ceb03a 	or	r7,r7,r3
    2c94:	49c00015 	stw	r7,0(r9)
    2c98:	300dd43a 	srai	r6,r6,16
    2c9c:	4a400104 	addi	r9,r9,4
    2ca0:	a17fe52e 	bgeu	r20,r5,2c38 <quorem+0x80>
    2ca4:	b0800017 	ldw	r2,0(r22)
    2ca8:	10000b1e 	bne	r2,zero,2cd8 <quorem+0x120>
    2cac:	b0bfff04 	addi	r2,r22,-4
    2cb0:	a880082e 	bgeu	r21,r2,2cd4 <quorem+0x11c>
    2cb4:	b0ffff17 	ldw	r3,-4(r22)
    2cb8:	18000326 	beq	r3,zero,2cc8 <quorem+0x110>
    2cbc:	00000506 	br	2cd4 <quorem+0x11c>
    2cc0:	10c00017 	ldw	r3,0(r2)
    2cc4:	1800031e 	bne	r3,zero,2cd4 <quorem+0x11c>
    2cc8:	10bfff04 	addi	r2,r2,-4
    2ccc:	94bfffc4 	addi	r18,r18,-1
    2cd0:	a8bffb36 	bltu	r21,r2,2cc0 <quorem+0x108>
    2cd4:	84800415 	stw	r18,16(r16)
    2cd8:	b80b883a 	mov	r5,r23
    2cdc:	8009883a 	mov	r4,r16
    2ce0:	0006bd40 	call	6bd4 <__mcmp>
    2ce4:	10002616 	blt	r2,zero,2d80 <quorem+0x1c8>
    2ce8:	9cc00044 	addi	r19,r19,1
    2cec:	a805883a 	mov	r2,r21
    2cf0:	000b883a 	mov	r5,zero
    2cf4:	11000017 	ldw	r4,0(r2)
    2cf8:	89800017 	ldw	r6,0(r17)
    2cfc:	10800104 	addi	r2,r2,4
    2d00:	20ffffcc 	andi	r3,r4,65535
    2d04:	194b883a 	add	r5,r3,r5
    2d08:	30ffffcc 	andi	r3,r6,65535
    2d0c:	28c7c83a 	sub	r3,r5,r3
    2d10:	300cd43a 	srli	r6,r6,16
    2d14:	2008d43a 	srli	r4,r4,16
    2d18:	180bd43a 	srai	r5,r3,16
    2d1c:	18ffffcc 	andi	r3,r3,65535
    2d20:	2189c83a 	sub	r4,r4,r6
    2d24:	2149883a 	add	r4,r4,r5
    2d28:	200c943a 	slli	r6,r4,16
    2d2c:	8c400104 	addi	r17,r17,4
    2d30:	200bd43a 	srai	r5,r4,16
    2d34:	30c6b03a 	or	r3,r6,r3
    2d38:	10ffff15 	stw	r3,-4(r2)
    2d3c:	a47fed2e 	bgeu	r20,r17,2cf4 <quorem+0x13c>
    2d40:	9485883a 	add	r2,r18,r18
    2d44:	1085883a 	add	r2,r2,r2
    2d48:	a887883a 	add	r3,r21,r2
    2d4c:	18800017 	ldw	r2,0(r3)
    2d50:	10000b1e 	bne	r2,zero,2d80 <quorem+0x1c8>
    2d54:	18bfff04 	addi	r2,r3,-4
    2d58:	a880082e 	bgeu	r21,r2,2d7c <quorem+0x1c4>
    2d5c:	18ffff17 	ldw	r3,-4(r3)
    2d60:	18000326 	beq	r3,zero,2d70 <quorem+0x1b8>
    2d64:	00000506 	br	2d7c <quorem+0x1c4>
    2d68:	10c00017 	ldw	r3,0(r2)
    2d6c:	1800031e 	bne	r3,zero,2d7c <quorem+0x1c4>
    2d70:	10bfff04 	addi	r2,r2,-4
    2d74:	94bfffc4 	addi	r18,r18,-1
    2d78:	a8bffb36 	bltu	r21,r2,2d68 <quorem+0x1b0>
    2d7c:	84800415 	stw	r18,16(r16)
    2d80:	9805883a 	mov	r2,r19
    2d84:	dfc00817 	ldw	ra,32(sp)
    2d88:	ddc00717 	ldw	r23,28(sp)
    2d8c:	dd800617 	ldw	r22,24(sp)
    2d90:	dd400517 	ldw	r21,20(sp)
    2d94:	dd000417 	ldw	r20,16(sp)
    2d98:	dcc00317 	ldw	r19,12(sp)
    2d9c:	dc800217 	ldw	r18,8(sp)
    2da0:	dc400117 	ldw	r17,4(sp)
    2da4:	dc000017 	ldw	r16,0(sp)
    2da8:	dec00904 	addi	sp,sp,36
    2dac:	f800283a 	ret
    2db0:	0005883a 	mov	r2,zero
    2db4:	003ff306 	br	2d84 <quorem+0x1cc>

00002db8 <_dtoa_r>:
    2db8:	20801017 	ldw	r2,64(r4)
    2dbc:	deffde04 	addi	sp,sp,-136
    2dc0:	df002015 	stw	fp,128(sp)
    2dc4:	dcc01b15 	stw	r19,108(sp)
    2dc8:	dc801a15 	stw	r18,104(sp)
    2dcc:	dc401915 	stw	r17,100(sp)
    2dd0:	dc001815 	stw	r16,96(sp)
    2dd4:	dfc02115 	stw	ra,132(sp)
    2dd8:	ddc01f15 	stw	r23,124(sp)
    2ddc:	dd801e15 	stw	r22,120(sp)
    2de0:	dd401d15 	stw	r21,116(sp)
    2de4:	dd001c15 	stw	r20,112(sp)
    2de8:	d9c00315 	stw	r7,12(sp)
    2dec:	2039883a 	mov	fp,r4
    2df0:	3023883a 	mov	r17,r6
    2df4:	2825883a 	mov	r18,r5
    2df8:	dc002417 	ldw	r16,144(sp)
    2dfc:	3027883a 	mov	r19,r6
    2e00:	10000826 	beq	r2,zero,2e24 <_dtoa_r+0x6c>
    2e04:	21801117 	ldw	r6,68(r4)
    2e08:	00c00044 	movi	r3,1
    2e0c:	100b883a 	mov	r5,r2
    2e10:	1986983a 	sll	r3,r3,r6
    2e14:	11800115 	stw	r6,4(r2)
    2e18:	10c00215 	stw	r3,8(r2)
    2e1c:	00063b40 	call	63b4 <_Bfree>
    2e20:	e0001015 	stw	zero,64(fp)
    2e24:	88002e16 	blt	r17,zero,2ee0 <_dtoa_r+0x128>
    2e28:	80000015 	stw	zero,0(r16)
    2e2c:	889ffc2c 	andhi	r2,r17,32752
    2e30:	00dffc34 	movhi	r3,32752
    2e34:	10c01c26 	beq	r2,r3,2ea8 <_dtoa_r+0xf0>
    2e38:	000d883a 	mov	r6,zero
    2e3c:	000f883a 	mov	r7,zero
    2e40:	9009883a 	mov	r4,r18
    2e44:	980b883a 	mov	r5,r19
    2e48:	000b8c00 	call	b8c0 <__eqdf2>
    2e4c:	10002b1e 	bne	r2,zero,2efc <_dtoa_r+0x144>
    2e50:	d9c02317 	ldw	r7,140(sp)
    2e54:	00800044 	movi	r2,1
    2e58:	38800015 	stw	r2,0(r7)
    2e5c:	d8802517 	ldw	r2,148(sp)
    2e60:	10019e26 	beq	r2,zero,34dc <_dtoa_r+0x724>
    2e64:	d8c02517 	ldw	r3,148(sp)
    2e68:	00800074 	movhi	r2,1
    2e6c:	10bd7044 	addi	r2,r2,-2623
    2e70:	18800015 	stw	r2,0(r3)
    2e74:	10bfffc4 	addi	r2,r2,-1
    2e78:	dfc02117 	ldw	ra,132(sp)
    2e7c:	df002017 	ldw	fp,128(sp)
    2e80:	ddc01f17 	ldw	r23,124(sp)
    2e84:	dd801e17 	ldw	r22,120(sp)
    2e88:	dd401d17 	ldw	r21,116(sp)
    2e8c:	dd001c17 	ldw	r20,112(sp)
    2e90:	dcc01b17 	ldw	r19,108(sp)
    2e94:	dc801a17 	ldw	r18,104(sp)
    2e98:	dc401917 	ldw	r17,100(sp)
    2e9c:	dc001817 	ldw	r16,96(sp)
    2ea0:	dec02204 	addi	sp,sp,136
    2ea4:	f800283a 	ret
    2ea8:	d8c02317 	ldw	r3,140(sp)
    2eac:	0089c3c4 	movi	r2,9999
    2eb0:	18800015 	stw	r2,0(r3)
    2eb4:	90017726 	beq	r18,zero,3494 <_dtoa_r+0x6dc>
    2eb8:	00800074 	movhi	r2,1
    2ebc:	10bd7c04 	addi	r2,r2,-2576
    2ec0:	d9002517 	ldw	r4,148(sp)
    2ec4:	203fec26 	beq	r4,zero,2e78 <_dtoa_r+0xc0>
    2ec8:	10c000c7 	ldb	r3,3(r2)
    2ecc:	1801781e 	bne	r3,zero,34b0 <_dtoa_r+0x6f8>
    2ed0:	10c000c4 	addi	r3,r2,3
    2ed4:	d9802517 	ldw	r6,148(sp)
    2ed8:	30c00015 	stw	r3,0(r6)
    2edc:	003fe606 	br	2e78 <_dtoa_r+0xc0>
    2ee0:	04e00034 	movhi	r19,32768
    2ee4:	9cffffc4 	addi	r19,r19,-1
    2ee8:	00800044 	movi	r2,1
    2eec:	8ce6703a 	and	r19,r17,r19
    2ef0:	80800015 	stw	r2,0(r16)
    2ef4:	9823883a 	mov	r17,r19
    2ef8:	003fcc06 	br	2e2c <_dtoa_r+0x74>
    2efc:	d8800204 	addi	r2,sp,8
    2f00:	d8800015 	stw	r2,0(sp)
    2f04:	d9c00104 	addi	r7,sp,4
    2f08:	900b883a 	mov	r5,r18
    2f0c:	980d883a 	mov	r6,r19
    2f10:	e009883a 	mov	r4,fp
    2f14:	8820d53a 	srli	r16,r17,20
    2f18:	0006fa00 	call	6fa0 <__d2b>
    2f1c:	d8800915 	stw	r2,36(sp)
    2f20:	8001651e 	bne	r16,zero,34b8 <_dtoa_r+0x700>
    2f24:	dd800217 	ldw	r22,8(sp)
    2f28:	dc000117 	ldw	r16,4(sp)
    2f2c:	00800804 	movi	r2,32
    2f30:	b421883a 	add	r16,r22,r16
    2f34:	80c10c84 	addi	r3,r16,1074
    2f38:	10c2d10e 	bge	r2,r3,3a80 <_dtoa_r+0xcc8>
    2f3c:	00801004 	movi	r2,64
    2f40:	81010484 	addi	r4,r16,1042
    2f44:	10c7c83a 	sub	r3,r2,r3
    2f48:	9108d83a 	srl	r4,r18,r4
    2f4c:	88e2983a 	sll	r17,r17,r3
    2f50:	2448b03a 	or	r4,r4,r17
    2f54:	000cc880 	call	cc88 <__floatunsidf>
    2f58:	017f8434 	movhi	r5,65040
    2f5c:	01800044 	movi	r6,1
    2f60:	1009883a 	mov	r4,r2
    2f64:	194b883a 	add	r5,r3,r5
    2f68:	843fffc4 	addi	r16,r16,-1
    2f6c:	d9801115 	stw	r6,68(sp)
    2f70:	000d883a 	mov	r6,zero
    2f74:	01cffe34 	movhi	r7,16376
    2f78:	000c2300 	call	c230 <__subdf3>
    2f7c:	0198dbf4 	movhi	r6,25455
    2f80:	01cff4f4 	movhi	r7,16339
    2f84:	3190d844 	addi	r6,r6,17249
    2f88:	39e1e9c4 	addi	r7,r7,-30809
    2f8c:	1009883a 	mov	r4,r2
    2f90:	180b883a 	mov	r5,r3
    2f94:	000bb180 	call	bb18 <__muldf3>
    2f98:	01a2d874 	movhi	r6,35681
    2f9c:	01cff1f4 	movhi	r7,16327
    2fa0:	31b22cc4 	addi	r6,r6,-14157
    2fa4:	39e28a04 	addi	r7,r7,-30168
    2fa8:	180b883a 	mov	r5,r3
    2fac:	1009883a 	mov	r4,r2
    2fb0:	000a72c0 	call	a72c <__adddf3>
    2fb4:	8009883a 	mov	r4,r16
    2fb8:	1029883a 	mov	r20,r2
    2fbc:	1823883a 	mov	r17,r3
    2fc0:	000cbac0 	call	cbac <__floatsidf>
    2fc4:	019427f4 	movhi	r6,20639
    2fc8:	01cff4f4 	movhi	r7,16339
    2fcc:	319e7ec4 	addi	r6,r6,31227
    2fd0:	39d104c4 	addi	r7,r7,17427
    2fd4:	1009883a 	mov	r4,r2
    2fd8:	180b883a 	mov	r5,r3
    2fdc:	000bb180 	call	bb18 <__muldf3>
    2fe0:	100d883a 	mov	r6,r2
    2fe4:	180f883a 	mov	r7,r3
    2fe8:	a009883a 	mov	r4,r20
    2fec:	880b883a 	mov	r5,r17
    2ff0:	000a72c0 	call	a72c <__adddf3>
    2ff4:	1009883a 	mov	r4,r2
    2ff8:	180b883a 	mov	r5,r3
    2ffc:	1029883a 	mov	r20,r2
    3000:	1823883a 	mov	r17,r3
    3004:	000cb2c0 	call	cb2c <__fixdfsi>
    3008:	000d883a 	mov	r6,zero
    300c:	000f883a 	mov	r7,zero
    3010:	a009883a 	mov	r4,r20
    3014:	880b883a 	mov	r5,r17
    3018:	d8800515 	stw	r2,20(sp)
    301c:	000ba240 	call	ba24 <__ledf2>
    3020:	10028716 	blt	r2,zero,3a40 <_dtoa_r+0xc88>
    3024:	d8c00517 	ldw	r3,20(sp)
    3028:	00800584 	movi	r2,22
    302c:	10c27536 	bltu	r2,r3,3a04 <_dtoa_r+0xc4c>
    3030:	180490fa 	slli	r2,r3,3
    3034:	00c00074 	movhi	r3,1
    3038:	18fd9804 	addi	r3,r3,-2464
    303c:	1885883a 	add	r2,r3,r2
    3040:	11000017 	ldw	r4,0(r2)
    3044:	11400117 	ldw	r5,4(r2)
    3048:	900d883a 	mov	r6,r18
    304c:	980f883a 	mov	r7,r19
    3050:	000b9480 	call	b948 <__gedf2>
    3054:	00828d0e 	bge	zero,r2,3a8c <_dtoa_r+0xcd4>
    3058:	d9000517 	ldw	r4,20(sp)
    305c:	d8000e15 	stw	zero,56(sp)
    3060:	213fffc4 	addi	r4,r4,-1
    3064:	d9000515 	stw	r4,20(sp)
    3068:	b42dc83a 	sub	r22,r22,r16
    306c:	b5bfffc4 	addi	r22,r22,-1
    3070:	b0026f16 	blt	r22,zero,3a30 <_dtoa_r+0xc78>
    3074:	d8000815 	stw	zero,32(sp)
    3078:	d9c00517 	ldw	r7,20(sp)
    307c:	38026416 	blt	r7,zero,3a10 <_dtoa_r+0xc58>
    3080:	b1ed883a 	add	r22,r22,r7
    3084:	d9c00d15 	stw	r7,52(sp)
    3088:	d8000a15 	stw	zero,40(sp)
    308c:	d9800317 	ldw	r6,12(sp)
    3090:	00800244 	movi	r2,9
    3094:	11811436 	bltu	r2,r6,34e8 <_dtoa_r+0x730>
    3098:	00800144 	movi	r2,5
    309c:	1184e10e 	bge	r2,r6,4424 <_dtoa_r+0x166c>
    30a0:	31bfff04 	addi	r6,r6,-4
    30a4:	d9800315 	stw	r6,12(sp)
    30a8:	0023883a 	mov	r17,zero
    30ac:	d9800317 	ldw	r6,12(sp)
    30b0:	008000c4 	movi	r2,3
    30b4:	30836726 	beq	r6,r2,3e54 <_dtoa_r+0x109c>
    30b8:	1183410e 	bge	r2,r6,3dc0 <_dtoa_r+0x1008>
    30bc:	d9c00317 	ldw	r7,12(sp)
    30c0:	00800104 	movi	r2,4
    30c4:	38827c26 	beq	r7,r2,3ab8 <_dtoa_r+0xd00>
    30c8:	00800144 	movi	r2,5
    30cc:	3884c41e 	bne	r7,r2,43e0 <_dtoa_r+0x1628>
    30d0:	00800044 	movi	r2,1
    30d4:	d8800b15 	stw	r2,44(sp)
    30d8:	d8c00517 	ldw	r3,20(sp)
    30dc:	d9002217 	ldw	r4,136(sp)
    30e0:	1907883a 	add	r3,r3,r4
    30e4:	19800044 	addi	r6,r3,1
    30e8:	d8c00c15 	stw	r3,48(sp)
    30ec:	d9800615 	stw	r6,24(sp)
    30f0:	0183a40e 	bge	zero,r6,3f84 <_dtoa_r+0x11cc>
    30f4:	d9800617 	ldw	r6,24(sp)
    30f8:	3021883a 	mov	r16,r6
    30fc:	e0001115 	stw	zero,68(fp)
    3100:	008005c4 	movi	r2,23
    3104:	1184c92e 	bgeu	r2,r6,442c <_dtoa_r+0x1674>
    3108:	00c00044 	movi	r3,1
    310c:	00800104 	movi	r2,4
    3110:	1085883a 	add	r2,r2,r2
    3114:	11000504 	addi	r4,r2,20
    3118:	180b883a 	mov	r5,r3
    311c:	18c00044 	addi	r3,r3,1
    3120:	313ffb2e 	bgeu	r6,r4,3110 <_dtoa_r+0x358>
    3124:	e1401115 	stw	r5,68(fp)
    3128:	e009883a 	mov	r4,fp
    312c:	000630c0 	call	630c <_Balloc>
    3130:	d8800715 	stw	r2,28(sp)
    3134:	e0801015 	stw	r2,64(fp)
    3138:	00800384 	movi	r2,14
    313c:	1400f736 	bltu	r2,r16,351c <_dtoa_r+0x764>
    3140:	8800f626 	beq	r17,zero,351c <_dtoa_r+0x764>
    3144:	d9c00517 	ldw	r7,20(sp)
    3148:	01c39a0e 	bge	zero,r7,3fb4 <_dtoa_r+0x11fc>
    314c:	388003cc 	andi	r2,r7,15
    3150:	100490fa 	slli	r2,r2,3
    3154:	382bd13a 	srai	r21,r7,4
    3158:	00c00074 	movhi	r3,1
    315c:	18fd9804 	addi	r3,r3,-2464
    3160:	1885883a 	add	r2,r3,r2
    3164:	a8c0040c 	andi	r3,r21,16
    3168:	12400017 	ldw	r9,0(r2)
    316c:	12000117 	ldw	r8,4(r2)
    3170:	18037926 	beq	r3,zero,3f58 <_dtoa_r+0x11a0>
    3174:	00800074 	movhi	r2,1
    3178:	10bd8e04 	addi	r2,r2,-2504
    317c:	11800817 	ldw	r6,32(r2)
    3180:	11c00917 	ldw	r7,36(r2)
    3184:	9009883a 	mov	r4,r18
    3188:	980b883a 	mov	r5,r19
    318c:	da001715 	stw	r8,92(sp)
    3190:	da401615 	stw	r9,88(sp)
    3194:	000afd80 	call	afd8 <__divdf3>
    3198:	da001717 	ldw	r8,92(sp)
    319c:	da401617 	ldw	r9,88(sp)
    31a0:	ad4003cc 	andi	r21,r21,15
    31a4:	040000c4 	movi	r16,3
    31a8:	1023883a 	mov	r17,r2
    31ac:	1829883a 	mov	r20,r3
    31b0:	a8001126 	beq	r21,zero,31f8 <_dtoa_r+0x440>
    31b4:	05c00074 	movhi	r23,1
    31b8:	bdfd8e04 	addi	r23,r23,-2504
    31bc:	4805883a 	mov	r2,r9
    31c0:	4007883a 	mov	r3,r8
    31c4:	a980004c 	andi	r6,r21,1
    31c8:	1009883a 	mov	r4,r2
    31cc:	a82bd07a 	srai	r21,r21,1
    31d0:	180b883a 	mov	r5,r3
    31d4:	30000426 	beq	r6,zero,31e8 <_dtoa_r+0x430>
    31d8:	b9800017 	ldw	r6,0(r23)
    31dc:	b9c00117 	ldw	r7,4(r23)
    31e0:	84000044 	addi	r16,r16,1
    31e4:	000bb180 	call	bb18 <__muldf3>
    31e8:	bdc00204 	addi	r23,r23,8
    31ec:	a83ff51e 	bne	r21,zero,31c4 <_dtoa_r+0x40c>
    31f0:	1013883a 	mov	r9,r2
    31f4:	1811883a 	mov	r8,r3
    31f8:	480d883a 	mov	r6,r9
    31fc:	400f883a 	mov	r7,r8
    3200:	8809883a 	mov	r4,r17
    3204:	a00b883a 	mov	r5,r20
    3208:	000afd80 	call	afd8 <__divdf3>
    320c:	d8800f15 	stw	r2,60(sp)
    3210:	d8c01015 	stw	r3,64(sp)
    3214:	d8c00e17 	ldw	r3,56(sp)
    3218:	18000626 	beq	r3,zero,3234 <_dtoa_r+0x47c>
    321c:	d9000f17 	ldw	r4,60(sp)
    3220:	d9401017 	ldw	r5,64(sp)
    3224:	000d883a 	mov	r6,zero
    3228:	01cffc34 	movhi	r7,16368
    322c:	000ba240 	call	ba24 <__ledf2>
    3230:	10040b16 	blt	r2,zero,4260 <_dtoa_r+0x14a8>
    3234:	8009883a 	mov	r4,r16
    3238:	000cbac0 	call	cbac <__floatsidf>
    323c:	d9800f17 	ldw	r6,60(sp)
    3240:	d9c01017 	ldw	r7,64(sp)
    3244:	1009883a 	mov	r4,r2
    3248:	180b883a 	mov	r5,r3
    324c:	000bb180 	call	bb18 <__muldf3>
    3250:	000d883a 	mov	r6,zero
    3254:	01d00734 	movhi	r7,16412
    3258:	1009883a 	mov	r4,r2
    325c:	180b883a 	mov	r5,r3
    3260:	000a72c0 	call	a72c <__adddf3>
    3264:	1021883a 	mov	r16,r2
    3268:	d8800617 	ldw	r2,24(sp)
    326c:	047f3034 	movhi	r17,64704
    3270:	1c63883a 	add	r17,r3,r17
    3274:	10031826 	beq	r2,zero,3ed8 <_dtoa_r+0x1120>
    3278:	d8c00517 	ldw	r3,20(sp)
    327c:	db000617 	ldw	r12,24(sp)
    3280:	d8c01315 	stw	r3,76(sp)
    3284:	d9000b17 	ldw	r4,44(sp)
    3288:	20038f26 	beq	r4,zero,40c8 <_dtoa_r+0x1310>
    328c:	60bfffc4 	addi	r2,r12,-1
    3290:	100490fa 	slli	r2,r2,3
    3294:	00c00074 	movhi	r3,1
    3298:	18fd9804 	addi	r3,r3,-2464
    329c:	1885883a 	add	r2,r3,r2
    32a0:	11800017 	ldw	r6,0(r2)
    32a4:	11c00117 	ldw	r7,4(r2)
    32a8:	d8800717 	ldw	r2,28(sp)
    32ac:	0009883a 	mov	r4,zero
    32b0:	014ff834 	movhi	r5,16352
    32b4:	db001615 	stw	r12,88(sp)
    32b8:	15c00044 	addi	r23,r2,1
    32bc:	000afd80 	call	afd8 <__divdf3>
    32c0:	800d883a 	mov	r6,r16
    32c4:	880f883a 	mov	r7,r17
    32c8:	1009883a 	mov	r4,r2
    32cc:	180b883a 	mov	r5,r3
    32d0:	000c2300 	call	c230 <__subdf3>
    32d4:	d9401017 	ldw	r5,64(sp)
    32d8:	d9000f17 	ldw	r4,60(sp)
    32dc:	102b883a 	mov	r21,r2
    32e0:	d8c01215 	stw	r3,72(sp)
    32e4:	000cb2c0 	call	cb2c <__fixdfsi>
    32e8:	1009883a 	mov	r4,r2
    32ec:	1029883a 	mov	r20,r2
    32f0:	000cbac0 	call	cbac <__floatsidf>
    32f4:	d9000f17 	ldw	r4,60(sp)
    32f8:	d9401017 	ldw	r5,64(sp)
    32fc:	100d883a 	mov	r6,r2
    3300:	180f883a 	mov	r7,r3
    3304:	000c2300 	call	c230 <__subdf3>
    3308:	1823883a 	mov	r17,r3
    330c:	d8c00717 	ldw	r3,28(sp)
    3310:	d9401217 	ldw	r5,72(sp)
    3314:	a2000c04 	addi	r8,r20,48
    3318:	1021883a 	mov	r16,r2
    331c:	1a000005 	stb	r8,0(r3)
    3320:	800d883a 	mov	r6,r16
    3324:	880f883a 	mov	r7,r17
    3328:	a809883a 	mov	r4,r21
    332c:	4029883a 	mov	r20,r8
    3330:	000b9480 	call	b948 <__gedf2>
    3334:	00841d16 	blt	zero,r2,43ac <_dtoa_r+0x15f4>
    3338:	800d883a 	mov	r6,r16
    333c:	880f883a 	mov	r7,r17
    3340:	0009883a 	mov	r4,zero
    3344:	014ffc34 	movhi	r5,16368
    3348:	000c2300 	call	c230 <__subdf3>
    334c:	d9401217 	ldw	r5,72(sp)
    3350:	100d883a 	mov	r6,r2
    3354:	180f883a 	mov	r7,r3
    3358:	a809883a 	mov	r4,r21
    335c:	000b9480 	call	b948 <__gedf2>
    3360:	db001617 	ldw	r12,88(sp)
    3364:	00840e16 	blt	zero,r2,43a0 <_dtoa_r+0x15e8>
    3368:	00800044 	movi	r2,1
    336c:	13006b0e 	bge	r2,r12,351c <_dtoa_r+0x764>
    3370:	d9000717 	ldw	r4,28(sp)
    3374:	dd800f15 	stw	r22,60(sp)
    3378:	dcc01015 	stw	r19,64(sp)
    337c:	2319883a 	add	r12,r4,r12
    3380:	dcc01217 	ldw	r19,72(sp)
    3384:	602d883a 	mov	r22,r12
    3388:	dc801215 	stw	r18,72(sp)
    338c:	b825883a 	mov	r18,r23
    3390:	00000906 	br	33b8 <_dtoa_r+0x600>
    3394:	000c2300 	call	c230 <__subdf3>
    3398:	a80d883a 	mov	r6,r21
    339c:	980f883a 	mov	r7,r19
    33a0:	1009883a 	mov	r4,r2
    33a4:	180b883a 	mov	r5,r3
    33a8:	000ba240 	call	ba24 <__ledf2>
    33ac:	1003e816 	blt	r2,zero,4350 <_dtoa_r+0x1598>
    33b0:	b825883a 	mov	r18,r23
    33b4:	bd83e926 	beq	r23,r22,435c <_dtoa_r+0x15a4>
    33b8:	a809883a 	mov	r4,r21
    33bc:	980b883a 	mov	r5,r19
    33c0:	000d883a 	mov	r6,zero
    33c4:	01d00934 	movhi	r7,16420
    33c8:	000bb180 	call	bb18 <__muldf3>
    33cc:	000d883a 	mov	r6,zero
    33d0:	01d00934 	movhi	r7,16420
    33d4:	8009883a 	mov	r4,r16
    33d8:	880b883a 	mov	r5,r17
    33dc:	102b883a 	mov	r21,r2
    33e0:	1827883a 	mov	r19,r3
    33e4:	000bb180 	call	bb18 <__muldf3>
    33e8:	180b883a 	mov	r5,r3
    33ec:	1009883a 	mov	r4,r2
    33f0:	1821883a 	mov	r16,r3
    33f4:	1023883a 	mov	r17,r2
    33f8:	000cb2c0 	call	cb2c <__fixdfsi>
    33fc:	1009883a 	mov	r4,r2
    3400:	1029883a 	mov	r20,r2
    3404:	000cbac0 	call	cbac <__floatsidf>
    3408:	8809883a 	mov	r4,r17
    340c:	800b883a 	mov	r5,r16
    3410:	100d883a 	mov	r6,r2
    3414:	180f883a 	mov	r7,r3
    3418:	000c2300 	call	c230 <__subdf3>
    341c:	a5000c04 	addi	r20,r20,48
    3420:	a80d883a 	mov	r6,r21
    3424:	980f883a 	mov	r7,r19
    3428:	1009883a 	mov	r4,r2
    342c:	180b883a 	mov	r5,r3
    3430:	95000005 	stb	r20,0(r18)
    3434:	1021883a 	mov	r16,r2
    3438:	1823883a 	mov	r17,r3
    343c:	000ba240 	call	ba24 <__ledf2>
    3440:	bdc00044 	addi	r23,r23,1
    3444:	800d883a 	mov	r6,r16
    3448:	880f883a 	mov	r7,r17
    344c:	0009883a 	mov	r4,zero
    3450:	014ffc34 	movhi	r5,16368
    3454:	103fcf0e 	bge	r2,zero,3394 <_dtoa_r+0x5dc>
    3458:	d8c01317 	ldw	r3,76(sp)
    345c:	d8c00515 	stw	r3,20(sp)
    3460:	d9400917 	ldw	r5,36(sp)
    3464:	e009883a 	mov	r4,fp
    3468:	00063b40 	call	63b4 <_Bfree>
    346c:	d9000517 	ldw	r4,20(sp)
    3470:	d9802317 	ldw	r6,140(sp)
    3474:	d9c02517 	ldw	r7,148(sp)
    3478:	b8000005 	stb	zero,0(r23)
    347c:	20800044 	addi	r2,r4,1
    3480:	30800015 	stw	r2,0(r6)
    3484:	3802aa26 	beq	r7,zero,3f30 <_dtoa_r+0x1178>
    3488:	3dc00015 	stw	r23,0(r7)
    348c:	d8800717 	ldw	r2,28(sp)
    3490:	003e7906 	br	2e78 <_dtoa_r+0xc0>
    3494:	00800434 	movhi	r2,16
    3498:	10bfffc4 	addi	r2,r2,-1
    349c:	88a2703a 	and	r17,r17,r2
    34a0:	883e851e 	bne	r17,zero,2eb8 <_dtoa_r+0x100>
    34a4:	00800074 	movhi	r2,1
    34a8:	10bd7904 	addi	r2,r2,-2588
    34ac:	003e8406 	br	2ec0 <_dtoa_r+0x108>
    34b0:	10c00204 	addi	r3,r2,8
    34b4:	003e8706 	br	2ed4 <_dtoa_r+0x11c>
    34b8:	01400434 	movhi	r5,16
    34bc:	297fffc4 	addi	r5,r5,-1
    34c0:	994a703a 	and	r5,r19,r5
    34c4:	9009883a 	mov	r4,r18
    34c8:	843f0044 	addi	r16,r16,-1023
    34cc:	294ffc34 	orhi	r5,r5,16368
    34d0:	dd800217 	ldw	r22,8(sp)
    34d4:	d8001115 	stw	zero,68(sp)
    34d8:	003ea506 	br	2f70 <_dtoa_r+0x1b8>
    34dc:	00800074 	movhi	r2,1
    34e0:	10bd7004 	addi	r2,r2,-2624
    34e4:	003e6406 	br	2e78 <_dtoa_r+0xc0>
    34e8:	e0001115 	stw	zero,68(fp)
    34ec:	000b883a 	mov	r5,zero
    34f0:	e009883a 	mov	r4,fp
    34f4:	000630c0 	call	630c <_Balloc>
    34f8:	01bfffc4 	movi	r6,-1
    34fc:	01c00044 	movi	r7,1
    3500:	d8800715 	stw	r2,28(sp)
    3504:	d9800c15 	stw	r6,48(sp)
    3508:	e0801015 	stw	r2,64(fp)
    350c:	d8000315 	stw	zero,12(sp)
    3510:	d9c00b15 	stw	r7,44(sp)
    3514:	d9800615 	stw	r6,24(sp)
    3518:	d8002215 	stw	zero,136(sp)
    351c:	d8800117 	ldw	r2,4(sp)
    3520:	10008916 	blt	r2,zero,3748 <_dtoa_r+0x990>
    3524:	d9000517 	ldw	r4,20(sp)
    3528:	00c00384 	movi	r3,14
    352c:	19008616 	blt	r3,r4,3748 <_dtoa_r+0x990>
    3530:	200490fa 	slli	r2,r4,3
    3534:	00c00074 	movhi	r3,1
    3538:	d9802217 	ldw	r6,136(sp)
    353c:	18fd9804 	addi	r3,r3,-2464
    3540:	1885883a 	add	r2,r3,r2
    3544:	14000017 	ldw	r16,0(r2)
    3548:	14400117 	ldw	r17,4(r2)
    354c:	30016316 	blt	r6,zero,3adc <_dtoa_r+0xd24>
    3550:	800d883a 	mov	r6,r16
    3554:	880f883a 	mov	r7,r17
    3558:	9009883a 	mov	r4,r18
    355c:	980b883a 	mov	r5,r19
    3560:	000afd80 	call	afd8 <__divdf3>
    3564:	180b883a 	mov	r5,r3
    3568:	1009883a 	mov	r4,r2
    356c:	000cb2c0 	call	cb2c <__fixdfsi>
    3570:	1009883a 	mov	r4,r2
    3574:	102b883a 	mov	r21,r2
    3578:	000cbac0 	call	cbac <__floatsidf>
    357c:	800d883a 	mov	r6,r16
    3580:	880f883a 	mov	r7,r17
    3584:	1009883a 	mov	r4,r2
    3588:	180b883a 	mov	r5,r3
    358c:	000bb180 	call	bb18 <__muldf3>
    3590:	100d883a 	mov	r6,r2
    3594:	180f883a 	mov	r7,r3
    3598:	9009883a 	mov	r4,r18
    359c:	980b883a 	mov	r5,r19
    35a0:	000c2300 	call	c230 <__subdf3>
    35a4:	d9c00717 	ldw	r7,28(sp)
    35a8:	1009883a 	mov	r4,r2
    35ac:	a8800c04 	addi	r2,r21,48
    35b0:	38800005 	stb	r2,0(r7)
    35b4:	3dc00044 	addi	r23,r7,1
    35b8:	d9c00617 	ldw	r7,24(sp)
    35bc:	01800044 	movi	r6,1
    35c0:	180b883a 	mov	r5,r3
    35c4:	2005883a 	mov	r2,r4
    35c8:	39803826 	beq	r7,r6,36ac <_dtoa_r+0x8f4>
    35cc:	000d883a 	mov	r6,zero
    35d0:	01d00934 	movhi	r7,16420
    35d4:	000bb180 	call	bb18 <__muldf3>
    35d8:	000d883a 	mov	r6,zero
    35dc:	000f883a 	mov	r7,zero
    35e0:	1009883a 	mov	r4,r2
    35e4:	180b883a 	mov	r5,r3
    35e8:	1025883a 	mov	r18,r2
    35ec:	1827883a 	mov	r19,r3
    35f0:	000b8c00 	call	b8c0 <__eqdf2>
    35f4:	103f9a26 	beq	r2,zero,3460 <_dtoa_r+0x6a8>
    35f8:	d9c00617 	ldw	r7,24(sp)
    35fc:	d8c00717 	ldw	r3,28(sp)
    3600:	b829883a 	mov	r20,r23
    3604:	38bfffc4 	addi	r2,r7,-1
    3608:	18ad883a 	add	r22,r3,r2
    360c:	00000a06 	br	3638 <_dtoa_r+0x880>
    3610:	000bb180 	call	bb18 <__muldf3>
    3614:	000d883a 	mov	r6,zero
    3618:	000f883a 	mov	r7,zero
    361c:	1009883a 	mov	r4,r2
    3620:	180b883a 	mov	r5,r3
    3624:	1025883a 	mov	r18,r2
    3628:	1827883a 	mov	r19,r3
    362c:	b829883a 	mov	r20,r23
    3630:	000b8c00 	call	b8c0 <__eqdf2>
    3634:	103f8a26 	beq	r2,zero,3460 <_dtoa_r+0x6a8>
    3638:	800d883a 	mov	r6,r16
    363c:	880f883a 	mov	r7,r17
    3640:	9009883a 	mov	r4,r18
    3644:	980b883a 	mov	r5,r19
    3648:	000afd80 	call	afd8 <__divdf3>
    364c:	180b883a 	mov	r5,r3
    3650:	1009883a 	mov	r4,r2
    3654:	000cb2c0 	call	cb2c <__fixdfsi>
    3658:	1009883a 	mov	r4,r2
    365c:	102b883a 	mov	r21,r2
    3660:	000cbac0 	call	cbac <__floatsidf>
    3664:	800d883a 	mov	r6,r16
    3668:	880f883a 	mov	r7,r17
    366c:	1009883a 	mov	r4,r2
    3670:	180b883a 	mov	r5,r3
    3674:	000bb180 	call	bb18 <__muldf3>
    3678:	100d883a 	mov	r6,r2
    367c:	180f883a 	mov	r7,r3
    3680:	9009883a 	mov	r4,r18
    3684:	980b883a 	mov	r5,r19
    3688:	000c2300 	call	c230 <__subdf3>
    368c:	aa000c04 	addi	r8,r21,48
    3690:	a2000005 	stb	r8,0(r20)
    3694:	000d883a 	mov	r6,zero
    3698:	01d00934 	movhi	r7,16420
    369c:	1009883a 	mov	r4,r2
    36a0:	180b883a 	mov	r5,r3
    36a4:	a5c00044 	addi	r23,r20,1
    36a8:	b53fd91e 	bne	r22,r20,3610 <_dtoa_r+0x858>
    36ac:	100d883a 	mov	r6,r2
    36b0:	180f883a 	mov	r7,r3
    36b4:	1009883a 	mov	r4,r2
    36b8:	180b883a 	mov	r5,r3
    36bc:	000a72c0 	call	a72c <__adddf3>
    36c0:	100d883a 	mov	r6,r2
    36c4:	180f883a 	mov	r7,r3
    36c8:	8009883a 	mov	r4,r16
    36cc:	880b883a 	mov	r5,r17
    36d0:	1027883a 	mov	r19,r2
    36d4:	1825883a 	mov	r18,r3
    36d8:	000ba240 	call	ba24 <__ledf2>
    36dc:	10000816 	blt	r2,zero,3700 <_dtoa_r+0x948>
    36e0:	980d883a 	mov	r6,r19
    36e4:	900f883a 	mov	r7,r18
    36e8:	8009883a 	mov	r4,r16
    36ec:	880b883a 	mov	r5,r17
    36f0:	000b8c00 	call	b8c0 <__eqdf2>
    36f4:	103f5a1e 	bne	r2,zero,3460 <_dtoa_r+0x6a8>
    36f8:	ad40004c 	andi	r21,r21,1
    36fc:	a83f5826 	beq	r21,zero,3460 <_dtoa_r+0x6a8>
    3700:	bd3fffc3 	ldbu	r20,-1(r23)
    3704:	b8bfffc4 	addi	r2,r23,-1
    3708:	1007883a 	mov	r3,r2
    370c:	01400e44 	movi	r5,57
    3710:	d9800717 	ldw	r6,28(sp)
    3714:	00000506 	br	372c <_dtoa_r+0x974>
    3718:	18ffffc4 	addi	r3,r3,-1
    371c:	11824726 	beq	r2,r6,403c <_dtoa_r+0x1284>
    3720:	1d000003 	ldbu	r20,0(r3)
    3724:	102f883a 	mov	r23,r2
    3728:	10bfffc4 	addi	r2,r2,-1
    372c:	a1003fcc 	andi	r4,r20,255
    3730:	2100201c 	xori	r4,r4,128
    3734:	213fe004 	addi	r4,r4,-128
    3738:	217ff726 	beq	r4,r5,3718 <_dtoa_r+0x960>
    373c:	a2000044 	addi	r8,r20,1
    3740:	12000005 	stb	r8,0(r2)
    3744:	003f4606 	br	3460 <_dtoa_r+0x6a8>
    3748:	d9000b17 	ldw	r4,44(sp)
    374c:	2000c826 	beq	r4,zero,3a70 <_dtoa_r+0xcb8>
    3750:	d9800317 	ldw	r6,12(sp)
    3754:	00c00044 	movi	r3,1
    3758:	1980f90e 	bge	r3,r6,3b40 <_dtoa_r+0xd88>
    375c:	d8800617 	ldw	r2,24(sp)
    3760:	d8c00a17 	ldw	r3,40(sp)
    3764:	157fffc4 	addi	r21,r2,-1
    3768:	1d41f316 	blt	r3,r21,3f38 <_dtoa_r+0x1180>
    376c:	1d6bc83a 	sub	r21,r3,r21
    3770:	d9c00617 	ldw	r7,24(sp)
    3774:	3802aa16 	blt	r7,zero,4220 <_dtoa_r+0x1468>
    3778:	dd000817 	ldw	r20,32(sp)
    377c:	d8800617 	ldw	r2,24(sp)
    3780:	d8c00817 	ldw	r3,32(sp)
    3784:	01400044 	movi	r5,1
    3788:	e009883a 	mov	r4,fp
    378c:	1887883a 	add	r3,r3,r2
    3790:	d8c00815 	stw	r3,32(sp)
    3794:	b0ad883a 	add	r22,r22,r2
    3798:	00067180 	call	6718 <__i2b>
    379c:	1023883a 	mov	r17,r2
    37a0:	a0000826 	beq	r20,zero,37c4 <_dtoa_r+0xa0c>
    37a4:	0580070e 	bge	zero,r22,37c4 <_dtoa_r+0xa0c>
    37a8:	a005883a 	mov	r2,r20
    37ac:	b500b916 	blt	r22,r20,3a94 <_dtoa_r+0xcdc>
    37b0:	d9000817 	ldw	r4,32(sp)
    37b4:	a0a9c83a 	sub	r20,r20,r2
    37b8:	b0adc83a 	sub	r22,r22,r2
    37bc:	2089c83a 	sub	r4,r4,r2
    37c0:	d9000815 	stw	r4,32(sp)
    37c4:	d9800a17 	ldw	r6,40(sp)
    37c8:	0181810e 	bge	zero,r6,3dd0 <_dtoa_r+0x1018>
    37cc:	d9c00b17 	ldw	r7,44(sp)
    37d0:	3800b326 	beq	r7,zero,3aa0 <_dtoa_r+0xce8>
    37d4:	a800b226 	beq	r21,zero,3aa0 <_dtoa_r+0xce8>
    37d8:	880b883a 	mov	r5,r17
    37dc:	a80d883a 	mov	r6,r21
    37e0:	e009883a 	mov	r4,fp
    37e4:	000694c0 	call	694c <__pow5mult>
    37e8:	d9800917 	ldw	r6,36(sp)
    37ec:	100b883a 	mov	r5,r2
    37f0:	e009883a 	mov	r4,fp
    37f4:	1023883a 	mov	r17,r2
    37f8:	00067540 	call	6754 <__multiply>
    37fc:	1021883a 	mov	r16,r2
    3800:	d8800a17 	ldw	r2,40(sp)
    3804:	d9400917 	ldw	r5,36(sp)
    3808:	e009883a 	mov	r4,fp
    380c:	1545c83a 	sub	r2,r2,r21
    3810:	d8800a15 	stw	r2,40(sp)
    3814:	00063b40 	call	63b4 <_Bfree>
    3818:	d8c00a17 	ldw	r3,40(sp)
    381c:	18009f1e 	bne	r3,zero,3a9c <_dtoa_r+0xce4>
    3820:	05c00044 	movi	r23,1
    3824:	e009883a 	mov	r4,fp
    3828:	b80b883a 	mov	r5,r23
    382c:	00067180 	call	6718 <__i2b>
    3830:	d9000d17 	ldw	r4,52(sp)
    3834:	102b883a 	mov	r21,r2
    3838:	2000ce26 	beq	r4,zero,3b74 <_dtoa_r+0xdbc>
    383c:	200d883a 	mov	r6,r4
    3840:	100b883a 	mov	r5,r2
    3844:	e009883a 	mov	r4,fp
    3848:	000694c0 	call	694c <__pow5mult>
    384c:	d9800317 	ldw	r6,12(sp)
    3850:	102b883a 	mov	r21,r2
    3854:	b981810e 	bge	r23,r6,3e5c <_dtoa_r+0x10a4>
    3858:	0027883a 	mov	r19,zero
    385c:	a8800417 	ldw	r2,16(r21)
    3860:	05c00804 	movi	r23,32
    3864:	10800104 	addi	r2,r2,4
    3868:	1085883a 	add	r2,r2,r2
    386c:	1085883a 	add	r2,r2,r2
    3870:	a885883a 	add	r2,r21,r2
    3874:	11000017 	ldw	r4,0(r2)
    3878:	00066000 	call	6600 <__hi0bits>
    387c:	b885c83a 	sub	r2,r23,r2
    3880:	1585883a 	add	r2,r2,r22
    3884:	108007cc 	andi	r2,r2,31
    3888:	1000b326 	beq	r2,zero,3b58 <_dtoa_r+0xda0>
    388c:	00c00804 	movi	r3,32
    3890:	1887c83a 	sub	r3,r3,r2
    3894:	01000104 	movi	r4,4
    3898:	20c2cd0e 	bge	r4,r3,43d0 <_dtoa_r+0x1618>
    389c:	00c00704 	movi	r3,28
    38a0:	1885c83a 	sub	r2,r3,r2
    38a4:	d8c00817 	ldw	r3,32(sp)
    38a8:	a0a9883a 	add	r20,r20,r2
    38ac:	b0ad883a 	add	r22,r22,r2
    38b0:	1887883a 	add	r3,r3,r2
    38b4:	d8c00815 	stw	r3,32(sp)
    38b8:	d9800817 	ldw	r6,32(sp)
    38bc:	0180040e 	bge	zero,r6,38d0 <_dtoa_r+0xb18>
    38c0:	800b883a 	mov	r5,r16
    38c4:	e009883a 	mov	r4,fp
    38c8:	0006a8c0 	call	6a8c <__lshift>
    38cc:	1021883a 	mov	r16,r2
    38d0:	0580050e 	bge	zero,r22,38e8 <_dtoa_r+0xb30>
    38d4:	a80b883a 	mov	r5,r21
    38d8:	b00d883a 	mov	r6,r22
    38dc:	e009883a 	mov	r4,fp
    38e0:	0006a8c0 	call	6a8c <__lshift>
    38e4:	102b883a 	mov	r21,r2
    38e8:	d9c00e17 	ldw	r7,56(sp)
    38ec:	3801211e 	bne	r7,zero,3d74 <_dtoa_r+0xfbc>
    38f0:	d9800617 	ldw	r6,24(sp)
    38f4:	0181380e 	bge	zero,r6,3dd8 <_dtoa_r+0x1020>
    38f8:	d8c00b17 	ldw	r3,44(sp)
    38fc:	1800ab1e 	bne	r3,zero,3bac <_dtoa_r+0xdf4>
    3900:	dc800717 	ldw	r18,28(sp)
    3904:	dcc00617 	ldw	r19,24(sp)
    3908:	9029883a 	mov	r20,r18
    390c:	00000206 	br	3918 <_dtoa_r+0xb60>
    3910:	00063dc0 	call	63dc <__multadd>
    3914:	1021883a 	mov	r16,r2
    3918:	a80b883a 	mov	r5,r21
    391c:	8009883a 	mov	r4,r16
    3920:	0002bb80 	call	2bb8 <quorem>
    3924:	10800c04 	addi	r2,r2,48
    3928:	90800005 	stb	r2,0(r18)
    392c:	94800044 	addi	r18,r18,1
    3930:	9507c83a 	sub	r3,r18,r20
    3934:	000f883a 	mov	r7,zero
    3938:	01800284 	movi	r6,10
    393c:	800b883a 	mov	r5,r16
    3940:	e009883a 	mov	r4,fp
    3944:	1cfff216 	blt	r3,r19,3910 <_dtoa_r+0xb58>
    3948:	1011883a 	mov	r8,r2
    394c:	d8800617 	ldw	r2,24(sp)
    3950:	0082370e 	bge	zero,r2,4230 <_dtoa_r+0x1478>
    3954:	d9000717 	ldw	r4,28(sp)
    3958:	0025883a 	mov	r18,zero
    395c:	20af883a 	add	r23,r4,r2
    3960:	01800044 	movi	r6,1
    3964:	800b883a 	mov	r5,r16
    3968:	e009883a 	mov	r4,fp
    396c:	da001715 	stw	r8,92(sp)
    3970:	0006a8c0 	call	6a8c <__lshift>
    3974:	a80b883a 	mov	r5,r21
    3978:	1009883a 	mov	r4,r2
    397c:	d8800915 	stw	r2,36(sp)
    3980:	0006bd40 	call	6bd4 <__mcmp>
    3984:	da001717 	ldw	r8,92(sp)
    3988:	0081800e 	bge	zero,r2,3f8c <_dtoa_r+0x11d4>
    398c:	b93fffc3 	ldbu	r4,-1(r23)
    3990:	b8bfffc4 	addi	r2,r23,-1
    3994:	1007883a 	mov	r3,r2
    3998:	01800e44 	movi	r6,57
    399c:	d9c00717 	ldw	r7,28(sp)
    39a0:	00000506 	br	39b8 <_dtoa_r+0xc00>
    39a4:	18ffffc4 	addi	r3,r3,-1
    39a8:	11c12326 	beq	r2,r7,3e38 <_dtoa_r+0x1080>
    39ac:	19000003 	ldbu	r4,0(r3)
    39b0:	102f883a 	mov	r23,r2
    39b4:	10bfffc4 	addi	r2,r2,-1
    39b8:	21403fcc 	andi	r5,r4,255
    39bc:	2940201c 	xori	r5,r5,128
    39c0:	297fe004 	addi	r5,r5,-128
    39c4:	29bff726 	beq	r5,r6,39a4 <_dtoa_r+0xbec>
    39c8:	21000044 	addi	r4,r4,1
    39cc:	11000005 	stb	r4,0(r2)
    39d0:	a80b883a 	mov	r5,r21
    39d4:	e009883a 	mov	r4,fp
    39d8:	00063b40 	call	63b4 <_Bfree>
    39dc:	883ea026 	beq	r17,zero,3460 <_dtoa_r+0x6a8>
    39e0:	90000426 	beq	r18,zero,39f4 <_dtoa_r+0xc3c>
    39e4:	94400326 	beq	r18,r17,39f4 <_dtoa_r+0xc3c>
    39e8:	900b883a 	mov	r5,r18
    39ec:	e009883a 	mov	r4,fp
    39f0:	00063b40 	call	63b4 <_Bfree>
    39f4:	880b883a 	mov	r5,r17
    39f8:	e009883a 	mov	r4,fp
    39fc:	00063b40 	call	63b4 <_Bfree>
    3a00:	003e9706 	br	3460 <_dtoa_r+0x6a8>
    3a04:	01800044 	movi	r6,1
    3a08:	d9800e15 	stw	r6,56(sp)
    3a0c:	003d9606 	br	3068 <_dtoa_r+0x2b0>
    3a10:	d8800817 	ldw	r2,32(sp)
    3a14:	d8c00517 	ldw	r3,20(sp)
    3a18:	d8000d15 	stw	zero,52(sp)
    3a1c:	10c5c83a 	sub	r2,r2,r3
    3a20:	00c9c83a 	sub	r4,zero,r3
    3a24:	d8800815 	stw	r2,32(sp)
    3a28:	d9000a15 	stw	r4,40(sp)
    3a2c:	003d9706 	br	308c <_dtoa_r+0x2d4>
    3a30:	05adc83a 	sub	r22,zero,r22
    3a34:	dd800815 	stw	r22,32(sp)
    3a38:	002d883a 	mov	r22,zero
    3a3c:	003d8e06 	br	3078 <_dtoa_r+0x2c0>
    3a40:	d9000517 	ldw	r4,20(sp)
    3a44:	000cbac0 	call	cbac <__floatsidf>
    3a48:	100d883a 	mov	r6,r2
    3a4c:	180f883a 	mov	r7,r3
    3a50:	a009883a 	mov	r4,r20
    3a54:	880b883a 	mov	r5,r17
    3a58:	000b8c00 	call	b8c0 <__eqdf2>
    3a5c:	103d7126 	beq	r2,zero,3024 <_dtoa_r+0x26c>
    3a60:	d9c00517 	ldw	r7,20(sp)
    3a64:	39ffffc4 	addi	r7,r7,-1
    3a68:	d9c00515 	stw	r7,20(sp)
    3a6c:	003d6d06 	br	3024 <_dtoa_r+0x26c>
    3a70:	dd400a17 	ldw	r21,40(sp)
    3a74:	dd000817 	ldw	r20,32(sp)
    3a78:	0023883a 	mov	r17,zero
    3a7c:	003f4806 	br	37a0 <_dtoa_r+0x9e8>
    3a80:	10e3c83a 	sub	r17,r2,r3
    3a84:	9448983a 	sll	r4,r18,r17
    3a88:	003d3206 	br	2f54 <_dtoa_r+0x19c>
    3a8c:	d8000e15 	stw	zero,56(sp)
    3a90:	003d7506 	br	3068 <_dtoa_r+0x2b0>
    3a94:	b005883a 	mov	r2,r22
    3a98:	003f4506 	br	37b0 <_dtoa_r+0x9f8>
    3a9c:	dc000915 	stw	r16,36(sp)
    3aa0:	d9800a17 	ldw	r6,40(sp)
    3aa4:	d9400917 	ldw	r5,36(sp)
    3aa8:	e009883a 	mov	r4,fp
    3aac:	000694c0 	call	694c <__pow5mult>
    3ab0:	1021883a 	mov	r16,r2
    3ab4:	003f5a06 	br	3820 <_dtoa_r+0xa68>
    3ab8:	01c00044 	movi	r7,1
    3abc:	d9c00b15 	stw	r7,44(sp)
    3ac0:	d8802217 	ldw	r2,136(sp)
    3ac4:	0081280e 	bge	zero,r2,3f68 <_dtoa_r+0x11b0>
    3ac8:	100d883a 	mov	r6,r2
    3acc:	1021883a 	mov	r16,r2
    3ad0:	d8800c15 	stw	r2,48(sp)
    3ad4:	d8800615 	stw	r2,24(sp)
    3ad8:	003d8806 	br	30fc <_dtoa_r+0x344>
    3adc:	d8800617 	ldw	r2,24(sp)
    3ae0:	00be9b16 	blt	zero,r2,3550 <_dtoa_r+0x798>
    3ae4:	10010f1e 	bne	r2,zero,3f24 <_dtoa_r+0x116c>
    3ae8:	880b883a 	mov	r5,r17
    3aec:	000d883a 	mov	r6,zero
    3af0:	01d00534 	movhi	r7,16404
    3af4:	8009883a 	mov	r4,r16
    3af8:	000bb180 	call	bb18 <__muldf3>
    3afc:	900d883a 	mov	r6,r18
    3b00:	980f883a 	mov	r7,r19
    3b04:	1009883a 	mov	r4,r2
    3b08:	180b883a 	mov	r5,r3
    3b0c:	000b9480 	call	b948 <__gedf2>
    3b10:	002b883a 	mov	r21,zero
    3b14:	0023883a 	mov	r17,zero
    3b18:	1000bf16 	blt	r2,zero,3e18 <_dtoa_r+0x1060>
    3b1c:	d9802217 	ldw	r6,136(sp)
    3b20:	ddc00717 	ldw	r23,28(sp)
    3b24:	018c303a 	nor	r6,zero,r6
    3b28:	d9800515 	stw	r6,20(sp)
    3b2c:	a80b883a 	mov	r5,r21
    3b30:	e009883a 	mov	r4,fp
    3b34:	00063b40 	call	63b4 <_Bfree>
    3b38:	883e4926 	beq	r17,zero,3460 <_dtoa_r+0x6a8>
    3b3c:	003fad06 	br	39f4 <_dtoa_r+0xc3c>
    3b40:	d9c01117 	ldw	r7,68(sp)
    3b44:	3801bc26 	beq	r7,zero,4238 <_dtoa_r+0x1480>
    3b48:	10810cc4 	addi	r2,r2,1075
    3b4c:	dd400a17 	ldw	r21,40(sp)
    3b50:	dd000817 	ldw	r20,32(sp)
    3b54:	003f0a06 	br	3780 <_dtoa_r+0x9c8>
    3b58:	00800704 	movi	r2,28
    3b5c:	d9000817 	ldw	r4,32(sp)
    3b60:	a0a9883a 	add	r20,r20,r2
    3b64:	b0ad883a 	add	r22,r22,r2
    3b68:	2089883a 	add	r4,r4,r2
    3b6c:	d9000815 	stw	r4,32(sp)
    3b70:	003f5106 	br	38b8 <_dtoa_r+0xb00>
    3b74:	d8c00317 	ldw	r3,12(sp)
    3b78:	b8c1fc0e 	bge	r23,r3,436c <_dtoa_r+0x15b4>
    3b7c:	0027883a 	mov	r19,zero
    3b80:	b805883a 	mov	r2,r23
    3b84:	003f3e06 	br	3880 <_dtoa_r+0xac8>
    3b88:	880b883a 	mov	r5,r17
    3b8c:	e009883a 	mov	r4,fp
    3b90:	000f883a 	mov	r7,zero
    3b94:	01800284 	movi	r6,10
    3b98:	00063dc0 	call	63dc <__multadd>
    3b9c:	d9000c17 	ldw	r4,48(sp)
    3ba0:	1023883a 	mov	r17,r2
    3ba4:	0102040e 	bge	zero,r4,43b8 <_dtoa_r+0x1600>
    3ba8:	d9000615 	stw	r4,24(sp)
    3bac:	0500050e 	bge	zero,r20,3bc4 <_dtoa_r+0xe0c>
    3bb0:	880b883a 	mov	r5,r17
    3bb4:	a00d883a 	mov	r6,r20
    3bb8:	e009883a 	mov	r4,fp
    3bbc:	0006a8c0 	call	6a8c <__lshift>
    3bc0:	1023883a 	mov	r17,r2
    3bc4:	9801241e 	bne	r19,zero,4058 <_dtoa_r+0x12a0>
    3bc8:	8829883a 	mov	r20,r17
    3bcc:	d9000617 	ldw	r4,24(sp)
    3bd0:	dcc00717 	ldw	r19,28(sp)
    3bd4:	9480004c 	andi	r18,r18,1
    3bd8:	20bfffc4 	addi	r2,r4,-1
    3bdc:	9885883a 	add	r2,r19,r2
    3be0:	d8800415 	stw	r2,16(sp)
    3be4:	dc800615 	stw	r18,24(sp)
    3be8:	a80b883a 	mov	r5,r21
    3bec:	8009883a 	mov	r4,r16
    3bf0:	0002bb80 	call	2bb8 <quorem>
    3bf4:	880b883a 	mov	r5,r17
    3bf8:	8009883a 	mov	r4,r16
    3bfc:	102f883a 	mov	r23,r2
    3c00:	0006bd40 	call	6bd4 <__mcmp>
    3c04:	a80b883a 	mov	r5,r21
    3c08:	a00d883a 	mov	r6,r20
    3c0c:	e009883a 	mov	r4,fp
    3c10:	102d883a 	mov	r22,r2
    3c14:	0006c340 	call	6c34 <__mdiff>
    3c18:	1007883a 	mov	r3,r2
    3c1c:	10800317 	ldw	r2,12(r2)
    3c20:	bc800c04 	addi	r18,r23,48
    3c24:	180b883a 	mov	r5,r3
    3c28:	10004e1e 	bne	r2,zero,3d64 <_dtoa_r+0xfac>
    3c2c:	8009883a 	mov	r4,r16
    3c30:	d8c01615 	stw	r3,88(sp)
    3c34:	0006bd40 	call	6bd4 <__mcmp>
    3c38:	d8c01617 	ldw	r3,88(sp)
    3c3c:	e009883a 	mov	r4,fp
    3c40:	d8801615 	stw	r2,88(sp)
    3c44:	180b883a 	mov	r5,r3
    3c48:	00063b40 	call	63b4 <_Bfree>
    3c4c:	d8801617 	ldw	r2,88(sp)
    3c50:	1000041e 	bne	r2,zero,3c64 <_dtoa_r+0xeac>
    3c54:	d9800317 	ldw	r6,12(sp)
    3c58:	3000021e 	bne	r6,zero,3c64 <_dtoa_r+0xeac>
    3c5c:	d8c00617 	ldw	r3,24(sp)
    3c60:	18003726 	beq	r3,zero,3d40 <_dtoa_r+0xf88>
    3c64:	b0002016 	blt	r22,zero,3ce8 <_dtoa_r+0xf30>
    3c68:	b000041e 	bne	r22,zero,3c7c <_dtoa_r+0xec4>
    3c6c:	d9000317 	ldw	r4,12(sp)
    3c70:	2000021e 	bne	r4,zero,3c7c <_dtoa_r+0xec4>
    3c74:	d8c00617 	ldw	r3,24(sp)
    3c78:	18001b26 	beq	r3,zero,3ce8 <_dtoa_r+0xf30>
    3c7c:	00810716 	blt	zero,r2,409c <_dtoa_r+0x12e4>
    3c80:	d8c00417 	ldw	r3,16(sp)
    3c84:	9d800044 	addi	r22,r19,1
    3c88:	9c800005 	stb	r18,0(r19)
    3c8c:	b02f883a 	mov	r23,r22
    3c90:	98c10626 	beq	r19,r3,40ac <_dtoa_r+0x12f4>
    3c94:	800b883a 	mov	r5,r16
    3c98:	000f883a 	mov	r7,zero
    3c9c:	01800284 	movi	r6,10
    3ca0:	e009883a 	mov	r4,fp
    3ca4:	00063dc0 	call	63dc <__multadd>
    3ca8:	1021883a 	mov	r16,r2
    3cac:	000f883a 	mov	r7,zero
    3cb0:	01800284 	movi	r6,10
    3cb4:	880b883a 	mov	r5,r17
    3cb8:	e009883a 	mov	r4,fp
    3cbc:	8d002526 	beq	r17,r20,3d54 <_dtoa_r+0xf9c>
    3cc0:	00063dc0 	call	63dc <__multadd>
    3cc4:	a00b883a 	mov	r5,r20
    3cc8:	000f883a 	mov	r7,zero
    3ccc:	01800284 	movi	r6,10
    3cd0:	e009883a 	mov	r4,fp
    3cd4:	1023883a 	mov	r17,r2
    3cd8:	00063dc0 	call	63dc <__multadd>
    3cdc:	1029883a 	mov	r20,r2
    3ce0:	b027883a 	mov	r19,r22
    3ce4:	003fc006 	br	3be8 <_dtoa_r+0xe30>
    3ce8:	9011883a 	mov	r8,r18
    3cec:	00800e0e 	bge	zero,r2,3d28 <_dtoa_r+0xf70>
    3cf0:	800b883a 	mov	r5,r16
    3cf4:	01800044 	movi	r6,1
    3cf8:	e009883a 	mov	r4,fp
    3cfc:	da001715 	stw	r8,92(sp)
    3d00:	0006a8c0 	call	6a8c <__lshift>
    3d04:	a80b883a 	mov	r5,r21
    3d08:	1009883a 	mov	r4,r2
    3d0c:	1021883a 	mov	r16,r2
    3d10:	0006bd40 	call	6bd4 <__mcmp>
    3d14:	da001717 	ldw	r8,92(sp)
    3d18:	0081960e 	bge	zero,r2,4374 <_dtoa_r+0x15bc>
    3d1c:	00800e44 	movi	r2,57
    3d20:	40817026 	beq	r8,r2,42e4 <_dtoa_r+0x152c>
    3d24:	ba000c44 	addi	r8,r23,49
    3d28:	8825883a 	mov	r18,r17
    3d2c:	9dc00044 	addi	r23,r19,1
    3d30:	9a000005 	stb	r8,0(r19)
    3d34:	a023883a 	mov	r17,r20
    3d38:	dc000915 	stw	r16,36(sp)
    3d3c:	003f2406 	br	39d0 <_dtoa_r+0xc18>
    3d40:	00800e44 	movi	r2,57
    3d44:	9011883a 	mov	r8,r18
    3d48:	90816626 	beq	r18,r2,42e4 <_dtoa_r+0x152c>
    3d4c:	05bff516 	blt	zero,r22,3d24 <_dtoa_r+0xf6c>
    3d50:	003ff506 	br	3d28 <_dtoa_r+0xf70>
    3d54:	00063dc0 	call	63dc <__multadd>
    3d58:	1023883a 	mov	r17,r2
    3d5c:	1029883a 	mov	r20,r2
    3d60:	003fdf06 	br	3ce0 <_dtoa_r+0xf28>
    3d64:	e009883a 	mov	r4,fp
    3d68:	00063b40 	call	63b4 <_Bfree>
    3d6c:	00800044 	movi	r2,1
    3d70:	003fbc06 	br	3c64 <_dtoa_r+0xeac>
    3d74:	a80b883a 	mov	r5,r21
    3d78:	8009883a 	mov	r4,r16
    3d7c:	0006bd40 	call	6bd4 <__mcmp>
    3d80:	103edb0e 	bge	r2,zero,38f0 <_dtoa_r+0xb38>
    3d84:	800b883a 	mov	r5,r16
    3d88:	000f883a 	mov	r7,zero
    3d8c:	01800284 	movi	r6,10
    3d90:	e009883a 	mov	r4,fp
    3d94:	00063dc0 	call	63dc <__multadd>
    3d98:	1021883a 	mov	r16,r2
    3d9c:	d8800517 	ldw	r2,20(sp)
    3da0:	d8c00b17 	ldw	r3,44(sp)
    3da4:	10bfffc4 	addi	r2,r2,-1
    3da8:	d8800515 	stw	r2,20(sp)
    3dac:	183f761e 	bne	r3,zero,3b88 <_dtoa_r+0xdd0>
    3db0:	d9000c17 	ldw	r4,48(sp)
    3db4:	0101730e 	bge	zero,r4,4384 <_dtoa_r+0x15cc>
    3db8:	d9000615 	stw	r4,24(sp)
    3dbc:	003ed006 	br	3900 <_dtoa_r+0xb48>
    3dc0:	00800084 	movi	r2,2
    3dc4:	3081861e 	bne	r6,r2,43e0 <_dtoa_r+0x1628>
    3dc8:	d8000b15 	stw	zero,44(sp)
    3dcc:	003f3c06 	br	3ac0 <_dtoa_r+0xd08>
    3dd0:	dc000917 	ldw	r16,36(sp)
    3dd4:	003e9206 	br	3820 <_dtoa_r+0xa68>
    3dd8:	d9c00317 	ldw	r7,12(sp)
    3ddc:	00800084 	movi	r2,2
    3de0:	11fec50e 	bge	r2,r7,38f8 <_dtoa_r+0xb40>
    3de4:	d9000617 	ldw	r4,24(sp)
    3de8:	20013c1e 	bne	r4,zero,42dc <_dtoa_r+0x1524>
    3dec:	a80b883a 	mov	r5,r21
    3df0:	000f883a 	mov	r7,zero
    3df4:	01800144 	movi	r6,5
    3df8:	e009883a 	mov	r4,fp
    3dfc:	00063dc0 	call	63dc <__multadd>
    3e00:	100b883a 	mov	r5,r2
    3e04:	8009883a 	mov	r4,r16
    3e08:	102b883a 	mov	r21,r2
    3e0c:	0006bd40 	call	6bd4 <__mcmp>
    3e10:	dc000915 	stw	r16,36(sp)
    3e14:	00bf410e 	bge	zero,r2,3b1c <_dtoa_r+0xd64>
    3e18:	d9c00717 	ldw	r7,28(sp)
    3e1c:	00800c44 	movi	r2,49
    3e20:	38800005 	stb	r2,0(r7)
    3e24:	d8800517 	ldw	r2,20(sp)
    3e28:	3dc00044 	addi	r23,r7,1
    3e2c:	10800044 	addi	r2,r2,1
    3e30:	d8800515 	stw	r2,20(sp)
    3e34:	003f3d06 	br	3b2c <_dtoa_r+0xd74>
    3e38:	d9800517 	ldw	r6,20(sp)
    3e3c:	d9c00717 	ldw	r7,28(sp)
    3e40:	00800c44 	movi	r2,49
    3e44:	31800044 	addi	r6,r6,1
    3e48:	d9800515 	stw	r6,20(sp)
    3e4c:	38800005 	stb	r2,0(r7)
    3e50:	003edf06 	br	39d0 <_dtoa_r+0xc18>
    3e54:	d8000b15 	stw	zero,44(sp)
    3e58:	003c9f06 	br	30d8 <_dtoa_r+0x320>
    3e5c:	903e7e1e 	bne	r18,zero,3858 <_dtoa_r+0xaa0>
    3e60:	00800434 	movhi	r2,16
    3e64:	10bfffc4 	addi	r2,r2,-1
    3e68:	9884703a 	and	r2,r19,r2
    3e6c:	1000ea1e 	bne	r2,zero,4218 <_dtoa_r+0x1460>
    3e70:	9cdffc2c 	andhi	r19,r19,32752
    3e74:	9800e826 	beq	r19,zero,4218 <_dtoa_r+0x1460>
    3e78:	d9c00817 	ldw	r7,32(sp)
    3e7c:	b5800044 	addi	r22,r22,1
    3e80:	04c00044 	movi	r19,1
    3e84:	39c00044 	addi	r7,r7,1
    3e88:	d9c00815 	stw	r7,32(sp)
    3e8c:	d8800d17 	ldw	r2,52(sp)
    3e90:	103e721e 	bne	r2,zero,385c <_dtoa_r+0xaa4>
    3e94:	00800044 	movi	r2,1
    3e98:	003e7906 	br	3880 <_dtoa_r+0xac8>
    3e9c:	8009883a 	mov	r4,r16
    3ea0:	000cbac0 	call	cbac <__floatsidf>
    3ea4:	d9800f17 	ldw	r6,60(sp)
    3ea8:	d9c01017 	ldw	r7,64(sp)
    3eac:	1009883a 	mov	r4,r2
    3eb0:	180b883a 	mov	r5,r3
    3eb4:	000bb180 	call	bb18 <__muldf3>
    3eb8:	000d883a 	mov	r6,zero
    3ebc:	01d00734 	movhi	r7,16412
    3ec0:	1009883a 	mov	r4,r2
    3ec4:	180b883a 	mov	r5,r3
    3ec8:	000a72c0 	call	a72c <__adddf3>
    3ecc:	047f3034 	movhi	r17,64704
    3ed0:	1021883a 	mov	r16,r2
    3ed4:	1c63883a 	add	r17,r3,r17
    3ed8:	d9000f17 	ldw	r4,60(sp)
    3edc:	d9401017 	ldw	r5,64(sp)
    3ee0:	000d883a 	mov	r6,zero
    3ee4:	01d00534 	movhi	r7,16404
    3ee8:	000c2300 	call	c230 <__subdf3>
    3eec:	800d883a 	mov	r6,r16
    3ef0:	880f883a 	mov	r7,r17
    3ef4:	1009883a 	mov	r4,r2
    3ef8:	180b883a 	mov	r5,r3
    3efc:	102b883a 	mov	r21,r2
    3f00:	1829883a 	mov	r20,r3
    3f04:	000b9480 	call	b948 <__gedf2>
    3f08:	00806c16 	blt	zero,r2,40bc <_dtoa_r+0x1304>
    3f0c:	89e0003c 	xorhi	r7,r17,32768
    3f10:	800d883a 	mov	r6,r16
    3f14:	a809883a 	mov	r4,r21
    3f18:	a00b883a 	mov	r5,r20
    3f1c:	000ba240 	call	ba24 <__ledf2>
    3f20:	103d7e0e 	bge	r2,zero,351c <_dtoa_r+0x764>
    3f24:	002b883a 	mov	r21,zero
    3f28:	0023883a 	mov	r17,zero
    3f2c:	003efb06 	br	3b1c <_dtoa_r+0xd64>
    3f30:	d8800717 	ldw	r2,28(sp)
    3f34:	003bd006 	br	2e78 <_dtoa_r+0xc0>
    3f38:	d9000a17 	ldw	r4,40(sp)
    3f3c:	d9800d17 	ldw	r6,52(sp)
    3f40:	dd400a15 	stw	r21,40(sp)
    3f44:	a905c83a 	sub	r2,r21,r4
    3f48:	308d883a 	add	r6,r6,r2
    3f4c:	d9800d15 	stw	r6,52(sp)
    3f50:	002b883a 	mov	r21,zero
    3f54:	003e0606 	br	3770 <_dtoa_r+0x9b8>
    3f58:	9023883a 	mov	r17,r18
    3f5c:	9829883a 	mov	r20,r19
    3f60:	04000084 	movi	r16,2
    3f64:	003c9206 	br	31b0 <_dtoa_r+0x3f8>
    3f68:	04000044 	movi	r16,1
    3f6c:	dc000c15 	stw	r16,48(sp)
    3f70:	dc000615 	stw	r16,24(sp)
    3f74:	dc002215 	stw	r16,136(sp)
    3f78:	e0001115 	stw	zero,68(fp)
    3f7c:	000b883a 	mov	r5,zero
    3f80:	003c6906 	br	3128 <_dtoa_r+0x370>
    3f84:	3021883a 	mov	r16,r6
    3f88:	003ffb06 	br	3f78 <_dtoa_r+0x11c0>
    3f8c:	1000021e 	bne	r2,zero,3f98 <_dtoa_r+0x11e0>
    3f90:	4200004c 	andi	r8,r8,1
    3f94:	403e7d1e 	bne	r8,zero,398c <_dtoa_r+0xbd4>
    3f98:	01000c04 	movi	r4,48
    3f9c:	00000106 	br	3fa4 <_dtoa_r+0x11ec>
    3fa0:	102f883a 	mov	r23,r2
    3fa4:	b8bfffc4 	addi	r2,r23,-1
    3fa8:	10c00007 	ldb	r3,0(r2)
    3fac:	193ffc26 	beq	r3,r4,3fa0 <_dtoa_r+0x11e8>
    3fb0:	003e8706 	br	39d0 <_dtoa_r+0xc18>
    3fb4:	d8800517 	ldw	r2,20(sp)
    3fb8:	00a3c83a 	sub	r17,zero,r2
    3fbc:	8800a426 	beq	r17,zero,4250 <_dtoa_r+0x1498>
    3fc0:	888003cc 	andi	r2,r17,15
    3fc4:	100490fa 	slli	r2,r2,3
    3fc8:	00c00074 	movhi	r3,1
    3fcc:	18fd9804 	addi	r3,r3,-2464
    3fd0:	1885883a 	add	r2,r3,r2
    3fd4:	11800017 	ldw	r6,0(r2)
    3fd8:	11c00117 	ldw	r7,4(r2)
    3fdc:	9009883a 	mov	r4,r18
    3fe0:	980b883a 	mov	r5,r19
    3fe4:	8823d13a 	srai	r17,r17,4
    3fe8:	000bb180 	call	bb18 <__muldf3>
    3fec:	d8800f15 	stw	r2,60(sp)
    3ff0:	d8c01015 	stw	r3,64(sp)
    3ff4:	8800e826 	beq	r17,zero,4398 <_dtoa_r+0x15e0>
    3ff8:	05000074 	movhi	r20,1
    3ffc:	a53d8e04 	addi	r20,r20,-2504
    4000:	04000084 	movi	r16,2
    4004:	8980004c 	andi	r6,r17,1
    4008:	1009883a 	mov	r4,r2
    400c:	8823d07a 	srai	r17,r17,1
    4010:	180b883a 	mov	r5,r3
    4014:	30000426 	beq	r6,zero,4028 <_dtoa_r+0x1270>
    4018:	a1800017 	ldw	r6,0(r20)
    401c:	a1c00117 	ldw	r7,4(r20)
    4020:	84000044 	addi	r16,r16,1
    4024:	000bb180 	call	bb18 <__muldf3>
    4028:	a5000204 	addi	r20,r20,8
    402c:	883ff51e 	bne	r17,zero,4004 <_dtoa_r+0x124c>
    4030:	d8800f15 	stw	r2,60(sp)
    4034:	d8c01015 	stw	r3,64(sp)
    4038:	003c7606 	br	3214 <_dtoa_r+0x45c>
    403c:	00c00c04 	movi	r3,48
    4040:	10c00005 	stb	r3,0(r2)
    4044:	d8c00517 	ldw	r3,20(sp)
    4048:	bd3fffc3 	ldbu	r20,-1(r23)
    404c:	18c00044 	addi	r3,r3,1
    4050:	d8c00515 	stw	r3,20(sp)
    4054:	003db906 	br	373c <_dtoa_r+0x984>
    4058:	89400117 	ldw	r5,4(r17)
    405c:	e009883a 	mov	r4,fp
    4060:	000630c0 	call	630c <_Balloc>
    4064:	89800417 	ldw	r6,16(r17)
    4068:	89400304 	addi	r5,r17,12
    406c:	11000304 	addi	r4,r2,12
    4070:	31800084 	addi	r6,r6,2
    4074:	318d883a 	add	r6,r6,r6
    4078:	318d883a 	add	r6,r6,r6
    407c:	1027883a 	mov	r19,r2
    4080:	00004740 	call	474 <memcpy>
    4084:	01800044 	movi	r6,1
    4088:	980b883a 	mov	r5,r19
    408c:	e009883a 	mov	r4,fp
    4090:	0006a8c0 	call	6a8c <__lshift>
    4094:	1029883a 	mov	r20,r2
    4098:	003ecc06 	br	3bcc <_dtoa_r+0xe14>
    409c:	00800e44 	movi	r2,57
    40a0:	90809026 	beq	r18,r2,42e4 <_dtoa_r+0x152c>
    40a4:	92000044 	addi	r8,r18,1
    40a8:	003f1f06 	br	3d28 <_dtoa_r+0xf70>
    40ac:	9011883a 	mov	r8,r18
    40b0:	8825883a 	mov	r18,r17
    40b4:	a023883a 	mov	r17,r20
    40b8:	003e2906 	br	3960 <_dtoa_r+0xba8>
    40bc:	002b883a 	mov	r21,zero
    40c0:	0023883a 	mov	r17,zero
    40c4:	003f5406 	br	3e18 <_dtoa_r+0x1060>
    40c8:	61bfffc4 	addi	r6,r12,-1
    40cc:	300490fa 	slli	r2,r6,3
    40d0:	00c00074 	movhi	r3,1
    40d4:	18fd9804 	addi	r3,r3,-2464
    40d8:	1885883a 	add	r2,r3,r2
    40dc:	11000017 	ldw	r4,0(r2)
    40e0:	11400117 	ldw	r5,4(r2)
    40e4:	d8800717 	ldw	r2,28(sp)
    40e8:	880f883a 	mov	r7,r17
    40ec:	d9801215 	stw	r6,72(sp)
    40f0:	800d883a 	mov	r6,r16
    40f4:	db001615 	stw	r12,88(sp)
    40f8:	15c00044 	addi	r23,r2,1
    40fc:	000bb180 	call	bb18 <__muldf3>
    4100:	d9401017 	ldw	r5,64(sp)
    4104:	d9000f17 	ldw	r4,60(sp)
    4108:	d8c01515 	stw	r3,84(sp)
    410c:	d8801415 	stw	r2,80(sp)
    4110:	000cb2c0 	call	cb2c <__fixdfsi>
    4114:	1009883a 	mov	r4,r2
    4118:	1021883a 	mov	r16,r2
    411c:	000cbac0 	call	cbac <__floatsidf>
    4120:	d9000f17 	ldw	r4,60(sp)
    4124:	d9401017 	ldw	r5,64(sp)
    4128:	100d883a 	mov	r6,r2
    412c:	180f883a 	mov	r7,r3
    4130:	000c2300 	call	c230 <__subdf3>
    4134:	1829883a 	mov	r20,r3
    4138:	d8c00717 	ldw	r3,28(sp)
    413c:	84000c04 	addi	r16,r16,48
    4140:	1023883a 	mov	r17,r2
    4144:	1c000005 	stb	r16,0(r3)
    4148:	db001617 	ldw	r12,88(sp)
    414c:	00800044 	movi	r2,1
    4150:	60802226 	beq	r12,r2,41dc <_dtoa_r+0x1424>
    4154:	d9c00717 	ldw	r7,28(sp)
    4158:	8805883a 	mov	r2,r17
    415c:	b82b883a 	mov	r21,r23
    4160:	3b19883a 	add	r12,r7,r12
    4164:	6023883a 	mov	r17,r12
    4168:	a007883a 	mov	r3,r20
    416c:	dc800f15 	stw	r18,60(sp)
    4170:	000d883a 	mov	r6,zero
    4174:	01d00934 	movhi	r7,16420
    4178:	1009883a 	mov	r4,r2
    417c:	180b883a 	mov	r5,r3
    4180:	000bb180 	call	bb18 <__muldf3>
    4184:	180b883a 	mov	r5,r3
    4188:	1009883a 	mov	r4,r2
    418c:	1829883a 	mov	r20,r3
    4190:	1025883a 	mov	r18,r2
    4194:	000cb2c0 	call	cb2c <__fixdfsi>
    4198:	1009883a 	mov	r4,r2
    419c:	1021883a 	mov	r16,r2
    41a0:	000cbac0 	call	cbac <__floatsidf>
    41a4:	100d883a 	mov	r6,r2
    41a8:	180f883a 	mov	r7,r3
    41ac:	9009883a 	mov	r4,r18
    41b0:	a00b883a 	mov	r5,r20
    41b4:	84000c04 	addi	r16,r16,48
    41b8:	000c2300 	call	c230 <__subdf3>
    41bc:	ad400044 	addi	r21,r21,1
    41c0:	ac3fffc5 	stb	r16,-1(r21)
    41c4:	ac7fea1e 	bne	r21,r17,4170 <_dtoa_r+0x13b8>
    41c8:	1023883a 	mov	r17,r2
    41cc:	d8801217 	ldw	r2,72(sp)
    41d0:	dc800f17 	ldw	r18,60(sp)
    41d4:	1829883a 	mov	r20,r3
    41d8:	b8af883a 	add	r23,r23,r2
    41dc:	d9001417 	ldw	r4,80(sp)
    41e0:	d9401517 	ldw	r5,84(sp)
    41e4:	000d883a 	mov	r6,zero
    41e8:	01cff834 	movhi	r7,16352
    41ec:	000a72c0 	call	a72c <__adddf3>
    41f0:	880d883a 	mov	r6,r17
    41f4:	a00f883a 	mov	r7,r20
    41f8:	1009883a 	mov	r4,r2
    41fc:	180b883a 	mov	r5,r3
    4200:	000ba240 	call	ba24 <__ledf2>
    4204:	10003e0e 	bge	r2,zero,4300 <_dtoa_r+0x1548>
    4208:	d9001317 	ldw	r4,76(sp)
    420c:	bd3fffc3 	ldbu	r20,-1(r23)
    4210:	d9000515 	stw	r4,20(sp)
    4214:	003d3b06 	br	3704 <_dtoa_r+0x94c>
    4218:	0027883a 	mov	r19,zero
    421c:	003f1b06 	br	3e8c <_dtoa_r+0x10d4>
    4220:	d8800817 	ldw	r2,32(sp)
    4224:	11e9c83a 	sub	r20,r2,r7
    4228:	0005883a 	mov	r2,zero
    422c:	003d5406 	br	3780 <_dtoa_r+0x9c8>
    4230:	00800044 	movi	r2,1
    4234:	003dc706 	br	3954 <_dtoa_r+0xb9c>
    4238:	d8c00217 	ldw	r3,8(sp)
    423c:	00800d84 	movi	r2,54
    4240:	dd400a17 	ldw	r21,40(sp)
    4244:	10c5c83a 	sub	r2,r2,r3
    4248:	dd000817 	ldw	r20,32(sp)
    424c:	003d4c06 	br	3780 <_dtoa_r+0x9c8>
    4250:	dc800f15 	stw	r18,60(sp)
    4254:	dcc01015 	stw	r19,64(sp)
    4258:	04000084 	movi	r16,2
    425c:	003bed06 	br	3214 <_dtoa_r+0x45c>
    4260:	d9000617 	ldw	r4,24(sp)
    4264:	203f0d26 	beq	r4,zero,3e9c <_dtoa_r+0x10e4>
    4268:	d9800c17 	ldw	r6,48(sp)
    426c:	01bcab0e 	bge	zero,r6,351c <_dtoa_r+0x764>
    4270:	d9401017 	ldw	r5,64(sp)
    4274:	d9000f17 	ldw	r4,60(sp)
    4278:	000d883a 	mov	r6,zero
    427c:	01d00934 	movhi	r7,16420
    4280:	000bb180 	call	bb18 <__muldf3>
    4284:	81000044 	addi	r4,r16,1
    4288:	d8800f15 	stw	r2,60(sp)
    428c:	d8c01015 	stw	r3,64(sp)
    4290:	000cbac0 	call	cbac <__floatsidf>
    4294:	d9800f17 	ldw	r6,60(sp)
    4298:	d9c01017 	ldw	r7,64(sp)
    429c:	1009883a 	mov	r4,r2
    42a0:	180b883a 	mov	r5,r3
    42a4:	000bb180 	call	bb18 <__muldf3>
    42a8:	01d00734 	movhi	r7,16412
    42ac:	000d883a 	mov	r6,zero
    42b0:	1009883a 	mov	r4,r2
    42b4:	180b883a 	mov	r5,r3
    42b8:	000a72c0 	call	a72c <__adddf3>
    42bc:	d9c00517 	ldw	r7,20(sp)
    42c0:	047f3034 	movhi	r17,64704
    42c4:	1021883a 	mov	r16,r2
    42c8:	39ffffc4 	addi	r7,r7,-1
    42cc:	d9c01315 	stw	r7,76(sp)
    42d0:	1c63883a 	add	r17,r3,r17
    42d4:	db000c17 	ldw	r12,48(sp)
    42d8:	003bea06 	br	3284 <_dtoa_r+0x4cc>
    42dc:	dc000915 	stw	r16,36(sp)
    42e0:	003e0e06 	br	3b1c <_dtoa_r+0xd64>
    42e4:	01000e44 	movi	r4,57
    42e8:	8825883a 	mov	r18,r17
    42ec:	9dc00044 	addi	r23,r19,1
    42f0:	99000005 	stb	r4,0(r19)
    42f4:	a023883a 	mov	r17,r20
    42f8:	dc000915 	stw	r16,36(sp)
    42fc:	003da406 	br	3990 <_dtoa_r+0xbd8>
    4300:	d9801417 	ldw	r6,80(sp)
    4304:	d9c01517 	ldw	r7,84(sp)
    4308:	0009883a 	mov	r4,zero
    430c:	014ff834 	movhi	r5,16352
    4310:	000c2300 	call	c230 <__subdf3>
    4314:	880d883a 	mov	r6,r17
    4318:	a00f883a 	mov	r7,r20
    431c:	1009883a 	mov	r4,r2
    4320:	180b883a 	mov	r5,r3
    4324:	000b9480 	call	b948 <__gedf2>
    4328:	00bc7c0e 	bge	zero,r2,351c <_dtoa_r+0x764>
    432c:	01000c04 	movi	r4,48
    4330:	00000106 	br	4338 <_dtoa_r+0x1580>
    4334:	102f883a 	mov	r23,r2
    4338:	b8bfffc4 	addi	r2,r23,-1
    433c:	10c00007 	ldb	r3,0(r2)
    4340:	193ffc26 	beq	r3,r4,4334 <_dtoa_r+0x157c>
    4344:	d9801317 	ldw	r6,76(sp)
    4348:	d9800515 	stw	r6,20(sp)
    434c:	003c4406 	br	3460 <_dtoa_r+0x6a8>
    4350:	d9801317 	ldw	r6,76(sp)
    4354:	d9800515 	stw	r6,20(sp)
    4358:	003cea06 	br	3704 <_dtoa_r+0x94c>
    435c:	dd800f17 	ldw	r22,60(sp)
    4360:	dcc01017 	ldw	r19,64(sp)
    4364:	dc801217 	ldw	r18,72(sp)
    4368:	003c6c06 	br	351c <_dtoa_r+0x764>
    436c:	903e031e 	bne	r18,zero,3b7c <_dtoa_r+0xdc4>
    4370:	003ebb06 	br	3e60 <_dtoa_r+0x10a8>
    4374:	103e6c1e 	bne	r2,zero,3d28 <_dtoa_r+0xf70>
    4378:	4080004c 	andi	r2,r8,1
    437c:	103e6a26 	beq	r2,zero,3d28 <_dtoa_r+0xf70>
    4380:	003e6606 	br	3d1c <_dtoa_r+0xf64>
    4384:	d8c00317 	ldw	r3,12(sp)
    4388:	00800084 	movi	r2,2
    438c:	10c02916 	blt	r2,r3,4434 <_dtoa_r+0x167c>
    4390:	d9000c17 	ldw	r4,48(sp)
    4394:	003e8806 	br	3db8 <_dtoa_r+0x1000>
    4398:	04000084 	movi	r16,2
    439c:	003b9d06 	br	3214 <_dtoa_r+0x45c>
    43a0:	d9001317 	ldw	r4,76(sp)
    43a4:	d9000515 	stw	r4,20(sp)
    43a8:	003cd606 	br	3704 <_dtoa_r+0x94c>
    43ac:	d8801317 	ldw	r2,76(sp)
    43b0:	d8800515 	stw	r2,20(sp)
    43b4:	003c2a06 	br	3460 <_dtoa_r+0x6a8>
    43b8:	d9800317 	ldw	r6,12(sp)
    43bc:	00800084 	movi	r2,2
    43c0:	11801516 	blt	r2,r6,4418 <_dtoa_r+0x1660>
    43c4:	d9c00c17 	ldw	r7,48(sp)
    43c8:	d9c00615 	stw	r7,24(sp)
    43cc:	003df706 	br	3bac <_dtoa_r+0xdf4>
    43d0:	193d3926 	beq	r3,r4,38b8 <_dtoa_r+0xb00>
    43d4:	00c00f04 	movi	r3,60
    43d8:	1885c83a 	sub	r2,r3,r2
    43dc:	003ddf06 	br	3b5c <_dtoa_r+0xda4>
    43e0:	e009883a 	mov	r4,fp
    43e4:	e0001115 	stw	zero,68(fp)
    43e8:	000b883a 	mov	r5,zero
    43ec:	000630c0 	call	630c <_Balloc>
    43f0:	d8800715 	stw	r2,28(sp)
    43f4:	d8c00717 	ldw	r3,28(sp)
    43f8:	00bfffc4 	movi	r2,-1
    43fc:	01000044 	movi	r4,1
    4400:	d8800c15 	stw	r2,48(sp)
    4404:	e0c01015 	stw	r3,64(fp)
    4408:	d9000b15 	stw	r4,44(sp)
    440c:	d8800615 	stw	r2,24(sp)
    4410:	d8002215 	stw	zero,136(sp)
    4414:	003c4106 	br	351c <_dtoa_r+0x764>
    4418:	d8c00c17 	ldw	r3,48(sp)
    441c:	d8c00615 	stw	r3,24(sp)
    4420:	003e7006 	br	3de4 <_dtoa_r+0x102c>
    4424:	04400044 	movi	r17,1
    4428:	003b2006 	br	30ac <_dtoa_r+0x2f4>
    442c:	000b883a 	mov	r5,zero
    4430:	003b3d06 	br	3128 <_dtoa_r+0x370>
    4434:	d8800c17 	ldw	r2,48(sp)
    4438:	d8800615 	stw	r2,24(sp)
    443c:	003e6906 	br	3de4 <_dtoa_r+0x102c>

00004440 <__sflush_r>:
    4440:	2880030b 	ldhu	r2,12(r5)
    4444:	defffb04 	addi	sp,sp,-20
    4448:	dcc00315 	stw	r19,12(sp)
    444c:	dc400115 	stw	r17,4(sp)
    4450:	dfc00415 	stw	ra,16(sp)
    4454:	dc800215 	stw	r18,8(sp)
    4458:	dc000015 	stw	r16,0(sp)
    445c:	10c0020c 	andi	r3,r2,8
    4460:	2823883a 	mov	r17,r5
    4464:	2027883a 	mov	r19,r4
    4468:	1800311e 	bne	r3,zero,4530 <__sflush_r+0xf0>
    446c:	28c00117 	ldw	r3,4(r5)
    4470:	10820014 	ori	r2,r2,2048
    4474:	2880030d 	sth	r2,12(r5)
    4478:	00c04b0e 	bge	zero,r3,45a8 <__sflush_r+0x168>
    447c:	8a000a17 	ldw	r8,40(r17)
    4480:	40002326 	beq	r8,zero,4510 <__sflush_r+0xd0>
    4484:	9c000017 	ldw	r16,0(r19)
    4488:	10c4000c 	andi	r3,r2,4096
    448c:	98000015 	stw	zero,0(r19)
    4490:	18004826 	beq	r3,zero,45b4 <__sflush_r+0x174>
    4494:	89801417 	ldw	r6,80(r17)
    4498:	10c0010c 	andi	r3,r2,4
    449c:	18000626 	beq	r3,zero,44b8 <__sflush_r+0x78>
    44a0:	88c00117 	ldw	r3,4(r17)
    44a4:	88800c17 	ldw	r2,48(r17)
    44a8:	30cdc83a 	sub	r6,r6,r3
    44ac:	10000226 	beq	r2,zero,44b8 <__sflush_r+0x78>
    44b0:	88800f17 	ldw	r2,60(r17)
    44b4:	308dc83a 	sub	r6,r6,r2
    44b8:	89400717 	ldw	r5,28(r17)
    44bc:	000f883a 	mov	r7,zero
    44c0:	9809883a 	mov	r4,r19
    44c4:	403ee83a 	callr	r8
    44c8:	00ffffc4 	movi	r3,-1
    44cc:	10c04426 	beq	r2,r3,45e0 <__sflush_r+0x1a0>
    44d0:	88c0030b 	ldhu	r3,12(r17)
    44d4:	89000417 	ldw	r4,16(r17)
    44d8:	88000115 	stw	zero,4(r17)
    44dc:	197dffcc 	andi	r5,r3,63487
    44e0:	8940030d 	sth	r5,12(r17)
    44e4:	89000015 	stw	r4,0(r17)
    44e8:	18c4000c 	andi	r3,r3,4096
    44ec:	18002c1e 	bne	r3,zero,45a0 <__sflush_r+0x160>
    44f0:	89400c17 	ldw	r5,48(r17)
    44f4:	9c000015 	stw	r16,0(r19)
    44f8:	28000526 	beq	r5,zero,4510 <__sflush_r+0xd0>
    44fc:	88801004 	addi	r2,r17,64
    4500:	28800226 	beq	r5,r2,450c <__sflush_r+0xcc>
    4504:	9809883a 	mov	r4,r19
    4508:	0004bac0 	call	4bac <_free_r>
    450c:	88000c15 	stw	zero,48(r17)
    4510:	0005883a 	mov	r2,zero
    4514:	dfc00417 	ldw	ra,16(sp)
    4518:	dcc00317 	ldw	r19,12(sp)
    451c:	dc800217 	ldw	r18,8(sp)
    4520:	dc400117 	ldw	r17,4(sp)
    4524:	dc000017 	ldw	r16,0(sp)
    4528:	dec00504 	addi	sp,sp,20
    452c:	f800283a 	ret
    4530:	2c800417 	ldw	r18,16(r5)
    4534:	903ff626 	beq	r18,zero,4510 <__sflush_r+0xd0>
    4538:	2c000017 	ldw	r16,0(r5)
    453c:	108000cc 	andi	r2,r2,3
    4540:	2c800015 	stw	r18,0(r5)
    4544:	84a1c83a 	sub	r16,r16,r18
    4548:	1000131e 	bne	r2,zero,4598 <__sflush_r+0x158>
    454c:	28800517 	ldw	r2,20(r5)
    4550:	88800215 	stw	r2,8(r17)
    4554:	04000316 	blt	zero,r16,4564 <__sflush_r+0x124>
    4558:	003fed06 	br	4510 <__sflush_r+0xd0>
    455c:	90a5883a 	add	r18,r18,r2
    4560:	043feb0e 	bge	zero,r16,4510 <__sflush_r+0xd0>
    4564:	88800917 	ldw	r2,36(r17)
    4568:	89400717 	ldw	r5,28(r17)
    456c:	800f883a 	mov	r7,r16
    4570:	900d883a 	mov	r6,r18
    4574:	9809883a 	mov	r4,r19
    4578:	103ee83a 	callr	r2
    457c:	80a1c83a 	sub	r16,r16,r2
    4580:	00bff616 	blt	zero,r2,455c <__sflush_r+0x11c>
    4584:	88c0030b 	ldhu	r3,12(r17)
    4588:	00bfffc4 	movi	r2,-1
    458c:	18c01014 	ori	r3,r3,64
    4590:	88c0030d 	sth	r3,12(r17)
    4594:	003fdf06 	br	4514 <__sflush_r+0xd4>
    4598:	0005883a 	mov	r2,zero
    459c:	003fec06 	br	4550 <__sflush_r+0x110>
    45a0:	88801415 	stw	r2,80(r17)
    45a4:	003fd206 	br	44f0 <__sflush_r+0xb0>
    45a8:	28c00f17 	ldw	r3,60(r5)
    45ac:	00ffb316 	blt	zero,r3,447c <__sflush_r+0x3c>
    45b0:	003fd706 	br	4510 <__sflush_r+0xd0>
    45b4:	89400717 	ldw	r5,28(r17)
    45b8:	000d883a 	mov	r6,zero
    45bc:	01c00044 	movi	r7,1
    45c0:	9809883a 	mov	r4,r19
    45c4:	403ee83a 	callr	r8
    45c8:	100d883a 	mov	r6,r2
    45cc:	00bfffc4 	movi	r2,-1
    45d0:	30801426 	beq	r6,r2,4624 <__sflush_r+0x1e4>
    45d4:	8880030b 	ldhu	r2,12(r17)
    45d8:	8a000a17 	ldw	r8,40(r17)
    45dc:	003fae06 	br	4498 <__sflush_r+0x58>
    45e0:	98c00017 	ldw	r3,0(r19)
    45e4:	183fba26 	beq	r3,zero,44d0 <__sflush_r+0x90>
    45e8:	01000744 	movi	r4,29
    45ec:	19000626 	beq	r3,r4,4608 <__sflush_r+0x1c8>
    45f0:	01000584 	movi	r4,22
    45f4:	19000426 	beq	r3,r4,4608 <__sflush_r+0x1c8>
    45f8:	88c0030b 	ldhu	r3,12(r17)
    45fc:	18c01014 	ori	r3,r3,64
    4600:	88c0030d 	sth	r3,12(r17)
    4604:	003fc306 	br	4514 <__sflush_r+0xd4>
    4608:	8880030b 	ldhu	r2,12(r17)
    460c:	88c00417 	ldw	r3,16(r17)
    4610:	88000115 	stw	zero,4(r17)
    4614:	10bdffcc 	andi	r2,r2,63487
    4618:	8880030d 	sth	r2,12(r17)
    461c:	88c00015 	stw	r3,0(r17)
    4620:	003fb306 	br	44f0 <__sflush_r+0xb0>
    4624:	98800017 	ldw	r2,0(r19)
    4628:	103fea26 	beq	r2,zero,45d4 <__sflush_r+0x194>
    462c:	00c00744 	movi	r3,29
    4630:	10c00226 	beq	r2,r3,463c <__sflush_r+0x1fc>
    4634:	00c00584 	movi	r3,22
    4638:	10c0031e 	bne	r2,r3,4648 <__sflush_r+0x208>
    463c:	9c000015 	stw	r16,0(r19)
    4640:	0005883a 	mov	r2,zero
    4644:	003fb306 	br	4514 <__sflush_r+0xd4>
    4648:	88c0030b 	ldhu	r3,12(r17)
    464c:	3005883a 	mov	r2,r6
    4650:	18c01014 	ori	r3,r3,64
    4654:	88c0030d 	sth	r3,12(r17)
    4658:	003fae06 	br	4514 <__sflush_r+0xd4>

0000465c <_fflush_r>:
    465c:	defffd04 	addi	sp,sp,-12
    4660:	dc000115 	stw	r16,4(sp)
    4664:	dfc00215 	stw	ra,8(sp)
    4668:	2021883a 	mov	r16,r4
    466c:	20000226 	beq	r4,zero,4678 <_fflush_r+0x1c>
    4670:	20800e17 	ldw	r2,56(r4)
    4674:	10000c26 	beq	r2,zero,46a8 <_fflush_r+0x4c>
    4678:	2880030f 	ldh	r2,12(r5)
    467c:	1000051e 	bne	r2,zero,4694 <_fflush_r+0x38>
    4680:	0005883a 	mov	r2,zero
    4684:	dfc00217 	ldw	ra,8(sp)
    4688:	dc000117 	ldw	r16,4(sp)
    468c:	dec00304 	addi	sp,sp,12
    4690:	f800283a 	ret
    4694:	8009883a 	mov	r4,r16
    4698:	dfc00217 	ldw	ra,8(sp)
    469c:	dc000117 	ldw	r16,4(sp)
    46a0:	dec00304 	addi	sp,sp,12
    46a4:	00044401 	jmpi	4440 <__sflush_r>
    46a8:	d9400015 	stw	r5,0(sp)
    46ac:	0004a380 	call	4a38 <__sinit>
    46b0:	d9400017 	ldw	r5,0(sp)
    46b4:	003ff006 	br	4678 <_fflush_r+0x1c>

000046b8 <fflush>:
    46b8:	20000526 	beq	r4,zero,46d0 <fflush+0x18>
    46bc:	00800074 	movhi	r2,1
    46c0:	1084c904 	addi	r2,r2,4900
    46c4:	200b883a 	mov	r5,r4
    46c8:	11000017 	ldw	r4,0(r2)
    46cc:	000465c1 	jmpi	465c <_fflush_r>
    46d0:	00800074 	movhi	r2,1
    46d4:	1084c804 	addi	r2,r2,4896
    46d8:	11000017 	ldw	r4,0(r2)
    46dc:	01400034 	movhi	r5,0
    46e0:	29519704 	addi	r5,r5,18012
    46e4:	000543c1 	jmpi	543c <_fwalk_reent>

000046e8 <__fp_unlock>:
    46e8:	0005883a 	mov	r2,zero
    46ec:	f800283a 	ret

000046f0 <_cleanup_r>:
    46f0:	01400074 	movhi	r5,1
    46f4:	2964c304 	addi	r5,r5,-27892
    46f8:	000543c1 	jmpi	543c <_fwalk_reent>

000046fc <__sinit.part.1>:
    46fc:	defff704 	addi	sp,sp,-36
    4700:	00c00034 	movhi	r3,0
    4704:	dfc00815 	stw	ra,32(sp)
    4708:	ddc00715 	stw	r23,28(sp)
    470c:	dd800615 	stw	r22,24(sp)
    4710:	dd400515 	stw	r21,20(sp)
    4714:	dd000415 	stw	r20,16(sp)
    4718:	dcc00315 	stw	r19,12(sp)
    471c:	dc800215 	stw	r18,8(sp)
    4720:	dc400115 	stw	r17,4(sp)
    4724:	dc000015 	stw	r16,0(sp)
    4728:	18d1bc04 	addi	r3,r3,18160
    472c:	24000117 	ldw	r16,4(r4)
    4730:	20c00f15 	stw	r3,60(r4)
    4734:	2080bb04 	addi	r2,r4,748
    4738:	00c000c4 	movi	r3,3
    473c:	20c0b915 	stw	r3,740(r4)
    4740:	2080ba15 	stw	r2,744(r4)
    4744:	2000b815 	stw	zero,736(r4)
    4748:	05c00204 	movi	r23,8
    474c:	00800104 	movi	r2,4
    4750:	2025883a 	mov	r18,r4
    4754:	b80d883a 	mov	r6,r23
    4758:	81001704 	addi	r4,r16,92
    475c:	000b883a 	mov	r5,zero
    4760:	80000015 	stw	zero,0(r16)
    4764:	80000115 	stw	zero,4(r16)
    4768:	80000215 	stw	zero,8(r16)
    476c:	8080030d 	sth	r2,12(r16)
    4770:	80001915 	stw	zero,100(r16)
    4774:	8000038d 	sth	zero,14(r16)
    4778:	80000415 	stw	zero,16(r16)
    477c:	80000515 	stw	zero,20(r16)
    4780:	80000615 	stw	zero,24(r16)
    4784:	00061e40 	call	61e4 <memset>
    4788:	05800034 	movhi	r22,0
    478c:	94400217 	ldw	r17,8(r18)
    4790:	05400034 	movhi	r21,0
    4794:	05000034 	movhi	r20,0
    4798:	04c00034 	movhi	r19,0
    479c:	b59e4d04 	addi	r22,r22,31028
    47a0:	ad5e6404 	addi	r21,r21,31120
    47a4:	a51e8304 	addi	r20,r20,31244
    47a8:	9cde9a04 	addi	r19,r19,31336
    47ac:	85800815 	stw	r22,32(r16)
    47b0:	85400915 	stw	r21,36(r16)
    47b4:	85000a15 	stw	r20,40(r16)
    47b8:	84c00b15 	stw	r19,44(r16)
    47bc:	84000715 	stw	r16,28(r16)
    47c0:	00800284 	movi	r2,10
    47c4:	8880030d 	sth	r2,12(r17)
    47c8:	00800044 	movi	r2,1
    47cc:	b80d883a 	mov	r6,r23
    47d0:	89001704 	addi	r4,r17,92
    47d4:	000b883a 	mov	r5,zero
    47d8:	88000015 	stw	zero,0(r17)
    47dc:	88000115 	stw	zero,4(r17)
    47e0:	88000215 	stw	zero,8(r17)
    47e4:	88001915 	stw	zero,100(r17)
    47e8:	8880038d 	sth	r2,14(r17)
    47ec:	88000415 	stw	zero,16(r17)
    47f0:	88000515 	stw	zero,20(r17)
    47f4:	88000615 	stw	zero,24(r17)
    47f8:	00061e40 	call	61e4 <memset>
    47fc:	94000317 	ldw	r16,12(r18)
    4800:	00800484 	movi	r2,18
    4804:	8c400715 	stw	r17,28(r17)
    4808:	8d800815 	stw	r22,32(r17)
    480c:	8d400915 	stw	r21,36(r17)
    4810:	8d000a15 	stw	r20,40(r17)
    4814:	8cc00b15 	stw	r19,44(r17)
    4818:	8080030d 	sth	r2,12(r16)
    481c:	00800084 	movi	r2,2
    4820:	80000015 	stw	zero,0(r16)
    4824:	80000115 	stw	zero,4(r16)
    4828:	80000215 	stw	zero,8(r16)
    482c:	80001915 	stw	zero,100(r16)
    4830:	8080038d 	sth	r2,14(r16)
    4834:	80000415 	stw	zero,16(r16)
    4838:	80000515 	stw	zero,20(r16)
    483c:	80000615 	stw	zero,24(r16)
    4840:	b80d883a 	mov	r6,r23
    4844:	000b883a 	mov	r5,zero
    4848:	81001704 	addi	r4,r16,92
    484c:	00061e40 	call	61e4 <memset>
    4850:	00800044 	movi	r2,1
    4854:	84000715 	stw	r16,28(r16)
    4858:	85800815 	stw	r22,32(r16)
    485c:	85400915 	stw	r21,36(r16)
    4860:	85000a15 	stw	r20,40(r16)
    4864:	84c00b15 	stw	r19,44(r16)
    4868:	90800e15 	stw	r2,56(r18)
    486c:	dfc00817 	ldw	ra,32(sp)
    4870:	ddc00717 	ldw	r23,28(sp)
    4874:	dd800617 	ldw	r22,24(sp)
    4878:	dd400517 	ldw	r21,20(sp)
    487c:	dd000417 	ldw	r20,16(sp)
    4880:	dcc00317 	ldw	r19,12(sp)
    4884:	dc800217 	ldw	r18,8(sp)
    4888:	dc400117 	ldw	r17,4(sp)
    488c:	dc000017 	ldw	r16,0(sp)
    4890:	dec00904 	addi	sp,sp,36
    4894:	f800283a 	ret

00004898 <__fp_lock>:
    4898:	0005883a 	mov	r2,zero
    489c:	f800283a 	ret

000048a0 <__sfmoreglue>:
    48a0:	defffc04 	addi	sp,sp,-16
    48a4:	dc400115 	stw	r17,4(sp)
    48a8:	2c7fffc4 	addi	r17,r5,-1
    48ac:	8c401a24 	muli	r17,r17,104
    48b0:	dc800215 	stw	r18,8(sp)
    48b4:	2825883a 	mov	r18,r5
    48b8:	89401d04 	addi	r5,r17,116
    48bc:	dc000015 	stw	r16,0(sp)
    48c0:	dfc00315 	stw	ra,12(sp)
    48c4:	00057980 	call	5798 <_malloc_r>
    48c8:	1021883a 	mov	r16,r2
    48cc:	10000726 	beq	r2,zero,48ec <__sfmoreglue+0x4c>
    48d0:	11000304 	addi	r4,r2,12
    48d4:	10000015 	stw	zero,0(r2)
    48d8:	14800115 	stw	r18,4(r2)
    48dc:	11000215 	stw	r4,8(r2)
    48e0:	89801a04 	addi	r6,r17,104
    48e4:	000b883a 	mov	r5,zero
    48e8:	00061e40 	call	61e4 <memset>
    48ec:	8005883a 	mov	r2,r16
    48f0:	dfc00317 	ldw	ra,12(sp)
    48f4:	dc800217 	ldw	r18,8(sp)
    48f8:	dc400117 	ldw	r17,4(sp)
    48fc:	dc000017 	ldw	r16,0(sp)
    4900:	dec00404 	addi	sp,sp,16
    4904:	f800283a 	ret

00004908 <__sfp>:
    4908:	defffb04 	addi	sp,sp,-20
    490c:	dc000015 	stw	r16,0(sp)
    4910:	04000074 	movhi	r16,1
    4914:	8404c804 	addi	r16,r16,4896
    4918:	dcc00315 	stw	r19,12(sp)
    491c:	2027883a 	mov	r19,r4
    4920:	81000017 	ldw	r4,0(r16)
    4924:	dfc00415 	stw	ra,16(sp)
    4928:	dc800215 	stw	r18,8(sp)
    492c:	20800e17 	ldw	r2,56(r4)
    4930:	dc400115 	stw	r17,4(sp)
    4934:	1000021e 	bne	r2,zero,4940 <__sfp+0x38>
    4938:	00046fc0 	call	46fc <__sinit.part.1>
    493c:	81000017 	ldw	r4,0(r16)
    4940:	2480b804 	addi	r18,r4,736
    4944:	047fffc4 	movi	r17,-1
    4948:	91000117 	ldw	r4,4(r18)
    494c:	94000217 	ldw	r16,8(r18)
    4950:	213fffc4 	addi	r4,r4,-1
    4954:	20000a16 	blt	r4,zero,4980 <__sfp+0x78>
    4958:	8080030f 	ldh	r2,12(r16)
    495c:	10000c26 	beq	r2,zero,4990 <__sfp+0x88>
    4960:	80c01d04 	addi	r3,r16,116
    4964:	00000206 	br	4970 <__sfp+0x68>
    4968:	18bfe60f 	ldh	r2,-104(r3)
    496c:	10000826 	beq	r2,zero,4990 <__sfp+0x88>
    4970:	213fffc4 	addi	r4,r4,-1
    4974:	1c3ffd04 	addi	r16,r3,-12
    4978:	18c01a04 	addi	r3,r3,104
    497c:	247ffa1e 	bne	r4,r17,4968 <__sfp+0x60>
    4980:	90800017 	ldw	r2,0(r18)
    4984:	10001d26 	beq	r2,zero,49fc <__sfp+0xf4>
    4988:	1025883a 	mov	r18,r2
    498c:	003fee06 	br	4948 <__sfp+0x40>
    4990:	00bfffc4 	movi	r2,-1
    4994:	8080038d 	sth	r2,14(r16)
    4998:	00800044 	movi	r2,1
    499c:	8080030d 	sth	r2,12(r16)
    49a0:	80001915 	stw	zero,100(r16)
    49a4:	80000015 	stw	zero,0(r16)
    49a8:	80000215 	stw	zero,8(r16)
    49ac:	80000115 	stw	zero,4(r16)
    49b0:	80000415 	stw	zero,16(r16)
    49b4:	80000515 	stw	zero,20(r16)
    49b8:	80000615 	stw	zero,24(r16)
    49bc:	01800204 	movi	r6,8
    49c0:	000b883a 	mov	r5,zero
    49c4:	81001704 	addi	r4,r16,92
    49c8:	00061e40 	call	61e4 <memset>
    49cc:	8005883a 	mov	r2,r16
    49d0:	80000c15 	stw	zero,48(r16)
    49d4:	80000d15 	stw	zero,52(r16)
    49d8:	80001115 	stw	zero,68(r16)
    49dc:	80001215 	stw	zero,72(r16)
    49e0:	dfc00417 	ldw	ra,16(sp)
    49e4:	dcc00317 	ldw	r19,12(sp)
    49e8:	dc800217 	ldw	r18,8(sp)
    49ec:	dc400117 	ldw	r17,4(sp)
    49f0:	dc000017 	ldw	r16,0(sp)
    49f4:	dec00504 	addi	sp,sp,20
    49f8:	f800283a 	ret
    49fc:	01400104 	movi	r5,4
    4a00:	9809883a 	mov	r4,r19
    4a04:	00048a00 	call	48a0 <__sfmoreglue>
    4a08:	90800015 	stw	r2,0(r18)
    4a0c:	103fde1e 	bne	r2,zero,4988 <__sfp+0x80>
    4a10:	00800304 	movi	r2,12
    4a14:	98800015 	stw	r2,0(r19)
    4a18:	0005883a 	mov	r2,zero
    4a1c:	003ff006 	br	49e0 <__sfp+0xd8>

00004a20 <_cleanup>:
    4a20:	00800074 	movhi	r2,1
    4a24:	1084c804 	addi	r2,r2,4896
    4a28:	11000017 	ldw	r4,0(r2)
    4a2c:	01400074 	movhi	r5,1
    4a30:	2964c304 	addi	r5,r5,-27892
    4a34:	000543c1 	jmpi	543c <_fwalk_reent>

00004a38 <__sinit>:
    4a38:	20800e17 	ldw	r2,56(r4)
    4a3c:	10000126 	beq	r2,zero,4a44 <__sinit+0xc>
    4a40:	f800283a 	ret
    4a44:	00046fc1 	jmpi	46fc <__sinit.part.1>

00004a48 <__sfp_lock_acquire>:
    4a48:	f800283a 	ret

00004a4c <__sfp_lock_release>:
    4a4c:	f800283a 	ret

00004a50 <__sinit_lock_acquire>:
    4a50:	f800283a 	ret

00004a54 <__sinit_lock_release>:
    4a54:	f800283a 	ret

00004a58 <__fp_lock_all>:
    4a58:	00800074 	movhi	r2,1
    4a5c:	1084c904 	addi	r2,r2,4900
    4a60:	11000017 	ldw	r4,0(r2)
    4a64:	01400034 	movhi	r5,0
    4a68:	29522604 	addi	r5,r5,18584
    4a6c:	00053781 	jmpi	5378 <_fwalk>

00004a70 <__fp_unlock_all>:
    4a70:	00800074 	movhi	r2,1
    4a74:	1084c904 	addi	r2,r2,4900
    4a78:	11000017 	ldw	r4,0(r2)
    4a7c:	01400034 	movhi	r5,0
    4a80:	2951ba04 	addi	r5,r5,18152
    4a84:	00053781 	jmpi	5378 <_fwalk>

00004a88 <_malloc_trim_r>:
    4a88:	defffb04 	addi	sp,sp,-20
    4a8c:	dcc00315 	stw	r19,12(sp)
    4a90:	04c00074 	movhi	r19,1
    4a94:	dc800215 	stw	r18,8(sp)
    4a98:	dc400115 	stw	r17,4(sp)
    4a9c:	dc000015 	stw	r16,0(sp)
    4aa0:	dfc00415 	stw	ra,16(sp)
    4aa4:	2821883a 	mov	r16,r5
    4aa8:	9cff4404 	addi	r19,r19,-752
    4aac:	2025883a 	mov	r18,r4
    4ab0:	000d3580 	call	d358 <__malloc_lock>
    4ab4:	98800217 	ldw	r2,8(r19)
    4ab8:	14400117 	ldw	r17,4(r2)
    4abc:	00bfff04 	movi	r2,-4
    4ac0:	88a2703a 	and	r17,r17,r2
    4ac4:	8c21c83a 	sub	r16,r17,r16
    4ac8:	8403fbc4 	addi	r16,r16,4079
    4acc:	8020d33a 	srli	r16,r16,12
    4ad0:	0083ffc4 	movi	r2,4095
    4ad4:	843fffc4 	addi	r16,r16,-1
    4ad8:	8020933a 	slli	r16,r16,12
    4adc:	1400060e 	bge	r2,r16,4af8 <_malloc_trim_r+0x70>
    4ae0:	000b883a 	mov	r5,zero
    4ae4:	9009883a 	mov	r4,r18
    4ae8:	00078e00 	call	78e0 <_sbrk_r>
    4aec:	98c00217 	ldw	r3,8(r19)
    4af0:	1c47883a 	add	r3,r3,r17
    4af4:	10c00a26 	beq	r2,r3,4b20 <_malloc_trim_r+0x98>
    4af8:	9009883a 	mov	r4,r18
    4afc:	000d37c0 	call	d37c <__malloc_unlock>
    4b00:	0005883a 	mov	r2,zero
    4b04:	dfc00417 	ldw	ra,16(sp)
    4b08:	dcc00317 	ldw	r19,12(sp)
    4b0c:	dc800217 	ldw	r18,8(sp)
    4b10:	dc400117 	ldw	r17,4(sp)
    4b14:	dc000017 	ldw	r16,0(sp)
    4b18:	dec00504 	addi	sp,sp,20
    4b1c:	f800283a 	ret
    4b20:	040bc83a 	sub	r5,zero,r16
    4b24:	9009883a 	mov	r4,r18
    4b28:	00078e00 	call	78e0 <_sbrk_r>
    4b2c:	00ffffc4 	movi	r3,-1
    4b30:	10c00d26 	beq	r2,r3,4b68 <_malloc_trim_r+0xe0>
    4b34:	00c00074 	movhi	r3,1
    4b38:	18cba104 	addi	r3,r3,11908
    4b3c:	18800017 	ldw	r2,0(r3)
    4b40:	99000217 	ldw	r4,8(r19)
    4b44:	8c23c83a 	sub	r17,r17,r16
    4b48:	8c400054 	ori	r17,r17,1
    4b4c:	1421c83a 	sub	r16,r2,r16
    4b50:	24400115 	stw	r17,4(r4)
    4b54:	9009883a 	mov	r4,r18
    4b58:	1c000015 	stw	r16,0(r3)
    4b5c:	000d37c0 	call	d37c <__malloc_unlock>
    4b60:	00800044 	movi	r2,1
    4b64:	003fe706 	br	4b04 <_malloc_trim_r+0x7c>
    4b68:	000b883a 	mov	r5,zero
    4b6c:	9009883a 	mov	r4,r18
    4b70:	00078e00 	call	78e0 <_sbrk_r>
    4b74:	99000217 	ldw	r4,8(r19)
    4b78:	014003c4 	movi	r5,15
    4b7c:	1107c83a 	sub	r3,r2,r4
    4b80:	28ffdd0e 	bge	r5,r3,4af8 <_malloc_trim_r+0x70>
    4b84:	01400074 	movhi	r5,1
    4b88:	2944cb04 	addi	r5,r5,4908
    4b8c:	29400017 	ldw	r5,0(r5)
    4b90:	18c00054 	ori	r3,r3,1
    4b94:	20c00115 	stw	r3,4(r4)
    4b98:	00c00074 	movhi	r3,1
    4b9c:	1145c83a 	sub	r2,r2,r5
    4ba0:	18cba104 	addi	r3,r3,11908
    4ba4:	18800015 	stw	r2,0(r3)
    4ba8:	003fd306 	br	4af8 <_malloc_trim_r+0x70>

00004bac <_free_r>:
    4bac:	28004126 	beq	r5,zero,4cb4 <_free_r+0x108>
    4bb0:	defffd04 	addi	sp,sp,-12
    4bb4:	dc400115 	stw	r17,4(sp)
    4bb8:	dc000015 	stw	r16,0(sp)
    4bbc:	2023883a 	mov	r17,r4
    4bc0:	2821883a 	mov	r16,r5
    4bc4:	dfc00215 	stw	ra,8(sp)
    4bc8:	000d3580 	call	d358 <__malloc_lock>
    4bcc:	81ffff17 	ldw	r7,-4(r16)
    4bd0:	00bfff84 	movi	r2,-2
    4bd4:	01000074 	movhi	r4,1
    4bd8:	81bffe04 	addi	r6,r16,-8
    4bdc:	3884703a 	and	r2,r7,r2
    4be0:	213f4404 	addi	r4,r4,-752
    4be4:	308b883a 	add	r5,r6,r2
    4be8:	2a400117 	ldw	r9,4(r5)
    4bec:	22000217 	ldw	r8,8(r4)
    4bf0:	00ffff04 	movi	r3,-4
    4bf4:	48c6703a 	and	r3,r9,r3
    4bf8:	2a005726 	beq	r5,r8,4d58 <_free_r+0x1ac>
    4bfc:	28c00115 	stw	r3,4(r5)
    4c00:	39c0004c 	andi	r7,r7,1
    4c04:	3800091e 	bne	r7,zero,4c2c <_free_r+0x80>
    4c08:	823ffe17 	ldw	r8,-8(r16)
    4c0c:	22400204 	addi	r9,r4,8
    4c10:	320dc83a 	sub	r6,r6,r8
    4c14:	31c00217 	ldw	r7,8(r6)
    4c18:	1205883a 	add	r2,r2,r8
    4c1c:	3a406526 	beq	r7,r9,4db4 <_free_r+0x208>
    4c20:	32000317 	ldw	r8,12(r6)
    4c24:	3a000315 	stw	r8,12(r7)
    4c28:	41c00215 	stw	r7,8(r8)
    4c2c:	28cf883a 	add	r7,r5,r3
    4c30:	39c00117 	ldw	r7,4(r7)
    4c34:	39c0004c 	andi	r7,r7,1
    4c38:	38003a26 	beq	r7,zero,4d24 <_free_r+0x178>
    4c3c:	10c00054 	ori	r3,r2,1
    4c40:	30c00115 	stw	r3,4(r6)
    4c44:	3087883a 	add	r3,r6,r2
    4c48:	18800015 	stw	r2,0(r3)
    4c4c:	00c07fc4 	movi	r3,511
    4c50:	18801936 	bltu	r3,r2,4cb8 <_free_r+0x10c>
    4c54:	1004d0fa 	srli	r2,r2,3
    4c58:	01c00044 	movi	r7,1
    4c5c:	21400117 	ldw	r5,4(r4)
    4c60:	10c00044 	addi	r3,r2,1
    4c64:	18c7883a 	add	r3,r3,r3
    4c68:	1005d0ba 	srai	r2,r2,2
    4c6c:	18c7883a 	add	r3,r3,r3
    4c70:	18c7883a 	add	r3,r3,r3
    4c74:	1907883a 	add	r3,r3,r4
    4c78:	3884983a 	sll	r2,r7,r2
    4c7c:	19c00017 	ldw	r7,0(r3)
    4c80:	1a3ffe04 	addi	r8,r3,-8
    4c84:	1144b03a 	or	r2,r2,r5
    4c88:	32000315 	stw	r8,12(r6)
    4c8c:	31c00215 	stw	r7,8(r6)
    4c90:	20800115 	stw	r2,4(r4)
    4c94:	19800015 	stw	r6,0(r3)
    4c98:	39800315 	stw	r6,12(r7)
    4c9c:	8809883a 	mov	r4,r17
    4ca0:	dfc00217 	ldw	ra,8(sp)
    4ca4:	dc400117 	ldw	r17,4(sp)
    4ca8:	dc000017 	ldw	r16,0(sp)
    4cac:	dec00304 	addi	sp,sp,12
    4cb0:	000d37c1 	jmpi	d37c <__malloc_unlock>
    4cb4:	f800283a 	ret
    4cb8:	100ad27a 	srli	r5,r2,9
    4cbc:	00c00104 	movi	r3,4
    4cc0:	19404a36 	bltu	r3,r5,4dec <_free_r+0x240>
    4cc4:	100ad1ba 	srli	r5,r2,6
    4cc8:	28c00e44 	addi	r3,r5,57
    4ccc:	18c7883a 	add	r3,r3,r3
    4cd0:	29400e04 	addi	r5,r5,56
    4cd4:	18c7883a 	add	r3,r3,r3
    4cd8:	18c7883a 	add	r3,r3,r3
    4cdc:	1909883a 	add	r4,r3,r4
    4ce0:	20c00017 	ldw	r3,0(r4)
    4ce4:	01c00074 	movhi	r7,1
    4ce8:	213ffe04 	addi	r4,r4,-8
    4cec:	39ff4404 	addi	r7,r7,-752
    4cf0:	20c04426 	beq	r4,r3,4e04 <_free_r+0x258>
    4cf4:	01ffff04 	movi	r7,-4
    4cf8:	19400117 	ldw	r5,4(r3)
    4cfc:	29ca703a 	and	r5,r5,r7
    4d00:	1140022e 	bgeu	r2,r5,4d0c <_free_r+0x160>
    4d04:	18c00217 	ldw	r3,8(r3)
    4d08:	20fffb1e 	bne	r4,r3,4cf8 <_free_r+0x14c>
    4d0c:	19000317 	ldw	r4,12(r3)
    4d10:	31000315 	stw	r4,12(r6)
    4d14:	30c00215 	stw	r3,8(r6)
    4d18:	21800215 	stw	r6,8(r4)
    4d1c:	19800315 	stw	r6,12(r3)
    4d20:	003fde06 	br	4c9c <_free_r+0xf0>
    4d24:	29c00217 	ldw	r7,8(r5)
    4d28:	10c5883a 	add	r2,r2,r3
    4d2c:	00c00074 	movhi	r3,1
    4d30:	18ff4604 	addi	r3,r3,-744
    4d34:	38c03b26 	beq	r7,r3,4e24 <_free_r+0x278>
    4d38:	2a000317 	ldw	r8,12(r5)
    4d3c:	11400054 	ori	r5,r2,1
    4d40:	3087883a 	add	r3,r6,r2
    4d44:	3a000315 	stw	r8,12(r7)
    4d48:	41c00215 	stw	r7,8(r8)
    4d4c:	31400115 	stw	r5,4(r6)
    4d50:	18800015 	stw	r2,0(r3)
    4d54:	003fbd06 	br	4c4c <_free_r+0xa0>
    4d58:	39c0004c 	andi	r7,r7,1
    4d5c:	10c5883a 	add	r2,r2,r3
    4d60:	3800071e 	bne	r7,zero,4d80 <_free_r+0x1d4>
    4d64:	81fffe17 	ldw	r7,-8(r16)
    4d68:	31cdc83a 	sub	r6,r6,r7
    4d6c:	30c00317 	ldw	r3,12(r6)
    4d70:	31400217 	ldw	r5,8(r6)
    4d74:	11c5883a 	add	r2,r2,r7
    4d78:	28c00315 	stw	r3,12(r5)
    4d7c:	19400215 	stw	r5,8(r3)
    4d80:	10c00054 	ori	r3,r2,1
    4d84:	30c00115 	stw	r3,4(r6)
    4d88:	00c00074 	movhi	r3,1
    4d8c:	18c4cc04 	addi	r3,r3,4912
    4d90:	18c00017 	ldw	r3,0(r3)
    4d94:	21800215 	stw	r6,8(r4)
    4d98:	10ffc036 	bltu	r2,r3,4c9c <_free_r+0xf0>
    4d9c:	00800074 	movhi	r2,1
    4da0:	108b9804 	addi	r2,r2,11872
    4da4:	11400017 	ldw	r5,0(r2)
    4da8:	8809883a 	mov	r4,r17
    4dac:	0004a880 	call	4a88 <_malloc_trim_r>
    4db0:	003fba06 	br	4c9c <_free_r+0xf0>
    4db4:	28c9883a 	add	r4,r5,r3
    4db8:	21000117 	ldw	r4,4(r4)
    4dbc:	2100004c 	andi	r4,r4,1
    4dc0:	2000391e 	bne	r4,zero,4ea8 <_free_r+0x2fc>
    4dc4:	29c00217 	ldw	r7,8(r5)
    4dc8:	29000317 	ldw	r4,12(r5)
    4dcc:	1885883a 	add	r2,r3,r2
    4dd0:	10c00054 	ori	r3,r2,1
    4dd4:	39000315 	stw	r4,12(r7)
    4dd8:	21c00215 	stw	r7,8(r4)
    4ddc:	30c00115 	stw	r3,4(r6)
    4de0:	308d883a 	add	r6,r6,r2
    4de4:	30800015 	stw	r2,0(r6)
    4de8:	003fac06 	br	4c9c <_free_r+0xf0>
    4dec:	00c00504 	movi	r3,20
    4df0:	19401536 	bltu	r3,r5,4e48 <_free_r+0x29c>
    4df4:	28c01704 	addi	r3,r5,92
    4df8:	18c7883a 	add	r3,r3,r3
    4dfc:	294016c4 	addi	r5,r5,91
    4e00:	003fb406 	br	4cd4 <_free_r+0x128>
    4e04:	280bd0ba 	srai	r5,r5,2
    4e08:	00c00044 	movi	r3,1
    4e0c:	38800117 	ldw	r2,4(r7)
    4e10:	194a983a 	sll	r5,r3,r5
    4e14:	2007883a 	mov	r3,r4
    4e18:	2884b03a 	or	r2,r5,r2
    4e1c:	38800115 	stw	r2,4(r7)
    4e20:	003fbb06 	br	4d10 <_free_r+0x164>
    4e24:	21800515 	stw	r6,20(r4)
    4e28:	21800415 	stw	r6,16(r4)
    4e2c:	10c00054 	ori	r3,r2,1
    4e30:	31c00315 	stw	r7,12(r6)
    4e34:	31c00215 	stw	r7,8(r6)
    4e38:	30c00115 	stw	r3,4(r6)
    4e3c:	308d883a 	add	r6,r6,r2
    4e40:	30800015 	stw	r2,0(r6)
    4e44:	003f9506 	br	4c9c <_free_r+0xf0>
    4e48:	00c01504 	movi	r3,84
    4e4c:	19400536 	bltu	r3,r5,4e64 <_free_r+0x2b8>
    4e50:	100ad33a 	srli	r5,r2,12
    4e54:	28c01bc4 	addi	r3,r5,111
    4e58:	18c7883a 	add	r3,r3,r3
    4e5c:	29401b84 	addi	r5,r5,110
    4e60:	003f9c06 	br	4cd4 <_free_r+0x128>
    4e64:	00c05504 	movi	r3,340
    4e68:	19400536 	bltu	r3,r5,4e80 <_free_r+0x2d4>
    4e6c:	100ad3fa 	srli	r5,r2,15
    4e70:	28c01e04 	addi	r3,r5,120
    4e74:	18c7883a 	add	r3,r3,r3
    4e78:	29401dc4 	addi	r5,r5,119
    4e7c:	003f9506 	br	4cd4 <_free_r+0x128>
    4e80:	00c15504 	movi	r3,1364
    4e84:	19400536 	bltu	r3,r5,4e9c <_free_r+0x2f0>
    4e88:	100ad4ba 	srli	r5,r2,18
    4e8c:	28c01f44 	addi	r3,r5,125
    4e90:	18c7883a 	add	r3,r3,r3
    4e94:	29401f04 	addi	r5,r5,124
    4e98:	003f8e06 	br	4cd4 <_free_r+0x128>
    4e9c:	00c03f84 	movi	r3,254
    4ea0:	01401f84 	movi	r5,126
    4ea4:	003f8b06 	br	4cd4 <_free_r+0x128>
    4ea8:	10c00054 	ori	r3,r2,1
    4eac:	30c00115 	stw	r3,4(r6)
    4eb0:	308d883a 	add	r6,r6,r2
    4eb4:	30800015 	stw	r2,0(r6)
    4eb8:	003f7806 	br	4c9c <_free_r+0xf0>

00004ebc <__sfvwrite_r>:
    4ebc:	30800217 	ldw	r2,8(r6)
    4ec0:	10006726 	beq	r2,zero,5060 <__sfvwrite_r+0x1a4>
    4ec4:	28c0030b 	ldhu	r3,12(r5)
    4ec8:	defff404 	addi	sp,sp,-48
    4ecc:	dd400715 	stw	r21,28(sp)
    4ed0:	dd000615 	stw	r20,24(sp)
    4ed4:	dc000215 	stw	r16,8(sp)
    4ed8:	dfc00b15 	stw	ra,44(sp)
    4edc:	df000a15 	stw	fp,40(sp)
    4ee0:	ddc00915 	stw	r23,36(sp)
    4ee4:	dd800815 	stw	r22,32(sp)
    4ee8:	dcc00515 	stw	r19,20(sp)
    4eec:	dc800415 	stw	r18,16(sp)
    4ef0:	dc400315 	stw	r17,12(sp)
    4ef4:	1880020c 	andi	r2,r3,8
    4ef8:	2821883a 	mov	r16,r5
    4efc:	202b883a 	mov	r21,r4
    4f00:	3029883a 	mov	r20,r6
    4f04:	10002726 	beq	r2,zero,4fa4 <__sfvwrite_r+0xe8>
    4f08:	28800417 	ldw	r2,16(r5)
    4f0c:	10002526 	beq	r2,zero,4fa4 <__sfvwrite_r+0xe8>
    4f10:	1880008c 	andi	r2,r3,2
    4f14:	a4400017 	ldw	r17,0(r20)
    4f18:	10002a26 	beq	r2,zero,4fc4 <__sfvwrite_r+0x108>
    4f1c:	05a00034 	movhi	r22,32768
    4f20:	0027883a 	mov	r19,zero
    4f24:	0025883a 	mov	r18,zero
    4f28:	b5bf0004 	addi	r22,r22,-1024
    4f2c:	980d883a 	mov	r6,r19
    4f30:	a809883a 	mov	r4,r21
    4f34:	90004626 	beq	r18,zero,5050 <__sfvwrite_r+0x194>
    4f38:	900f883a 	mov	r7,r18
    4f3c:	b480022e 	bgeu	r22,r18,4f48 <__sfvwrite_r+0x8c>
    4f40:	01e00034 	movhi	r7,32768
    4f44:	39ff0004 	addi	r7,r7,-1024
    4f48:	80800917 	ldw	r2,36(r16)
    4f4c:	81400717 	ldw	r5,28(r16)
    4f50:	103ee83a 	callr	r2
    4f54:	0080570e 	bge	zero,r2,50b4 <__sfvwrite_r+0x1f8>
    4f58:	a0c00217 	ldw	r3,8(r20)
    4f5c:	98a7883a 	add	r19,r19,r2
    4f60:	90a5c83a 	sub	r18,r18,r2
    4f64:	1885c83a 	sub	r2,r3,r2
    4f68:	a0800215 	stw	r2,8(r20)
    4f6c:	103fef1e 	bne	r2,zero,4f2c <__sfvwrite_r+0x70>
    4f70:	0005883a 	mov	r2,zero
    4f74:	dfc00b17 	ldw	ra,44(sp)
    4f78:	df000a17 	ldw	fp,40(sp)
    4f7c:	ddc00917 	ldw	r23,36(sp)
    4f80:	dd800817 	ldw	r22,32(sp)
    4f84:	dd400717 	ldw	r21,28(sp)
    4f88:	dd000617 	ldw	r20,24(sp)
    4f8c:	dcc00517 	ldw	r19,20(sp)
    4f90:	dc800417 	ldw	r18,16(sp)
    4f94:	dc400317 	ldw	r17,12(sp)
    4f98:	dc000217 	ldw	r16,8(sp)
    4f9c:	dec00c04 	addi	sp,sp,48
    4fa0:	f800283a 	ret
    4fa4:	800b883a 	mov	r5,r16
    4fa8:	a809883a 	mov	r4,r21
    4fac:	0002a640 	call	2a64 <__swsetup_r>
    4fb0:	1000eb1e 	bne	r2,zero,5360 <__sfvwrite_r+0x4a4>
    4fb4:	80c0030b 	ldhu	r3,12(r16)
    4fb8:	a4400017 	ldw	r17,0(r20)
    4fbc:	1880008c 	andi	r2,r3,2
    4fc0:	103fd61e 	bne	r2,zero,4f1c <__sfvwrite_r+0x60>
    4fc4:	1880004c 	andi	r2,r3,1
    4fc8:	10003f1e 	bne	r2,zero,50c8 <__sfvwrite_r+0x20c>
    4fcc:	0039883a 	mov	fp,zero
    4fd0:	0025883a 	mov	r18,zero
    4fd4:	90001a26 	beq	r18,zero,5040 <__sfvwrite_r+0x184>
    4fd8:	1880800c 	andi	r2,r3,512
    4fdc:	84c00217 	ldw	r19,8(r16)
    4fe0:	10002126 	beq	r2,zero,5068 <__sfvwrite_r+0x1ac>
    4fe4:	982f883a 	mov	r23,r19
    4fe8:	94c09336 	bltu	r18,r19,5238 <__sfvwrite_r+0x37c>
    4fec:	1881200c 	andi	r2,r3,1152
    4ff0:	10009e1e 	bne	r2,zero,526c <__sfvwrite_r+0x3b0>
    4ff4:	81000017 	ldw	r4,0(r16)
    4ff8:	b80d883a 	mov	r6,r23
    4ffc:	e00b883a 	mov	r5,fp
    5000:	00060880 	call	6088 <memmove>
    5004:	80c00217 	ldw	r3,8(r16)
    5008:	81000017 	ldw	r4,0(r16)
    500c:	9005883a 	mov	r2,r18
    5010:	1ce7c83a 	sub	r19,r3,r19
    5014:	25cf883a 	add	r7,r4,r23
    5018:	84c00215 	stw	r19,8(r16)
    501c:	81c00015 	stw	r7,0(r16)
    5020:	a0c00217 	ldw	r3,8(r20)
    5024:	e0b9883a 	add	fp,fp,r2
    5028:	90a5c83a 	sub	r18,r18,r2
    502c:	18a7c83a 	sub	r19,r3,r2
    5030:	a4c00215 	stw	r19,8(r20)
    5034:	983fce26 	beq	r19,zero,4f70 <__sfvwrite_r+0xb4>
    5038:	80c0030b 	ldhu	r3,12(r16)
    503c:	903fe61e 	bne	r18,zero,4fd8 <__sfvwrite_r+0x11c>
    5040:	8f000017 	ldw	fp,0(r17)
    5044:	8c800117 	ldw	r18,4(r17)
    5048:	8c400204 	addi	r17,r17,8
    504c:	003fe106 	br	4fd4 <__sfvwrite_r+0x118>
    5050:	8cc00017 	ldw	r19,0(r17)
    5054:	8c800117 	ldw	r18,4(r17)
    5058:	8c400204 	addi	r17,r17,8
    505c:	003fb306 	br	4f2c <__sfvwrite_r+0x70>
    5060:	0005883a 	mov	r2,zero
    5064:	f800283a 	ret
    5068:	81000017 	ldw	r4,0(r16)
    506c:	80800417 	ldw	r2,16(r16)
    5070:	11005736 	bltu	r2,r4,51d0 <__sfvwrite_r+0x314>
    5074:	85c00517 	ldw	r23,20(r16)
    5078:	95c05536 	bltu	r18,r23,51d0 <__sfvwrite_r+0x314>
    507c:	00a00034 	movhi	r2,32768
    5080:	10bfffc4 	addi	r2,r2,-1
    5084:	9009883a 	mov	r4,r18
    5088:	1480012e 	bgeu	r2,r18,5090 <__sfvwrite_r+0x1d4>
    508c:	1009883a 	mov	r4,r2
    5090:	b80b883a 	mov	r5,r23
    5094:	000a5780 	call	a578 <__divsi3>
    5098:	15cf383a 	mul	r7,r2,r23
    509c:	81400717 	ldw	r5,28(r16)
    50a0:	80800917 	ldw	r2,36(r16)
    50a4:	e00d883a 	mov	r6,fp
    50a8:	a809883a 	mov	r4,r21
    50ac:	103ee83a 	callr	r2
    50b0:	00bfdb16 	blt	zero,r2,5020 <__sfvwrite_r+0x164>
    50b4:	8080030b 	ldhu	r2,12(r16)
    50b8:	10801014 	ori	r2,r2,64
    50bc:	8080030d 	sth	r2,12(r16)
    50c0:	00bfffc4 	movi	r2,-1
    50c4:	003fab06 	br	4f74 <__sfvwrite_r+0xb8>
    50c8:	0027883a 	mov	r19,zero
    50cc:	0011883a 	mov	r8,zero
    50d0:	0039883a 	mov	fp,zero
    50d4:	0025883a 	mov	r18,zero
    50d8:	90001f26 	beq	r18,zero,5158 <__sfvwrite_r+0x29c>
    50dc:	40005a26 	beq	r8,zero,5248 <__sfvwrite_r+0x38c>
    50e0:	982d883a 	mov	r22,r19
    50e4:	94c0012e 	bgeu	r18,r19,50ec <__sfvwrite_r+0x230>
    50e8:	902d883a 	mov	r22,r18
    50ec:	81000017 	ldw	r4,0(r16)
    50f0:	80800417 	ldw	r2,16(r16)
    50f4:	b02f883a 	mov	r23,r22
    50f8:	81c00517 	ldw	r7,20(r16)
    50fc:	1100032e 	bgeu	r2,r4,510c <__sfvwrite_r+0x250>
    5100:	80c00217 	ldw	r3,8(r16)
    5104:	38c7883a 	add	r3,r7,r3
    5108:	1d801816 	blt	r3,r22,516c <__sfvwrite_r+0x2b0>
    510c:	b1c03e16 	blt	r22,r7,5208 <__sfvwrite_r+0x34c>
    5110:	80800917 	ldw	r2,36(r16)
    5114:	81400717 	ldw	r5,28(r16)
    5118:	e00d883a 	mov	r6,fp
    511c:	da000115 	stw	r8,4(sp)
    5120:	a809883a 	mov	r4,r21
    5124:	103ee83a 	callr	r2
    5128:	102f883a 	mov	r23,r2
    512c:	da000117 	ldw	r8,4(sp)
    5130:	00bfe00e 	bge	zero,r2,50b4 <__sfvwrite_r+0x1f8>
    5134:	9de7c83a 	sub	r19,r19,r23
    5138:	98001f26 	beq	r19,zero,51b8 <__sfvwrite_r+0x2fc>
    513c:	a0800217 	ldw	r2,8(r20)
    5140:	e5f9883a 	add	fp,fp,r23
    5144:	95e5c83a 	sub	r18,r18,r23
    5148:	15efc83a 	sub	r23,r2,r23
    514c:	a5c00215 	stw	r23,8(r20)
    5150:	b83f8726 	beq	r23,zero,4f70 <__sfvwrite_r+0xb4>
    5154:	903fe11e 	bne	r18,zero,50dc <__sfvwrite_r+0x220>
    5158:	8f000017 	ldw	fp,0(r17)
    515c:	8c800117 	ldw	r18,4(r17)
    5160:	0011883a 	mov	r8,zero
    5164:	8c400204 	addi	r17,r17,8
    5168:	003fdb06 	br	50d8 <__sfvwrite_r+0x21c>
    516c:	180d883a 	mov	r6,r3
    5170:	e00b883a 	mov	r5,fp
    5174:	da000115 	stw	r8,4(sp)
    5178:	d8c00015 	stw	r3,0(sp)
    517c:	00060880 	call	6088 <memmove>
    5180:	d8c00017 	ldw	r3,0(sp)
    5184:	80800017 	ldw	r2,0(r16)
    5188:	800b883a 	mov	r5,r16
    518c:	a809883a 	mov	r4,r21
    5190:	10c5883a 	add	r2,r2,r3
    5194:	80800015 	stw	r2,0(r16)
    5198:	d8c00015 	stw	r3,0(sp)
    519c:	000465c0 	call	465c <_fflush_r>
    51a0:	d8c00017 	ldw	r3,0(sp)
    51a4:	da000117 	ldw	r8,4(sp)
    51a8:	103fc21e 	bne	r2,zero,50b4 <__sfvwrite_r+0x1f8>
    51ac:	182f883a 	mov	r23,r3
    51b0:	9de7c83a 	sub	r19,r19,r23
    51b4:	983fe11e 	bne	r19,zero,513c <__sfvwrite_r+0x280>
    51b8:	800b883a 	mov	r5,r16
    51bc:	a809883a 	mov	r4,r21
    51c0:	000465c0 	call	465c <_fflush_r>
    51c4:	103fbb1e 	bne	r2,zero,50b4 <__sfvwrite_r+0x1f8>
    51c8:	0011883a 	mov	r8,zero
    51cc:	003fdb06 	br	513c <__sfvwrite_r+0x280>
    51d0:	94c0012e 	bgeu	r18,r19,51d8 <__sfvwrite_r+0x31c>
    51d4:	9027883a 	mov	r19,r18
    51d8:	980d883a 	mov	r6,r19
    51dc:	e00b883a 	mov	r5,fp
    51e0:	00060880 	call	6088 <memmove>
    51e4:	80800217 	ldw	r2,8(r16)
    51e8:	80c00017 	ldw	r3,0(r16)
    51ec:	14c5c83a 	sub	r2,r2,r19
    51f0:	1cc7883a 	add	r3,r3,r19
    51f4:	80800215 	stw	r2,8(r16)
    51f8:	80c00015 	stw	r3,0(r16)
    51fc:	10004326 	beq	r2,zero,530c <__sfvwrite_r+0x450>
    5200:	9805883a 	mov	r2,r19
    5204:	003f8606 	br	5020 <__sfvwrite_r+0x164>
    5208:	b00d883a 	mov	r6,r22
    520c:	e00b883a 	mov	r5,fp
    5210:	da000115 	stw	r8,4(sp)
    5214:	00060880 	call	6088 <memmove>
    5218:	80800217 	ldw	r2,8(r16)
    521c:	80c00017 	ldw	r3,0(r16)
    5220:	da000117 	ldw	r8,4(sp)
    5224:	1585c83a 	sub	r2,r2,r22
    5228:	1dad883a 	add	r22,r3,r22
    522c:	80800215 	stw	r2,8(r16)
    5230:	85800015 	stw	r22,0(r16)
    5234:	003fbf06 	br	5134 <__sfvwrite_r+0x278>
    5238:	81000017 	ldw	r4,0(r16)
    523c:	9027883a 	mov	r19,r18
    5240:	902f883a 	mov	r23,r18
    5244:	003f6c06 	br	4ff8 <__sfvwrite_r+0x13c>
    5248:	900d883a 	mov	r6,r18
    524c:	01400284 	movi	r5,10
    5250:	e009883a 	mov	r4,fp
    5254:	0005fa40 	call	5fa4 <memchr>
    5258:	10003e26 	beq	r2,zero,5354 <__sfvwrite_r+0x498>
    525c:	10800044 	addi	r2,r2,1
    5260:	1727c83a 	sub	r19,r2,fp
    5264:	02000044 	movi	r8,1
    5268:	003f9d06 	br	50e0 <__sfvwrite_r+0x224>
    526c:	80800517 	ldw	r2,20(r16)
    5270:	81400417 	ldw	r5,16(r16)
    5274:	81c00017 	ldw	r7,0(r16)
    5278:	10a7883a 	add	r19,r2,r2
    527c:	9885883a 	add	r2,r19,r2
    5280:	1026d7fa 	srli	r19,r2,31
    5284:	396dc83a 	sub	r22,r7,r5
    5288:	b1000044 	addi	r4,r22,1
    528c:	9885883a 	add	r2,r19,r2
    5290:	1027d07a 	srai	r19,r2,1
    5294:	2485883a 	add	r2,r4,r18
    5298:	980d883a 	mov	r6,r19
    529c:	9880022e 	bgeu	r19,r2,52a8 <__sfvwrite_r+0x3ec>
    52a0:	1027883a 	mov	r19,r2
    52a4:	100d883a 	mov	r6,r2
    52a8:	18c1000c 	andi	r3,r3,1024
    52ac:	18001c26 	beq	r3,zero,5320 <__sfvwrite_r+0x464>
    52b0:	300b883a 	mov	r5,r6
    52b4:	a809883a 	mov	r4,r21
    52b8:	00057980 	call	5798 <_malloc_r>
    52bc:	102f883a 	mov	r23,r2
    52c0:	10002926 	beq	r2,zero,5368 <__sfvwrite_r+0x4ac>
    52c4:	81400417 	ldw	r5,16(r16)
    52c8:	b00d883a 	mov	r6,r22
    52cc:	1009883a 	mov	r4,r2
    52d0:	00004740 	call	474 <memcpy>
    52d4:	8080030b 	ldhu	r2,12(r16)
    52d8:	00fedfc4 	movi	r3,-1153
    52dc:	10c4703a 	and	r2,r2,r3
    52e0:	10802014 	ori	r2,r2,128
    52e4:	8080030d 	sth	r2,12(r16)
    52e8:	bd89883a 	add	r4,r23,r22
    52ec:	9d8fc83a 	sub	r7,r19,r22
    52f0:	85c00415 	stw	r23,16(r16)
    52f4:	84c00515 	stw	r19,20(r16)
    52f8:	81000015 	stw	r4,0(r16)
    52fc:	9027883a 	mov	r19,r18
    5300:	81c00215 	stw	r7,8(r16)
    5304:	902f883a 	mov	r23,r18
    5308:	003f3b06 	br	4ff8 <__sfvwrite_r+0x13c>
    530c:	800b883a 	mov	r5,r16
    5310:	a809883a 	mov	r4,r21
    5314:	000465c0 	call	465c <_fflush_r>
    5318:	103fb926 	beq	r2,zero,5200 <__sfvwrite_r+0x344>
    531c:	003f6506 	br	50b4 <__sfvwrite_r+0x1f8>
    5320:	a809883a 	mov	r4,r21
    5324:	00073080 	call	7308 <_realloc_r>
    5328:	102f883a 	mov	r23,r2
    532c:	103fee1e 	bne	r2,zero,52e8 <__sfvwrite_r+0x42c>
    5330:	81400417 	ldw	r5,16(r16)
    5334:	a809883a 	mov	r4,r21
    5338:	0004bac0 	call	4bac <_free_r>
    533c:	8080030b 	ldhu	r2,12(r16)
    5340:	00ffdfc4 	movi	r3,-129
    5344:	1884703a 	and	r2,r3,r2
    5348:	00c00304 	movi	r3,12
    534c:	a8c00015 	stw	r3,0(r21)
    5350:	003f5906 	br	50b8 <__sfvwrite_r+0x1fc>
    5354:	94c00044 	addi	r19,r18,1
    5358:	02000044 	movi	r8,1
    535c:	003f6006 	br	50e0 <__sfvwrite_r+0x224>
    5360:	00bfffc4 	movi	r2,-1
    5364:	003f0306 	br	4f74 <__sfvwrite_r+0xb8>
    5368:	00800304 	movi	r2,12
    536c:	a8800015 	stw	r2,0(r21)
    5370:	8080030b 	ldhu	r2,12(r16)
    5374:	003f5006 	br	50b8 <__sfvwrite_r+0x1fc>

00005378 <_fwalk>:
    5378:	defff704 	addi	sp,sp,-36
    537c:	dd000415 	stw	r20,16(sp)
    5380:	dfc00815 	stw	ra,32(sp)
    5384:	ddc00715 	stw	r23,28(sp)
    5388:	dd800615 	stw	r22,24(sp)
    538c:	dd400515 	stw	r21,20(sp)
    5390:	dcc00315 	stw	r19,12(sp)
    5394:	dc800215 	stw	r18,8(sp)
    5398:	dc400115 	stw	r17,4(sp)
    539c:	dc000015 	stw	r16,0(sp)
    53a0:	2500b804 	addi	r20,r4,736
    53a4:	a0002326 	beq	r20,zero,5434 <_fwalk+0xbc>
    53a8:	282b883a 	mov	r21,r5
    53ac:	002f883a 	mov	r23,zero
    53b0:	05800044 	movi	r22,1
    53b4:	04ffffc4 	movi	r19,-1
    53b8:	a4400117 	ldw	r17,4(r20)
    53bc:	a4800217 	ldw	r18,8(r20)
    53c0:	8c7fffc4 	addi	r17,r17,-1
    53c4:	88000d16 	blt	r17,zero,53fc <_fwalk+0x84>
    53c8:	94000304 	addi	r16,r18,12
    53cc:	94800384 	addi	r18,r18,14
    53d0:	8080000b 	ldhu	r2,0(r16)
    53d4:	8c7fffc4 	addi	r17,r17,-1
    53d8:	813ffd04 	addi	r4,r16,-12
    53dc:	b080042e 	bgeu	r22,r2,53f0 <_fwalk+0x78>
    53e0:	9080000f 	ldh	r2,0(r18)
    53e4:	14c00226 	beq	r2,r19,53f0 <_fwalk+0x78>
    53e8:	a83ee83a 	callr	r21
    53ec:	b8aeb03a 	or	r23,r23,r2
    53f0:	84001a04 	addi	r16,r16,104
    53f4:	94801a04 	addi	r18,r18,104
    53f8:	8cfff51e 	bne	r17,r19,53d0 <_fwalk+0x58>
    53fc:	a5000017 	ldw	r20,0(r20)
    5400:	a03fed1e 	bne	r20,zero,53b8 <_fwalk+0x40>
    5404:	b805883a 	mov	r2,r23
    5408:	dfc00817 	ldw	ra,32(sp)
    540c:	ddc00717 	ldw	r23,28(sp)
    5410:	dd800617 	ldw	r22,24(sp)
    5414:	dd400517 	ldw	r21,20(sp)
    5418:	dd000417 	ldw	r20,16(sp)
    541c:	dcc00317 	ldw	r19,12(sp)
    5420:	dc800217 	ldw	r18,8(sp)
    5424:	dc400117 	ldw	r17,4(sp)
    5428:	dc000017 	ldw	r16,0(sp)
    542c:	dec00904 	addi	sp,sp,36
    5430:	f800283a 	ret
    5434:	002f883a 	mov	r23,zero
    5438:	003ff206 	br	5404 <_fwalk+0x8c>

0000543c <_fwalk_reent>:
    543c:	defff704 	addi	sp,sp,-36
    5440:	dd000415 	stw	r20,16(sp)
    5444:	dfc00815 	stw	ra,32(sp)
    5448:	ddc00715 	stw	r23,28(sp)
    544c:	dd800615 	stw	r22,24(sp)
    5450:	dd400515 	stw	r21,20(sp)
    5454:	dcc00315 	stw	r19,12(sp)
    5458:	dc800215 	stw	r18,8(sp)
    545c:	dc400115 	stw	r17,4(sp)
    5460:	dc000015 	stw	r16,0(sp)
    5464:	2500b804 	addi	r20,r4,736
    5468:	a0002326 	beq	r20,zero,54f8 <_fwalk_reent+0xbc>
    546c:	282b883a 	mov	r21,r5
    5470:	2027883a 	mov	r19,r4
    5474:	002f883a 	mov	r23,zero
    5478:	05800044 	movi	r22,1
    547c:	04bfffc4 	movi	r18,-1
    5480:	a4400117 	ldw	r17,4(r20)
    5484:	a4000217 	ldw	r16,8(r20)
    5488:	8c7fffc4 	addi	r17,r17,-1
    548c:	88000c16 	blt	r17,zero,54c0 <_fwalk_reent+0x84>
    5490:	84000304 	addi	r16,r16,12
    5494:	8080000b 	ldhu	r2,0(r16)
    5498:	8c7fffc4 	addi	r17,r17,-1
    549c:	817ffd04 	addi	r5,r16,-12
    54a0:	b080052e 	bgeu	r22,r2,54b8 <_fwalk_reent+0x7c>
    54a4:	8080008f 	ldh	r2,2(r16)
    54a8:	9809883a 	mov	r4,r19
    54ac:	14800226 	beq	r2,r18,54b8 <_fwalk_reent+0x7c>
    54b0:	a83ee83a 	callr	r21
    54b4:	b8aeb03a 	or	r23,r23,r2
    54b8:	84001a04 	addi	r16,r16,104
    54bc:	8cbff51e 	bne	r17,r18,5494 <_fwalk_reent+0x58>
    54c0:	a5000017 	ldw	r20,0(r20)
    54c4:	a03fee1e 	bne	r20,zero,5480 <_fwalk_reent+0x44>
    54c8:	b805883a 	mov	r2,r23
    54cc:	dfc00817 	ldw	ra,32(sp)
    54d0:	ddc00717 	ldw	r23,28(sp)
    54d4:	dd800617 	ldw	r22,24(sp)
    54d8:	dd400517 	ldw	r21,20(sp)
    54dc:	dd000417 	ldw	r20,16(sp)
    54e0:	dcc00317 	ldw	r19,12(sp)
    54e4:	dc800217 	ldw	r18,8(sp)
    54e8:	dc400117 	ldw	r17,4(sp)
    54ec:	dc000017 	ldw	r16,0(sp)
    54f0:	dec00904 	addi	sp,sp,36
    54f4:	f800283a 	ret
    54f8:	002f883a 	mov	r23,zero
    54fc:	003ff206 	br	54c8 <_fwalk_reent+0x8c>

00005500 <_setlocale_r>:
    5500:	30001b26 	beq	r6,zero,5570 <_setlocale_r+0x70>
    5504:	01400074 	movhi	r5,1
    5508:	defffe04 	addi	sp,sp,-8
    550c:	297d7e04 	addi	r5,r5,-2568
    5510:	3009883a 	mov	r4,r6
    5514:	dc000015 	stw	r16,0(sp)
    5518:	dfc00115 	stw	ra,4(sp)
    551c:	3021883a 	mov	r16,r6
    5520:	0007a700 	call	7a70 <strcmp>
    5524:	1000061e 	bne	r2,zero,5540 <_setlocale_r+0x40>
    5528:	00800074 	movhi	r2,1
    552c:	10bd7d04 	addi	r2,r2,-2572
    5530:	dfc00117 	ldw	ra,4(sp)
    5534:	dc000017 	ldw	r16,0(sp)
    5538:	dec00204 	addi	sp,sp,8
    553c:	f800283a 	ret
    5540:	01400074 	movhi	r5,1
    5544:	297d7d04 	addi	r5,r5,-2572
    5548:	8009883a 	mov	r4,r16
    554c:	0007a700 	call	7a70 <strcmp>
    5550:	103ff526 	beq	r2,zero,5528 <_setlocale_r+0x28>
    5554:	01400074 	movhi	r5,1
    5558:	297d6804 	addi	r5,r5,-2656
    555c:	8009883a 	mov	r4,r16
    5560:	0007a700 	call	7a70 <strcmp>
    5564:	103ff026 	beq	r2,zero,5528 <_setlocale_r+0x28>
    5568:	0005883a 	mov	r2,zero
    556c:	003ff006 	br	5530 <_setlocale_r+0x30>
    5570:	00800074 	movhi	r2,1
    5574:	10bd7d04 	addi	r2,r2,-2572
    5578:	f800283a 	ret

0000557c <__locale_charset>:
    557c:	00800074 	movhi	r2,1
    5580:	10bf2e04 	addi	r2,r2,-840
    5584:	f800283a 	ret

00005588 <__locale_mb_cur_max>:
    5588:	00800074 	movhi	r2,1
    558c:	1084ca04 	addi	r2,r2,4904
    5590:	10800017 	ldw	r2,0(r2)
    5594:	f800283a 	ret

00005598 <__locale_msgcharset>:
    5598:	00800074 	movhi	r2,1
    559c:	10bf2604 	addi	r2,r2,-872
    55a0:	f800283a 	ret

000055a4 <__locale_cjk_lang>:
    55a4:	0005883a 	mov	r2,zero
    55a8:	f800283a 	ret

000055ac <_localeconv_r>:
    55ac:	00800074 	movhi	r2,1
    55b0:	10bf3604 	addi	r2,r2,-808
    55b4:	f800283a 	ret

000055b8 <setlocale>:
    55b8:	00800074 	movhi	r2,1
    55bc:	1084c904 	addi	r2,r2,4900
    55c0:	280d883a 	mov	r6,r5
    55c4:	200b883a 	mov	r5,r4
    55c8:	11000017 	ldw	r4,0(r2)
    55cc:	00055001 	jmpi	5500 <_setlocale_r>

000055d0 <localeconv>:
    55d0:	00800074 	movhi	r2,1
    55d4:	10bf3604 	addi	r2,r2,-808
    55d8:	f800283a 	ret

000055dc <__smakebuf_r>:
    55dc:	2880030b 	ldhu	r2,12(r5)
    55e0:	10c0008c 	andi	r3,r2,2
    55e4:	1800411e 	bne	r3,zero,56ec <__smakebuf_r+0x110>
    55e8:	deffec04 	addi	sp,sp,-80
    55ec:	dc000f15 	stw	r16,60(sp)
    55f0:	2821883a 	mov	r16,r5
    55f4:	2940038f 	ldh	r5,14(r5)
    55f8:	dc401015 	stw	r17,64(sp)
    55fc:	dfc01315 	stw	ra,76(sp)
    5600:	dcc01215 	stw	r19,72(sp)
    5604:	dc801115 	stw	r18,68(sp)
    5608:	2023883a 	mov	r17,r4
    560c:	28001c16 	blt	r5,zero,5680 <__smakebuf_r+0xa4>
    5610:	d80d883a 	mov	r6,sp
    5614:	00096180 	call	9618 <_fstat_r>
    5618:	10001816 	blt	r2,zero,567c <__smakebuf_r+0xa0>
    561c:	d8800117 	ldw	r2,4(sp)
    5620:	00e00014 	movui	r3,32768
    5624:	10bc000c 	andi	r2,r2,61440
    5628:	14c80020 	cmpeqi	r19,r2,8192
    562c:	10c03726 	beq	r2,r3,570c <__smakebuf_r+0x130>
    5630:	80c0030b 	ldhu	r3,12(r16)
    5634:	18c20014 	ori	r3,r3,2048
    5638:	80c0030d 	sth	r3,12(r16)
    563c:	00c80004 	movi	r3,8192
    5640:	10c0521e 	bne	r2,r3,578c <__smakebuf_r+0x1b0>
    5644:	8140038f 	ldh	r5,14(r16)
    5648:	8809883a 	mov	r4,r17
    564c:	00096740 	call	9674 <_isatty_r>
    5650:	10004c26 	beq	r2,zero,5784 <__smakebuf_r+0x1a8>
    5654:	8080030b 	ldhu	r2,12(r16)
    5658:	80c010c4 	addi	r3,r16,67
    565c:	80c00015 	stw	r3,0(r16)
    5660:	10800054 	ori	r2,r2,1
    5664:	8080030d 	sth	r2,12(r16)
    5668:	00800044 	movi	r2,1
    566c:	80c00415 	stw	r3,16(r16)
    5670:	80800515 	stw	r2,20(r16)
    5674:	04810004 	movi	r18,1024
    5678:	00000706 	br	5698 <__smakebuf_r+0xbc>
    567c:	8080030b 	ldhu	r2,12(r16)
    5680:	10c0200c 	andi	r3,r2,128
    5684:	18001f1e 	bne	r3,zero,5704 <__smakebuf_r+0x128>
    5688:	04810004 	movi	r18,1024
    568c:	10820014 	ori	r2,r2,2048
    5690:	8080030d 	sth	r2,12(r16)
    5694:	0027883a 	mov	r19,zero
    5698:	900b883a 	mov	r5,r18
    569c:	8809883a 	mov	r4,r17
    56a0:	00057980 	call	5798 <_malloc_r>
    56a4:	10002c26 	beq	r2,zero,5758 <__smakebuf_r+0x17c>
    56a8:	80c0030b 	ldhu	r3,12(r16)
    56ac:	01000034 	movhi	r4,0
    56b0:	2111bc04 	addi	r4,r4,18160
    56b4:	89000f15 	stw	r4,60(r17)
    56b8:	18c02014 	ori	r3,r3,128
    56bc:	80c0030d 	sth	r3,12(r16)
    56c0:	80800015 	stw	r2,0(r16)
    56c4:	80800415 	stw	r2,16(r16)
    56c8:	84800515 	stw	r18,20(r16)
    56cc:	98001a1e 	bne	r19,zero,5738 <__smakebuf_r+0x15c>
    56d0:	dfc01317 	ldw	ra,76(sp)
    56d4:	dcc01217 	ldw	r19,72(sp)
    56d8:	dc801117 	ldw	r18,68(sp)
    56dc:	dc401017 	ldw	r17,64(sp)
    56e0:	dc000f17 	ldw	r16,60(sp)
    56e4:	dec01404 	addi	sp,sp,80
    56e8:	f800283a 	ret
    56ec:	288010c4 	addi	r2,r5,67
    56f0:	28800015 	stw	r2,0(r5)
    56f4:	28800415 	stw	r2,16(r5)
    56f8:	00800044 	movi	r2,1
    56fc:	28800515 	stw	r2,20(r5)
    5700:	f800283a 	ret
    5704:	04801004 	movi	r18,64
    5708:	003fe006 	br	568c <__smakebuf_r+0xb0>
    570c:	81000a17 	ldw	r4,40(r16)
    5710:	00c00034 	movhi	r3,0
    5714:	18de8304 	addi	r3,r3,31244
    5718:	20ffc51e 	bne	r4,r3,5630 <__smakebuf_r+0x54>
    571c:	8080030b 	ldhu	r2,12(r16)
    5720:	04810004 	movi	r18,1024
    5724:	84801315 	stw	r18,76(r16)
    5728:	1484b03a 	or	r2,r2,r18
    572c:	8080030d 	sth	r2,12(r16)
    5730:	0027883a 	mov	r19,zero
    5734:	003fd806 	br	5698 <__smakebuf_r+0xbc>
    5738:	8140038f 	ldh	r5,14(r16)
    573c:	8809883a 	mov	r4,r17
    5740:	00096740 	call	9674 <_isatty_r>
    5744:	103fe226 	beq	r2,zero,56d0 <__smakebuf_r+0xf4>
    5748:	8080030b 	ldhu	r2,12(r16)
    574c:	10800054 	ori	r2,r2,1
    5750:	8080030d 	sth	r2,12(r16)
    5754:	003fde06 	br	56d0 <__smakebuf_r+0xf4>
    5758:	8080030b 	ldhu	r2,12(r16)
    575c:	10c0800c 	andi	r3,r2,512
    5760:	183fdb1e 	bne	r3,zero,56d0 <__smakebuf_r+0xf4>
    5764:	10800094 	ori	r2,r2,2
    5768:	80c010c4 	addi	r3,r16,67
    576c:	8080030d 	sth	r2,12(r16)
    5770:	00800044 	movi	r2,1
    5774:	80c00015 	stw	r3,0(r16)
    5778:	80c00415 	stw	r3,16(r16)
    577c:	80800515 	stw	r2,20(r16)
    5780:	003fd306 	br	56d0 <__smakebuf_r+0xf4>
    5784:	04810004 	movi	r18,1024
    5788:	003fc306 	br	5698 <__smakebuf_r+0xbc>
    578c:	0027883a 	mov	r19,zero
    5790:	04810004 	movi	r18,1024
    5794:	003fc006 	br	5698 <__smakebuf_r+0xbc>

00005798 <_malloc_r>:
    5798:	defff504 	addi	sp,sp,-44
    579c:	dc800315 	stw	r18,12(sp)
    57a0:	dfc00a15 	stw	ra,40(sp)
    57a4:	df000915 	stw	fp,36(sp)
    57a8:	ddc00815 	stw	r23,32(sp)
    57ac:	dd800715 	stw	r22,28(sp)
    57b0:	dd400615 	stw	r21,24(sp)
    57b4:	dd000515 	stw	r20,20(sp)
    57b8:	dcc00415 	stw	r19,16(sp)
    57bc:	dc400215 	stw	r17,8(sp)
    57c0:	dc000115 	stw	r16,4(sp)
    57c4:	288002c4 	addi	r2,r5,11
    57c8:	00c00584 	movi	r3,22
    57cc:	2025883a 	mov	r18,r4
    57d0:	18807f2e 	bgeu	r3,r2,59d0 <_malloc_r+0x238>
    57d4:	047ffe04 	movi	r17,-8
    57d8:	1462703a 	and	r17,r2,r17
    57dc:	8800a316 	blt	r17,zero,5a6c <_malloc_r+0x2d4>
    57e0:	8940a236 	bltu	r17,r5,5a6c <_malloc_r+0x2d4>
    57e4:	000d3580 	call	d358 <__malloc_lock>
    57e8:	00807dc4 	movi	r2,503
    57ec:	1441e92e 	bgeu	r2,r17,5f94 <_malloc_r+0x7fc>
    57f0:	8804d27a 	srli	r2,r17,9
    57f4:	1000a126 	beq	r2,zero,5a7c <_malloc_r+0x2e4>
    57f8:	00c00104 	movi	r3,4
    57fc:	18811e36 	bltu	r3,r2,5c78 <_malloc_r+0x4e0>
    5800:	8804d1ba 	srli	r2,r17,6
    5804:	12000e44 	addi	r8,r2,57
    5808:	11c00e04 	addi	r7,r2,56
    580c:	4209883a 	add	r4,r8,r8
    5810:	04c00074 	movhi	r19,1
    5814:	2109883a 	add	r4,r4,r4
    5818:	9cff4404 	addi	r19,r19,-752
    581c:	2109883a 	add	r4,r4,r4
    5820:	9909883a 	add	r4,r19,r4
    5824:	24000117 	ldw	r16,4(r4)
    5828:	213ffe04 	addi	r4,r4,-8
    582c:	24009726 	beq	r4,r16,5a8c <_malloc_r+0x2f4>
    5830:	80800117 	ldw	r2,4(r16)
    5834:	01bfff04 	movi	r6,-4
    5838:	014003c4 	movi	r5,15
    583c:	1184703a 	and	r2,r2,r6
    5840:	1447c83a 	sub	r3,r2,r17
    5844:	28c00716 	blt	r5,r3,5864 <_malloc_r+0xcc>
    5848:	1800920e 	bge	r3,zero,5a94 <_malloc_r+0x2fc>
    584c:	84000317 	ldw	r16,12(r16)
    5850:	24008e26 	beq	r4,r16,5a8c <_malloc_r+0x2f4>
    5854:	80800117 	ldw	r2,4(r16)
    5858:	1184703a 	and	r2,r2,r6
    585c:	1447c83a 	sub	r3,r2,r17
    5860:	28fff90e 	bge	r5,r3,5848 <_malloc_r+0xb0>
    5864:	3809883a 	mov	r4,r7
    5868:	01800074 	movhi	r6,1
    586c:	9c000417 	ldw	r16,16(r19)
    5870:	31bf4404 	addi	r6,r6,-752
    5874:	32000204 	addi	r8,r6,8
    5878:	82013426 	beq	r16,r8,5d4c <_malloc_r+0x5b4>
    587c:	80c00117 	ldw	r3,4(r16)
    5880:	00bfff04 	movi	r2,-4
    5884:	188e703a 	and	r7,r3,r2
    5888:	3c45c83a 	sub	r2,r7,r17
    588c:	00c003c4 	movi	r3,15
    5890:	18811f16 	blt	r3,r2,5d10 <_malloc_r+0x578>
    5894:	32000515 	stw	r8,20(r6)
    5898:	32000415 	stw	r8,16(r6)
    589c:	10007f0e 	bge	r2,zero,5a9c <_malloc_r+0x304>
    58a0:	00807fc4 	movi	r2,511
    58a4:	11c0fd36 	bltu	r2,r7,5c9c <_malloc_r+0x504>
    58a8:	3806d0fa 	srli	r3,r7,3
    58ac:	01c00044 	movi	r7,1
    58b0:	30800117 	ldw	r2,4(r6)
    58b4:	19400044 	addi	r5,r3,1
    58b8:	294b883a 	add	r5,r5,r5
    58bc:	1807d0ba 	srai	r3,r3,2
    58c0:	294b883a 	add	r5,r5,r5
    58c4:	294b883a 	add	r5,r5,r5
    58c8:	298b883a 	add	r5,r5,r6
    58cc:	38c6983a 	sll	r3,r7,r3
    58d0:	29c00017 	ldw	r7,0(r5)
    58d4:	2a7ffe04 	addi	r9,r5,-8
    58d8:	1886b03a 	or	r3,r3,r2
    58dc:	82400315 	stw	r9,12(r16)
    58e0:	81c00215 	stw	r7,8(r16)
    58e4:	30c00115 	stw	r3,4(r6)
    58e8:	2c000015 	stw	r16,0(r5)
    58ec:	3c000315 	stw	r16,12(r7)
    58f0:	2005d0ba 	srai	r2,r4,2
    58f4:	01400044 	movi	r5,1
    58f8:	288a983a 	sll	r5,r5,r2
    58fc:	19406f36 	bltu	r3,r5,5abc <_malloc_r+0x324>
    5900:	28c4703a 	and	r2,r5,r3
    5904:	10000a1e 	bne	r2,zero,5930 <_malloc_r+0x198>
    5908:	00bfff04 	movi	r2,-4
    590c:	294b883a 	add	r5,r5,r5
    5910:	2088703a 	and	r4,r4,r2
    5914:	28c4703a 	and	r2,r5,r3
    5918:	21000104 	addi	r4,r4,4
    591c:	1000041e 	bne	r2,zero,5930 <_malloc_r+0x198>
    5920:	294b883a 	add	r5,r5,r5
    5924:	28c4703a 	and	r2,r5,r3
    5928:	21000104 	addi	r4,r4,4
    592c:	103ffc26 	beq	r2,zero,5920 <_malloc_r+0x188>
    5930:	02bfff04 	movi	r10,-4
    5934:	024003c4 	movi	r9,15
    5938:	21800044 	addi	r6,r4,1
    593c:	318d883a 	add	r6,r6,r6
    5940:	318d883a 	add	r6,r6,r6
    5944:	318d883a 	add	r6,r6,r6
    5948:	998d883a 	add	r6,r19,r6
    594c:	333ffe04 	addi	r12,r6,-8
    5950:	2017883a 	mov	r11,r4
    5954:	31800104 	addi	r6,r6,4
    5958:	34000017 	ldw	r16,0(r6)
    595c:	31fffd04 	addi	r7,r6,-12
    5960:	81c0041e 	bne	r16,r7,5974 <_malloc_r+0x1dc>
    5964:	0000fb06 	br	5d54 <_malloc_r+0x5bc>
    5968:	1801030e 	bge	r3,zero,5d78 <_malloc_r+0x5e0>
    596c:	84000317 	ldw	r16,12(r16)
    5970:	81c0f826 	beq	r16,r7,5d54 <_malloc_r+0x5bc>
    5974:	80800117 	ldw	r2,4(r16)
    5978:	1284703a 	and	r2,r2,r10
    597c:	1447c83a 	sub	r3,r2,r17
    5980:	48fff90e 	bge	r9,r3,5968 <_malloc_r+0x1d0>
    5984:	80800317 	ldw	r2,12(r16)
    5988:	81000217 	ldw	r4,8(r16)
    598c:	89400054 	ori	r5,r17,1
    5990:	81400115 	stw	r5,4(r16)
    5994:	20800315 	stw	r2,12(r4)
    5998:	11000215 	stw	r4,8(r2)
    599c:	8463883a 	add	r17,r16,r17
    59a0:	9c400515 	stw	r17,20(r19)
    59a4:	9c400415 	stw	r17,16(r19)
    59a8:	18800054 	ori	r2,r3,1
    59ac:	88800115 	stw	r2,4(r17)
    59b0:	8a000315 	stw	r8,12(r17)
    59b4:	8a000215 	stw	r8,8(r17)
    59b8:	88e3883a 	add	r17,r17,r3
    59bc:	88c00015 	stw	r3,0(r17)
    59c0:	9009883a 	mov	r4,r18
    59c4:	000d37c0 	call	d37c <__malloc_unlock>
    59c8:	80800204 	addi	r2,r16,8
    59cc:	00001b06 	br	5a3c <_malloc_r+0x2a4>
    59d0:	04400404 	movi	r17,16
    59d4:	89402536 	bltu	r17,r5,5a6c <_malloc_r+0x2d4>
    59d8:	000d3580 	call	d358 <__malloc_lock>
    59dc:	00800184 	movi	r2,6
    59e0:	01000084 	movi	r4,2
    59e4:	04c00074 	movhi	r19,1
    59e8:	1085883a 	add	r2,r2,r2
    59ec:	9cff4404 	addi	r19,r19,-752
    59f0:	1085883a 	add	r2,r2,r2
    59f4:	9885883a 	add	r2,r19,r2
    59f8:	14000117 	ldw	r16,4(r2)
    59fc:	10fffe04 	addi	r3,r2,-8
    5a00:	80c0d926 	beq	r16,r3,5d68 <_malloc_r+0x5d0>
    5a04:	80c00117 	ldw	r3,4(r16)
    5a08:	81000317 	ldw	r4,12(r16)
    5a0c:	00bfff04 	movi	r2,-4
    5a10:	1884703a 	and	r2,r3,r2
    5a14:	81400217 	ldw	r5,8(r16)
    5a18:	8085883a 	add	r2,r16,r2
    5a1c:	10c00117 	ldw	r3,4(r2)
    5a20:	29000315 	stw	r4,12(r5)
    5a24:	21400215 	stw	r5,8(r4)
    5a28:	18c00054 	ori	r3,r3,1
    5a2c:	10c00115 	stw	r3,4(r2)
    5a30:	9009883a 	mov	r4,r18
    5a34:	000d37c0 	call	d37c <__malloc_unlock>
    5a38:	80800204 	addi	r2,r16,8
    5a3c:	dfc00a17 	ldw	ra,40(sp)
    5a40:	df000917 	ldw	fp,36(sp)
    5a44:	ddc00817 	ldw	r23,32(sp)
    5a48:	dd800717 	ldw	r22,28(sp)
    5a4c:	dd400617 	ldw	r21,24(sp)
    5a50:	dd000517 	ldw	r20,20(sp)
    5a54:	dcc00417 	ldw	r19,16(sp)
    5a58:	dc800317 	ldw	r18,12(sp)
    5a5c:	dc400217 	ldw	r17,8(sp)
    5a60:	dc000117 	ldw	r16,4(sp)
    5a64:	dec00b04 	addi	sp,sp,44
    5a68:	f800283a 	ret
    5a6c:	00800304 	movi	r2,12
    5a70:	90800015 	stw	r2,0(r18)
    5a74:	0005883a 	mov	r2,zero
    5a78:	003ff006 	br	5a3c <_malloc_r+0x2a4>
    5a7c:	01002004 	movi	r4,128
    5a80:	02001004 	movi	r8,64
    5a84:	01c00fc4 	movi	r7,63
    5a88:	003f6106 	br	5810 <_malloc_r+0x78>
    5a8c:	4009883a 	mov	r4,r8
    5a90:	003f7506 	br	5868 <_malloc_r+0xd0>
    5a94:	81000317 	ldw	r4,12(r16)
    5a98:	003fde06 	br	5a14 <_malloc_r+0x27c>
    5a9c:	81c5883a 	add	r2,r16,r7
    5aa0:	11400117 	ldw	r5,4(r2)
    5aa4:	9009883a 	mov	r4,r18
    5aa8:	29400054 	ori	r5,r5,1
    5aac:	11400115 	stw	r5,4(r2)
    5ab0:	000d37c0 	call	d37c <__malloc_unlock>
    5ab4:	80800204 	addi	r2,r16,8
    5ab8:	003fe006 	br	5a3c <_malloc_r+0x2a4>
    5abc:	9c000217 	ldw	r16,8(r19)
    5ac0:	00bfff04 	movi	r2,-4
    5ac4:	85800117 	ldw	r22,4(r16)
    5ac8:	b0ac703a 	and	r22,r22,r2
    5acc:	b4400336 	bltu	r22,r17,5adc <_malloc_r+0x344>
    5ad0:	b445c83a 	sub	r2,r22,r17
    5ad4:	00c003c4 	movi	r3,15
    5ad8:	18805d16 	blt	r3,r2,5c50 <_malloc_r+0x4b8>
    5adc:	05c00074 	movhi	r23,1
    5ae0:	00800074 	movhi	r2,1
    5ae4:	108b9804 	addi	r2,r2,11872
    5ae8:	bdc4cb04 	addi	r23,r23,4908
    5aec:	15400017 	ldw	r21,0(r2)
    5af0:	b8c00017 	ldw	r3,0(r23)
    5af4:	00bfffc4 	movi	r2,-1
    5af8:	858d883a 	add	r6,r16,r22
    5afc:	8d6b883a 	add	r21,r17,r21
    5b00:	1880ea26 	beq	r3,r2,5eac <_malloc_r+0x714>
    5b04:	ad4403c4 	addi	r21,r21,4111
    5b08:	00bc0004 	movi	r2,-4096
    5b0c:	a8aa703a 	and	r21,r21,r2
    5b10:	a80b883a 	mov	r5,r21
    5b14:	9009883a 	mov	r4,r18
    5b18:	d9800015 	stw	r6,0(sp)
    5b1c:	00078e00 	call	78e0 <_sbrk_r>
    5b20:	1029883a 	mov	r20,r2
    5b24:	00bfffc4 	movi	r2,-1
    5b28:	d9800017 	ldw	r6,0(sp)
    5b2c:	a080e826 	beq	r20,r2,5ed0 <_malloc_r+0x738>
    5b30:	a180a636 	bltu	r20,r6,5dcc <_malloc_r+0x634>
    5b34:	07000074 	movhi	fp,1
    5b38:	e70ba104 	addi	fp,fp,11908
    5b3c:	e0800017 	ldw	r2,0(fp)
    5b40:	a887883a 	add	r3,r21,r2
    5b44:	e0c00015 	stw	r3,0(fp)
    5b48:	3500e626 	beq	r6,r20,5ee4 <_malloc_r+0x74c>
    5b4c:	b9000017 	ldw	r4,0(r23)
    5b50:	00bfffc4 	movi	r2,-1
    5b54:	2080ee26 	beq	r4,r2,5f10 <_malloc_r+0x778>
    5b58:	a185c83a 	sub	r2,r20,r6
    5b5c:	10c5883a 	add	r2,r2,r3
    5b60:	e0800015 	stw	r2,0(fp)
    5b64:	a0c001cc 	andi	r3,r20,7
    5b68:	1800bc26 	beq	r3,zero,5e5c <_malloc_r+0x6c4>
    5b6c:	a0e9c83a 	sub	r20,r20,r3
    5b70:	00840204 	movi	r2,4104
    5b74:	a5000204 	addi	r20,r20,8
    5b78:	10c7c83a 	sub	r3,r2,r3
    5b7c:	a545883a 	add	r2,r20,r21
    5b80:	1083ffcc 	andi	r2,r2,4095
    5b84:	18abc83a 	sub	r21,r3,r2
    5b88:	a80b883a 	mov	r5,r21
    5b8c:	9009883a 	mov	r4,r18
    5b90:	00078e00 	call	78e0 <_sbrk_r>
    5b94:	00ffffc4 	movi	r3,-1
    5b98:	10c0e126 	beq	r2,r3,5f20 <_malloc_r+0x788>
    5b9c:	1505c83a 	sub	r2,r2,r20
    5ba0:	1545883a 	add	r2,r2,r21
    5ba4:	10800054 	ori	r2,r2,1
    5ba8:	e0c00017 	ldw	r3,0(fp)
    5bac:	9d000215 	stw	r20,8(r19)
    5bb0:	a0800115 	stw	r2,4(r20)
    5bb4:	a8c7883a 	add	r3,r21,r3
    5bb8:	e0c00015 	stw	r3,0(fp)
    5bbc:	84c00e26 	beq	r16,r19,5bf8 <_malloc_r+0x460>
    5bc0:	018003c4 	movi	r6,15
    5bc4:	3580a72e 	bgeu	r6,r22,5e64 <_malloc_r+0x6cc>
    5bc8:	81400117 	ldw	r5,4(r16)
    5bcc:	013ffe04 	movi	r4,-8
    5bd0:	b0bffd04 	addi	r2,r22,-12
    5bd4:	1104703a 	and	r2,r2,r4
    5bd8:	2900004c 	andi	r4,r5,1
    5bdc:	2088b03a 	or	r4,r4,r2
    5be0:	81000115 	stw	r4,4(r16)
    5be4:	01400144 	movi	r5,5
    5be8:	8089883a 	add	r4,r16,r2
    5bec:	21400115 	stw	r5,4(r4)
    5bf0:	21400215 	stw	r5,8(r4)
    5bf4:	3080cd36 	bltu	r6,r2,5f2c <_malloc_r+0x794>
    5bf8:	00800074 	movhi	r2,1
    5bfc:	108b9704 	addi	r2,r2,11868
    5c00:	11000017 	ldw	r4,0(r2)
    5c04:	20c0012e 	bgeu	r4,r3,5c0c <_malloc_r+0x474>
    5c08:	10c00015 	stw	r3,0(r2)
    5c0c:	00800074 	movhi	r2,1
    5c10:	108b9604 	addi	r2,r2,11864
    5c14:	11000017 	ldw	r4,0(r2)
    5c18:	9c000217 	ldw	r16,8(r19)
    5c1c:	20c0012e 	bgeu	r4,r3,5c24 <_malloc_r+0x48c>
    5c20:	10c00015 	stw	r3,0(r2)
    5c24:	80c00117 	ldw	r3,4(r16)
    5c28:	00bfff04 	movi	r2,-4
    5c2c:	1886703a 	and	r3,r3,r2
    5c30:	1c45c83a 	sub	r2,r3,r17
    5c34:	1c400236 	bltu	r3,r17,5c40 <_malloc_r+0x4a8>
    5c38:	00c003c4 	movi	r3,15
    5c3c:	18800416 	blt	r3,r2,5c50 <_malloc_r+0x4b8>
    5c40:	9009883a 	mov	r4,r18
    5c44:	000d37c0 	call	d37c <__malloc_unlock>
    5c48:	0005883a 	mov	r2,zero
    5c4c:	003f7b06 	br	5a3c <_malloc_r+0x2a4>
    5c50:	88c00054 	ori	r3,r17,1
    5c54:	80c00115 	stw	r3,4(r16)
    5c58:	8463883a 	add	r17,r16,r17
    5c5c:	10800054 	ori	r2,r2,1
    5c60:	9c400215 	stw	r17,8(r19)
    5c64:	88800115 	stw	r2,4(r17)
    5c68:	9009883a 	mov	r4,r18
    5c6c:	000d37c0 	call	d37c <__malloc_unlock>
    5c70:	80800204 	addi	r2,r16,8
    5c74:	003f7106 	br	5a3c <_malloc_r+0x2a4>
    5c78:	00c00504 	movi	r3,20
    5c7c:	18804a2e 	bgeu	r3,r2,5da8 <_malloc_r+0x610>
    5c80:	00c01504 	movi	r3,84
    5c84:	18806e36 	bltu	r3,r2,5e40 <_malloc_r+0x6a8>
    5c88:	8804d33a 	srli	r2,r17,12
    5c8c:	12001bc4 	addi	r8,r2,111
    5c90:	11c01b84 	addi	r7,r2,110
    5c94:	4209883a 	add	r4,r8,r8
    5c98:	003edd06 	br	5810 <_malloc_r+0x78>
    5c9c:	3804d27a 	srli	r2,r7,9
    5ca0:	00c00104 	movi	r3,4
    5ca4:	1880442e 	bgeu	r3,r2,5db8 <_malloc_r+0x620>
    5ca8:	00c00504 	movi	r3,20
    5cac:	18808136 	bltu	r3,r2,5eb4 <_malloc_r+0x71c>
    5cb0:	11401704 	addi	r5,r2,92
    5cb4:	10c016c4 	addi	r3,r2,91
    5cb8:	294b883a 	add	r5,r5,r5
    5cbc:	294b883a 	add	r5,r5,r5
    5cc0:	294b883a 	add	r5,r5,r5
    5cc4:	994b883a 	add	r5,r19,r5
    5cc8:	28800017 	ldw	r2,0(r5)
    5ccc:	01800074 	movhi	r6,1
    5cd0:	297ffe04 	addi	r5,r5,-8
    5cd4:	31bf4404 	addi	r6,r6,-752
    5cd8:	28806526 	beq	r5,r2,5e70 <_malloc_r+0x6d8>
    5cdc:	01bfff04 	movi	r6,-4
    5ce0:	10c00117 	ldw	r3,4(r2)
    5ce4:	1986703a 	and	r3,r3,r6
    5ce8:	38c0022e 	bgeu	r7,r3,5cf4 <_malloc_r+0x55c>
    5cec:	10800217 	ldw	r2,8(r2)
    5cf0:	28bffb1e 	bne	r5,r2,5ce0 <_malloc_r+0x548>
    5cf4:	11400317 	ldw	r5,12(r2)
    5cf8:	98c00117 	ldw	r3,4(r19)
    5cfc:	81400315 	stw	r5,12(r16)
    5d00:	80800215 	stw	r2,8(r16)
    5d04:	2c000215 	stw	r16,8(r5)
    5d08:	14000315 	stw	r16,12(r2)
    5d0c:	003ef806 	br	58f0 <_malloc_r+0x158>
    5d10:	88c00054 	ori	r3,r17,1
    5d14:	80c00115 	stw	r3,4(r16)
    5d18:	8463883a 	add	r17,r16,r17
    5d1c:	34400515 	stw	r17,20(r6)
    5d20:	34400415 	stw	r17,16(r6)
    5d24:	10c00054 	ori	r3,r2,1
    5d28:	8a000315 	stw	r8,12(r17)
    5d2c:	8a000215 	stw	r8,8(r17)
    5d30:	88c00115 	stw	r3,4(r17)
    5d34:	88a3883a 	add	r17,r17,r2
    5d38:	88800015 	stw	r2,0(r17)
    5d3c:	9009883a 	mov	r4,r18
    5d40:	000d37c0 	call	d37c <__malloc_unlock>
    5d44:	80800204 	addi	r2,r16,8
    5d48:	003f3c06 	br	5a3c <_malloc_r+0x2a4>
    5d4c:	30c00117 	ldw	r3,4(r6)
    5d50:	003ee706 	br	58f0 <_malloc_r+0x158>
    5d54:	5ac00044 	addi	r11,r11,1
    5d58:	588000cc 	andi	r2,r11,3
    5d5c:	31800204 	addi	r6,r6,8
    5d60:	103efd1e 	bne	r2,zero,5958 <_malloc_r+0x1c0>
    5d64:	00002406 	br	5df8 <_malloc_r+0x660>
    5d68:	14000317 	ldw	r16,12(r2)
    5d6c:	143f251e 	bne	r2,r16,5a04 <_malloc_r+0x26c>
    5d70:	21000084 	addi	r4,r4,2
    5d74:	003ebc06 	br	5868 <_malloc_r+0xd0>
    5d78:	8085883a 	add	r2,r16,r2
    5d7c:	10c00117 	ldw	r3,4(r2)
    5d80:	81000317 	ldw	r4,12(r16)
    5d84:	81400217 	ldw	r5,8(r16)
    5d88:	18c00054 	ori	r3,r3,1
    5d8c:	10c00115 	stw	r3,4(r2)
    5d90:	29000315 	stw	r4,12(r5)
    5d94:	21400215 	stw	r5,8(r4)
    5d98:	9009883a 	mov	r4,r18
    5d9c:	000d37c0 	call	d37c <__malloc_unlock>
    5da0:	80800204 	addi	r2,r16,8
    5da4:	003f2506 	br	5a3c <_malloc_r+0x2a4>
    5da8:	12001704 	addi	r8,r2,92
    5dac:	11c016c4 	addi	r7,r2,91
    5db0:	4209883a 	add	r4,r8,r8
    5db4:	003e9606 	br	5810 <_malloc_r+0x78>
    5db8:	3804d1ba 	srli	r2,r7,6
    5dbc:	11400e44 	addi	r5,r2,57
    5dc0:	10c00e04 	addi	r3,r2,56
    5dc4:	294b883a 	add	r5,r5,r5
    5dc8:	003fbc06 	br	5cbc <_malloc_r+0x524>
    5dcc:	84ff5926 	beq	r16,r19,5b34 <_malloc_r+0x39c>
    5dd0:	00800074 	movhi	r2,1
    5dd4:	10bf4404 	addi	r2,r2,-752
    5dd8:	14000217 	ldw	r16,8(r2)
    5ddc:	00bfff04 	movi	r2,-4
    5de0:	80c00117 	ldw	r3,4(r16)
    5de4:	1886703a 	and	r3,r3,r2
    5de8:	003f9106 	br	5c30 <_malloc_r+0x498>
    5dec:	60800217 	ldw	r2,8(r12)
    5df0:	213fffc4 	addi	r4,r4,-1
    5df4:	1300651e 	bne	r2,r12,5f8c <_malloc_r+0x7f4>
    5df8:	208000cc 	andi	r2,r4,3
    5dfc:	633ffe04 	addi	r12,r12,-8
    5e00:	103ffa1e 	bne	r2,zero,5dec <_malloc_r+0x654>
    5e04:	98800117 	ldw	r2,4(r19)
    5e08:	0146303a 	nor	r3,zero,r5
    5e0c:	1884703a 	and	r2,r3,r2
    5e10:	98800115 	stw	r2,4(r19)
    5e14:	294b883a 	add	r5,r5,r5
    5e18:	117f2836 	bltu	r2,r5,5abc <_malloc_r+0x324>
    5e1c:	283f2726 	beq	r5,zero,5abc <_malloc_r+0x324>
    5e20:	2886703a 	and	r3,r5,r2
    5e24:	5809883a 	mov	r4,r11
    5e28:	183ec31e 	bne	r3,zero,5938 <_malloc_r+0x1a0>
    5e2c:	294b883a 	add	r5,r5,r5
    5e30:	2886703a 	and	r3,r5,r2
    5e34:	21000104 	addi	r4,r4,4
    5e38:	183ffc26 	beq	r3,zero,5e2c <_malloc_r+0x694>
    5e3c:	003ebe06 	br	5938 <_malloc_r+0x1a0>
    5e40:	00c05504 	movi	r3,340
    5e44:	18801236 	bltu	r3,r2,5e90 <_malloc_r+0x6f8>
    5e48:	8804d3fa 	srli	r2,r17,15
    5e4c:	12001e04 	addi	r8,r2,120
    5e50:	11c01dc4 	addi	r7,r2,119
    5e54:	4209883a 	add	r4,r8,r8
    5e58:	003e6d06 	br	5810 <_malloc_r+0x78>
    5e5c:	00c40004 	movi	r3,4096
    5e60:	003f4606 	br	5b7c <_malloc_r+0x3e4>
    5e64:	00800044 	movi	r2,1
    5e68:	a0800115 	stw	r2,4(r20)
    5e6c:	003f7406 	br	5c40 <_malloc_r+0x4a8>
    5e70:	1805d0ba 	srai	r2,r3,2
    5e74:	01c00044 	movi	r7,1
    5e78:	30c00117 	ldw	r3,4(r6)
    5e7c:	388e983a 	sll	r7,r7,r2
    5e80:	2805883a 	mov	r2,r5
    5e84:	38c6b03a 	or	r3,r7,r3
    5e88:	30c00115 	stw	r3,4(r6)
    5e8c:	003f9b06 	br	5cfc <_malloc_r+0x564>
    5e90:	00c15504 	movi	r3,1364
    5e94:	18801a36 	bltu	r3,r2,5f00 <_malloc_r+0x768>
    5e98:	8804d4ba 	srli	r2,r17,18
    5e9c:	12001f44 	addi	r8,r2,125
    5ea0:	11c01f04 	addi	r7,r2,124
    5ea4:	4209883a 	add	r4,r8,r8
    5ea8:	003e5906 	br	5810 <_malloc_r+0x78>
    5eac:	ad400404 	addi	r21,r21,16
    5eb0:	003f1706 	br	5b10 <_malloc_r+0x378>
    5eb4:	00c01504 	movi	r3,84
    5eb8:	18802336 	bltu	r3,r2,5f48 <_malloc_r+0x7b0>
    5ebc:	3804d33a 	srli	r2,r7,12
    5ec0:	11401bc4 	addi	r5,r2,111
    5ec4:	10c01b84 	addi	r3,r2,110
    5ec8:	294b883a 	add	r5,r5,r5
    5ecc:	003f7b06 	br	5cbc <_malloc_r+0x524>
    5ed0:	9c000217 	ldw	r16,8(r19)
    5ed4:	00bfff04 	movi	r2,-4
    5ed8:	80c00117 	ldw	r3,4(r16)
    5edc:	1886703a 	and	r3,r3,r2
    5ee0:	003f5306 	br	5c30 <_malloc_r+0x498>
    5ee4:	3083ffcc 	andi	r2,r6,4095
    5ee8:	103f181e 	bne	r2,zero,5b4c <_malloc_r+0x3b4>
    5eec:	99000217 	ldw	r4,8(r19)
    5ef0:	b545883a 	add	r2,r22,r21
    5ef4:	10800054 	ori	r2,r2,1
    5ef8:	20800115 	stw	r2,4(r4)
    5efc:	003f3e06 	br	5bf8 <_malloc_r+0x460>
    5f00:	01003f84 	movi	r4,254
    5f04:	02001fc4 	movi	r8,127
    5f08:	01c01f84 	movi	r7,126
    5f0c:	003e4006 	br	5810 <_malloc_r+0x78>
    5f10:	00800074 	movhi	r2,1
    5f14:	1084cb04 	addi	r2,r2,4908
    5f18:	15000015 	stw	r20,0(r2)
    5f1c:	003f1106 	br	5b64 <_malloc_r+0x3cc>
    5f20:	00800044 	movi	r2,1
    5f24:	002b883a 	mov	r21,zero
    5f28:	003f1f06 	br	5ba8 <_malloc_r+0x410>
    5f2c:	81400204 	addi	r5,r16,8
    5f30:	9009883a 	mov	r4,r18
    5f34:	0004bac0 	call	4bac <_free_r>
    5f38:	00800074 	movhi	r2,1
    5f3c:	108ba104 	addi	r2,r2,11908
    5f40:	10c00017 	ldw	r3,0(r2)
    5f44:	003f2c06 	br	5bf8 <_malloc_r+0x460>
    5f48:	00c05504 	movi	r3,340
    5f4c:	18800536 	bltu	r3,r2,5f64 <_malloc_r+0x7cc>
    5f50:	3804d3fa 	srli	r2,r7,15
    5f54:	11401e04 	addi	r5,r2,120
    5f58:	10c01dc4 	addi	r3,r2,119
    5f5c:	294b883a 	add	r5,r5,r5
    5f60:	003f5606 	br	5cbc <_malloc_r+0x524>
    5f64:	00c15504 	movi	r3,1364
    5f68:	18800536 	bltu	r3,r2,5f80 <_malloc_r+0x7e8>
    5f6c:	3804d4ba 	srli	r2,r7,18
    5f70:	11401f44 	addi	r5,r2,125
    5f74:	10c01f04 	addi	r3,r2,124
    5f78:	294b883a 	add	r5,r5,r5
    5f7c:	003f4f06 	br	5cbc <_malloc_r+0x524>
    5f80:	01403f84 	movi	r5,254
    5f84:	00c01f84 	movi	r3,126
    5f88:	003f4c06 	br	5cbc <_malloc_r+0x524>
    5f8c:	98800117 	ldw	r2,4(r19)
    5f90:	003fa006 	br	5e14 <_malloc_r+0x67c>
    5f94:	8808d0fa 	srli	r4,r17,3
    5f98:	20800044 	addi	r2,r4,1
    5f9c:	1085883a 	add	r2,r2,r2
    5fa0:	003e9006 	br	59e4 <_malloc_r+0x24c>

00005fa4 <memchr>:
    5fa4:	208000cc 	andi	r2,r4,3
    5fa8:	280f883a 	mov	r7,r5
    5fac:	10003426 	beq	r2,zero,6080 <memchr+0xdc>
    5fb0:	30bfffc4 	addi	r2,r6,-1
    5fb4:	30001a26 	beq	r6,zero,6020 <memchr+0x7c>
    5fb8:	20c00003 	ldbu	r3,0(r4)
    5fbc:	29803fcc 	andi	r6,r5,255
    5fc0:	30c0051e 	bne	r6,r3,5fd8 <memchr+0x34>
    5fc4:	00001806 	br	6028 <memchr+0x84>
    5fc8:	10001526 	beq	r2,zero,6020 <memchr+0x7c>
    5fcc:	20c00003 	ldbu	r3,0(r4)
    5fd0:	10bfffc4 	addi	r2,r2,-1
    5fd4:	30c01426 	beq	r6,r3,6028 <memchr+0x84>
    5fd8:	21000044 	addi	r4,r4,1
    5fdc:	20c000cc 	andi	r3,r4,3
    5fe0:	183ff91e 	bne	r3,zero,5fc8 <memchr+0x24>
    5fe4:	020000c4 	movi	r8,3
    5fe8:	40801136 	bltu	r8,r2,6030 <memchr+0x8c>
    5fec:	10000c26 	beq	r2,zero,6020 <memchr+0x7c>
    5ff0:	20c00003 	ldbu	r3,0(r4)
    5ff4:	29403fcc 	andi	r5,r5,255
    5ff8:	28c00b26 	beq	r5,r3,6028 <memchr+0x84>
    5ffc:	20c00044 	addi	r3,r4,1
    6000:	39803fcc 	andi	r6,r7,255
    6004:	2089883a 	add	r4,r4,r2
    6008:	00000306 	br	6018 <memchr+0x74>
    600c:	18c00044 	addi	r3,r3,1
    6010:	197fffc3 	ldbu	r5,-1(r3)
    6014:	31400526 	beq	r6,r5,602c <memchr+0x88>
    6018:	1805883a 	mov	r2,r3
    601c:	20fffb1e 	bne	r4,r3,600c <memchr+0x68>
    6020:	0005883a 	mov	r2,zero
    6024:	f800283a 	ret
    6028:	2005883a 	mov	r2,r4
    602c:	f800283a 	ret
    6030:	28c03fcc 	andi	r3,r5,255
    6034:	1812923a 	slli	r9,r3,8
    6038:	02ffbff4 	movhi	r11,65279
    603c:	02a02074 	movhi	r10,32897
    6040:	48d2b03a 	or	r9,r9,r3
    6044:	4806943a 	slli	r3,r9,16
    6048:	5affbfc4 	addi	r11,r11,-257
    604c:	52a02004 	addi	r10,r10,-32640
    6050:	48d2b03a 	or	r9,r9,r3
    6054:	20c00017 	ldw	r3,0(r4)
    6058:	48c6f03a 	xor	r3,r9,r3
    605c:	1acd883a 	add	r6,r3,r11
    6060:	00c6303a 	nor	r3,zero,r3
    6064:	30c6703a 	and	r3,r6,r3
    6068:	1a86703a 	and	r3,r3,r10
    606c:	183fe01e 	bne	r3,zero,5ff0 <memchr+0x4c>
    6070:	10bfff04 	addi	r2,r2,-4
    6074:	21000104 	addi	r4,r4,4
    6078:	40bff636 	bltu	r8,r2,6054 <memchr+0xb0>
    607c:	003fdb06 	br	5fec <memchr+0x48>
    6080:	3005883a 	mov	r2,r6
    6084:	003fd706 	br	5fe4 <memchr+0x40>

00006088 <memmove>:
    6088:	2005883a 	mov	r2,r4
    608c:	29000b2e 	bgeu	r5,r4,60bc <memmove+0x34>
    6090:	298f883a 	add	r7,r5,r6
    6094:	21c0092e 	bgeu	r4,r7,60bc <memmove+0x34>
    6098:	2187883a 	add	r3,r4,r6
    609c:	198bc83a 	sub	r5,r3,r6
    60a0:	30004826 	beq	r6,zero,61c4 <memmove+0x13c>
    60a4:	39ffffc4 	addi	r7,r7,-1
    60a8:	39000003 	ldbu	r4,0(r7)
    60ac:	18ffffc4 	addi	r3,r3,-1
    60b0:	19000005 	stb	r4,0(r3)
    60b4:	28fffb1e 	bne	r5,r3,60a4 <memmove+0x1c>
    60b8:	f800283a 	ret
    60bc:	00c003c4 	movi	r3,15
    60c0:	1980412e 	bgeu	r3,r6,61c8 <memmove+0x140>
    60c4:	2886b03a 	or	r3,r5,r2
    60c8:	18c000cc 	andi	r3,r3,3
    60cc:	1800401e 	bne	r3,zero,61d0 <memmove+0x148>
    60d0:	33fffc04 	addi	r15,r6,-16
    60d4:	781ed13a 	srli	r15,r15,4
    60d8:	28c00104 	addi	r3,r5,4
    60dc:	13400104 	addi	r13,r2,4
    60e0:	781c913a 	slli	r14,r15,4
    60e4:	2b000204 	addi	r12,r5,8
    60e8:	12c00204 	addi	r11,r2,8
    60ec:	73800504 	addi	r14,r14,20
    60f0:	2a800304 	addi	r10,r5,12
    60f4:	12400304 	addi	r9,r2,12
    60f8:	2b9d883a 	add	r14,r5,r14
    60fc:	2811883a 	mov	r8,r5
    6100:	100f883a 	mov	r7,r2
    6104:	41000017 	ldw	r4,0(r8)
    6108:	39c00404 	addi	r7,r7,16
    610c:	18c00404 	addi	r3,r3,16
    6110:	393ffc15 	stw	r4,-16(r7)
    6114:	193ffc17 	ldw	r4,-16(r3)
    6118:	6b400404 	addi	r13,r13,16
    611c:	5ac00404 	addi	r11,r11,16
    6120:	693ffc15 	stw	r4,-16(r13)
    6124:	61000017 	ldw	r4,0(r12)
    6128:	4a400404 	addi	r9,r9,16
    612c:	42000404 	addi	r8,r8,16
    6130:	593ffc15 	stw	r4,-16(r11)
    6134:	51000017 	ldw	r4,0(r10)
    6138:	63000404 	addi	r12,r12,16
    613c:	52800404 	addi	r10,r10,16
    6140:	493ffc15 	stw	r4,-16(r9)
    6144:	1bbfef1e 	bne	r3,r14,6104 <memmove+0x7c>
    6148:	79000044 	addi	r4,r15,1
    614c:	2008913a 	slli	r4,r4,4
    6150:	328003cc 	andi	r10,r6,15
    6154:	02c000c4 	movi	r11,3
    6158:	1107883a 	add	r3,r2,r4
    615c:	290b883a 	add	r5,r5,r4
    6160:	5a801e2e 	bgeu	r11,r10,61dc <memmove+0x154>
    6164:	1813883a 	mov	r9,r3
    6168:	2811883a 	mov	r8,r5
    616c:	500f883a 	mov	r7,r10
    6170:	41000017 	ldw	r4,0(r8)
    6174:	4a400104 	addi	r9,r9,4
    6178:	39ffff04 	addi	r7,r7,-4
    617c:	493fff15 	stw	r4,-4(r9)
    6180:	42000104 	addi	r8,r8,4
    6184:	59fffa36 	bltu	r11,r7,6170 <memmove+0xe8>
    6188:	513fff04 	addi	r4,r10,-4
    618c:	2008d0ba 	srli	r4,r4,2
    6190:	318000cc 	andi	r6,r6,3
    6194:	21000044 	addi	r4,r4,1
    6198:	2109883a 	add	r4,r4,r4
    619c:	2109883a 	add	r4,r4,r4
    61a0:	1907883a 	add	r3,r3,r4
    61a4:	290b883a 	add	r5,r5,r4
    61a8:	30000b26 	beq	r6,zero,61d8 <memmove+0x150>
    61ac:	198d883a 	add	r6,r3,r6
    61b0:	29c00003 	ldbu	r7,0(r5)
    61b4:	18c00044 	addi	r3,r3,1
    61b8:	29400044 	addi	r5,r5,1
    61bc:	19ffffc5 	stb	r7,-1(r3)
    61c0:	19bffb1e 	bne	r3,r6,61b0 <memmove+0x128>
    61c4:	f800283a 	ret
    61c8:	1007883a 	mov	r3,r2
    61cc:	003ff606 	br	61a8 <memmove+0x120>
    61d0:	1007883a 	mov	r3,r2
    61d4:	003ff506 	br	61ac <memmove+0x124>
    61d8:	f800283a 	ret
    61dc:	500d883a 	mov	r6,r10
    61e0:	003ff106 	br	61a8 <memmove+0x120>

000061e4 <memset>:
    61e4:	20c000cc 	andi	r3,r4,3
    61e8:	2005883a 	mov	r2,r4
    61ec:	18004426 	beq	r3,zero,6300 <memset+0x11c>
    61f0:	31ffffc4 	addi	r7,r6,-1
    61f4:	30004026 	beq	r6,zero,62f8 <memset+0x114>
    61f8:	2813883a 	mov	r9,r5
    61fc:	200d883a 	mov	r6,r4
    6200:	2007883a 	mov	r3,r4
    6204:	00000406 	br	6218 <memset+0x34>
    6208:	3a3fffc4 	addi	r8,r7,-1
    620c:	31800044 	addi	r6,r6,1
    6210:	38003926 	beq	r7,zero,62f8 <memset+0x114>
    6214:	400f883a 	mov	r7,r8
    6218:	18c00044 	addi	r3,r3,1
    621c:	32400005 	stb	r9,0(r6)
    6220:	1a0000cc 	andi	r8,r3,3
    6224:	403ff81e 	bne	r8,zero,6208 <memset+0x24>
    6228:	010000c4 	movi	r4,3
    622c:	21c02d2e 	bgeu	r4,r7,62e4 <memset+0x100>
    6230:	29003fcc 	andi	r4,r5,255
    6234:	200c923a 	slli	r6,r4,8
    6238:	3108b03a 	or	r4,r6,r4
    623c:	200c943a 	slli	r6,r4,16
    6240:	218cb03a 	or	r6,r4,r6
    6244:	010003c4 	movi	r4,15
    6248:	21c0182e 	bgeu	r4,r7,62ac <memset+0xc8>
    624c:	3b3ffc04 	addi	r12,r7,-16
    6250:	6018d13a 	srli	r12,r12,4
    6254:	1a000104 	addi	r8,r3,4
    6258:	1ac00204 	addi	r11,r3,8
    625c:	6008913a 	slli	r4,r12,4
    6260:	1a800304 	addi	r10,r3,12
    6264:	1813883a 	mov	r9,r3
    6268:	21000504 	addi	r4,r4,20
    626c:	1909883a 	add	r4,r3,r4
    6270:	49800015 	stw	r6,0(r9)
    6274:	41800015 	stw	r6,0(r8)
    6278:	59800015 	stw	r6,0(r11)
    627c:	51800015 	stw	r6,0(r10)
    6280:	42000404 	addi	r8,r8,16
    6284:	4a400404 	addi	r9,r9,16
    6288:	5ac00404 	addi	r11,r11,16
    628c:	52800404 	addi	r10,r10,16
    6290:	413ff71e 	bne	r8,r4,6270 <memset+0x8c>
    6294:	63000044 	addi	r12,r12,1
    6298:	6018913a 	slli	r12,r12,4
    629c:	39c003cc 	andi	r7,r7,15
    62a0:	010000c4 	movi	r4,3
    62a4:	1b07883a 	add	r3,r3,r12
    62a8:	21c00e2e 	bgeu	r4,r7,62e4 <memset+0x100>
    62ac:	1813883a 	mov	r9,r3
    62b0:	3811883a 	mov	r8,r7
    62b4:	010000c4 	movi	r4,3
    62b8:	49800015 	stw	r6,0(r9)
    62bc:	423fff04 	addi	r8,r8,-4
    62c0:	4a400104 	addi	r9,r9,4
    62c4:	223ffc36 	bltu	r4,r8,62b8 <memset+0xd4>
    62c8:	393fff04 	addi	r4,r7,-4
    62cc:	2008d0ba 	srli	r4,r4,2
    62d0:	39c000cc 	andi	r7,r7,3
    62d4:	21000044 	addi	r4,r4,1
    62d8:	2109883a 	add	r4,r4,r4
    62dc:	2109883a 	add	r4,r4,r4
    62e0:	1907883a 	add	r3,r3,r4
    62e4:	38000526 	beq	r7,zero,62fc <memset+0x118>
    62e8:	19cf883a 	add	r7,r3,r7
    62ec:	19400005 	stb	r5,0(r3)
    62f0:	18c00044 	addi	r3,r3,1
    62f4:	38fffd1e 	bne	r7,r3,62ec <memset+0x108>
    62f8:	f800283a 	ret
    62fc:	f800283a 	ret
    6300:	2007883a 	mov	r3,r4
    6304:	300f883a 	mov	r7,r6
    6308:	003fc706 	br	6228 <memset+0x44>

0000630c <_Balloc>:
    630c:	20801317 	ldw	r2,76(r4)
    6310:	defffc04 	addi	sp,sp,-16
    6314:	dc400115 	stw	r17,4(sp)
    6318:	dc000015 	stw	r16,0(sp)
    631c:	dfc00315 	stw	ra,12(sp)
    6320:	dc800215 	stw	r18,8(sp)
    6324:	2023883a 	mov	r17,r4
    6328:	2821883a 	mov	r16,r5
    632c:	10000f26 	beq	r2,zero,636c <_Balloc+0x60>
    6330:	8407883a 	add	r3,r16,r16
    6334:	18c7883a 	add	r3,r3,r3
    6338:	10c7883a 	add	r3,r2,r3
    633c:	18800017 	ldw	r2,0(r3)
    6340:	10001126 	beq	r2,zero,6388 <_Balloc+0x7c>
    6344:	11000017 	ldw	r4,0(r2)
    6348:	19000015 	stw	r4,0(r3)
    634c:	10000415 	stw	zero,16(r2)
    6350:	10000315 	stw	zero,12(r2)
    6354:	dfc00317 	ldw	ra,12(sp)
    6358:	dc800217 	ldw	r18,8(sp)
    635c:	dc400117 	ldw	r17,4(sp)
    6360:	dc000017 	ldw	r16,0(sp)
    6364:	dec00404 	addi	sp,sp,16
    6368:	f800283a 	ret
    636c:	01800844 	movi	r6,33
    6370:	01400104 	movi	r5,4
    6374:	00092480 	call	9248 <_calloc_r>
    6378:	88801315 	stw	r2,76(r17)
    637c:	103fec1e 	bne	r2,zero,6330 <_Balloc+0x24>
    6380:	0005883a 	mov	r2,zero
    6384:	003ff306 	br	6354 <_Balloc+0x48>
    6388:	01400044 	movi	r5,1
    638c:	2c24983a 	sll	r18,r5,r16
    6390:	8809883a 	mov	r4,r17
    6394:	91800144 	addi	r6,r18,5
    6398:	318d883a 	add	r6,r6,r6
    639c:	318d883a 	add	r6,r6,r6
    63a0:	00092480 	call	9248 <_calloc_r>
    63a4:	103ff626 	beq	r2,zero,6380 <_Balloc+0x74>
    63a8:	14000115 	stw	r16,4(r2)
    63ac:	14800215 	stw	r18,8(r2)
    63b0:	003fe606 	br	634c <_Balloc+0x40>

000063b4 <_Bfree>:
    63b4:	28000826 	beq	r5,zero,63d8 <_Bfree+0x24>
    63b8:	28c00117 	ldw	r3,4(r5)
    63bc:	20801317 	ldw	r2,76(r4)
    63c0:	18c7883a 	add	r3,r3,r3
    63c4:	18c7883a 	add	r3,r3,r3
    63c8:	10c5883a 	add	r2,r2,r3
    63cc:	10c00017 	ldw	r3,0(r2)
    63d0:	28c00015 	stw	r3,0(r5)
    63d4:	11400015 	stw	r5,0(r2)
    63d8:	f800283a 	ret

000063dc <__multadd>:
    63dc:	defffa04 	addi	sp,sp,-24
    63e0:	dc800315 	stw	r18,12(sp)
    63e4:	dc400215 	stw	r17,8(sp)
    63e8:	dc000115 	stw	r16,4(sp)
    63ec:	2823883a 	mov	r17,r5
    63f0:	2c000417 	ldw	r16,16(r5)
    63f4:	dfc00515 	stw	ra,20(sp)
    63f8:	dcc00415 	stw	r19,16(sp)
    63fc:	2025883a 	mov	r18,r4
    6400:	29400504 	addi	r5,r5,20
    6404:	0011883a 	mov	r8,zero
    6408:	28c00017 	ldw	r3,0(r5)
    640c:	29400104 	addi	r5,r5,4
    6410:	42000044 	addi	r8,r8,1
    6414:	18bfffcc 	andi	r2,r3,65535
    6418:	1185383a 	mul	r2,r2,r6
    641c:	1806d43a 	srli	r3,r3,16
    6420:	11cf883a 	add	r7,r2,r7
    6424:	3808d43a 	srli	r4,r7,16
    6428:	1987383a 	mul	r3,r3,r6
    642c:	38bfffcc 	andi	r2,r7,65535
    6430:	1907883a 	add	r3,r3,r4
    6434:	1808943a 	slli	r4,r3,16
    6438:	180ed43a 	srli	r7,r3,16
    643c:	2085883a 	add	r2,r4,r2
    6440:	28bfff15 	stw	r2,-4(r5)
    6444:	443ff016 	blt	r8,r16,6408 <__multadd+0x2c>
    6448:	38000926 	beq	r7,zero,6470 <__multadd+0x94>
    644c:	88800217 	ldw	r2,8(r17)
    6450:	80800f0e 	bge	r16,r2,6490 <__multadd+0xb4>
    6454:	80800144 	addi	r2,r16,5
    6458:	1085883a 	add	r2,r2,r2
    645c:	1085883a 	add	r2,r2,r2
    6460:	8885883a 	add	r2,r17,r2
    6464:	11c00015 	stw	r7,0(r2)
    6468:	84000044 	addi	r16,r16,1
    646c:	8c000415 	stw	r16,16(r17)
    6470:	8805883a 	mov	r2,r17
    6474:	dfc00517 	ldw	ra,20(sp)
    6478:	dcc00417 	ldw	r19,16(sp)
    647c:	dc800317 	ldw	r18,12(sp)
    6480:	dc400217 	ldw	r17,8(sp)
    6484:	dc000117 	ldw	r16,4(sp)
    6488:	dec00604 	addi	sp,sp,24
    648c:	f800283a 	ret
    6490:	89400117 	ldw	r5,4(r17)
    6494:	9009883a 	mov	r4,r18
    6498:	d9c00015 	stw	r7,0(sp)
    649c:	29400044 	addi	r5,r5,1
    64a0:	000630c0 	call	630c <_Balloc>
    64a4:	89800417 	ldw	r6,16(r17)
    64a8:	89400304 	addi	r5,r17,12
    64ac:	11000304 	addi	r4,r2,12
    64b0:	31800084 	addi	r6,r6,2
    64b4:	318d883a 	add	r6,r6,r6
    64b8:	318d883a 	add	r6,r6,r6
    64bc:	1027883a 	mov	r19,r2
    64c0:	00004740 	call	474 <memcpy>
    64c4:	d9c00017 	ldw	r7,0(sp)
    64c8:	88000a26 	beq	r17,zero,64f4 <__multadd+0x118>
    64cc:	88c00117 	ldw	r3,4(r17)
    64d0:	90801317 	ldw	r2,76(r18)
    64d4:	18c7883a 	add	r3,r3,r3
    64d8:	18c7883a 	add	r3,r3,r3
    64dc:	10c5883a 	add	r2,r2,r3
    64e0:	10c00017 	ldw	r3,0(r2)
    64e4:	88c00015 	stw	r3,0(r17)
    64e8:	14400015 	stw	r17,0(r2)
    64ec:	9823883a 	mov	r17,r19
    64f0:	003fd806 	br	6454 <__multadd+0x78>
    64f4:	9823883a 	mov	r17,r19
    64f8:	003fd606 	br	6454 <__multadd+0x78>

000064fc <__s2b>:
    64fc:	defff904 	addi	sp,sp,-28
    6500:	dc400115 	stw	r17,4(sp)
    6504:	dc000015 	stw	r16,0(sp)
    6508:	2023883a 	mov	r17,r4
    650c:	2821883a 	mov	r16,r5
    6510:	39000204 	addi	r4,r7,8
    6514:	01400244 	movi	r5,9
    6518:	dcc00315 	stw	r19,12(sp)
    651c:	dc800215 	stw	r18,8(sp)
    6520:	dfc00615 	stw	ra,24(sp)
    6524:	dd400515 	stw	r21,20(sp)
    6528:	dd000415 	stw	r20,16(sp)
    652c:	3825883a 	mov	r18,r7
    6530:	3027883a 	mov	r19,r6
    6534:	000a5780 	call	a578 <__divsi3>
    6538:	00c00044 	movi	r3,1
    653c:	000b883a 	mov	r5,zero
    6540:	1880030e 	bge	r3,r2,6550 <__s2b+0x54>
    6544:	18c7883a 	add	r3,r3,r3
    6548:	29400044 	addi	r5,r5,1
    654c:	18bffd16 	blt	r3,r2,6544 <__s2b+0x48>
    6550:	8809883a 	mov	r4,r17
    6554:	000630c0 	call	630c <_Balloc>
    6558:	d8c00717 	ldw	r3,28(sp)
    655c:	10c00515 	stw	r3,20(r2)
    6560:	00c00044 	movi	r3,1
    6564:	10c00415 	stw	r3,16(r2)
    6568:	00c00244 	movi	r3,9
    656c:	1cc0210e 	bge	r3,r19,65f4 <__s2b+0xf8>
    6570:	80eb883a 	add	r21,r16,r3
    6574:	a829883a 	mov	r20,r21
    6578:	84e1883a 	add	r16,r16,r19
    657c:	a1c00007 	ldb	r7,0(r20)
    6580:	01800284 	movi	r6,10
    6584:	a5000044 	addi	r20,r20,1
    6588:	100b883a 	mov	r5,r2
    658c:	39fff404 	addi	r7,r7,-48
    6590:	8809883a 	mov	r4,r17
    6594:	00063dc0 	call	63dc <__multadd>
    6598:	a43ff81e 	bne	r20,r16,657c <__s2b+0x80>
    659c:	ace1883a 	add	r16,r21,r19
    65a0:	843ffe04 	addi	r16,r16,-8
    65a4:	9c800a0e 	bge	r19,r18,65d0 <__s2b+0xd4>
    65a8:	94e5c83a 	sub	r18,r18,r19
    65ac:	84a5883a 	add	r18,r16,r18
    65b0:	81c00007 	ldb	r7,0(r16)
    65b4:	01800284 	movi	r6,10
    65b8:	84000044 	addi	r16,r16,1
    65bc:	100b883a 	mov	r5,r2
    65c0:	39fff404 	addi	r7,r7,-48
    65c4:	8809883a 	mov	r4,r17
    65c8:	00063dc0 	call	63dc <__multadd>
    65cc:	84bff81e 	bne	r16,r18,65b0 <__s2b+0xb4>
    65d0:	dfc00617 	ldw	ra,24(sp)
    65d4:	dd400517 	ldw	r21,20(sp)
    65d8:	dd000417 	ldw	r20,16(sp)
    65dc:	dcc00317 	ldw	r19,12(sp)
    65e0:	dc800217 	ldw	r18,8(sp)
    65e4:	dc400117 	ldw	r17,4(sp)
    65e8:	dc000017 	ldw	r16,0(sp)
    65ec:	dec00704 	addi	sp,sp,28
    65f0:	f800283a 	ret
    65f4:	84000284 	addi	r16,r16,10
    65f8:	1827883a 	mov	r19,r3
    65fc:	003fe906 	br	65a4 <__s2b+0xa8>

00006600 <__hi0bits>:
    6600:	20bfffec 	andhi	r2,r4,65535
    6604:	1000141e 	bne	r2,zero,6658 <__hi0bits+0x58>
    6608:	2008943a 	slli	r4,r4,16
    660c:	00800404 	movi	r2,16
    6610:	20ffc02c 	andhi	r3,r4,65280
    6614:	1800021e 	bne	r3,zero,6620 <__hi0bits+0x20>
    6618:	2008923a 	slli	r4,r4,8
    661c:	10800204 	addi	r2,r2,8
    6620:	20fc002c 	andhi	r3,r4,61440
    6624:	1800021e 	bne	r3,zero,6630 <__hi0bits+0x30>
    6628:	2008913a 	slli	r4,r4,4
    662c:	10800104 	addi	r2,r2,4
    6630:	20f0002c 	andhi	r3,r4,49152
    6634:	1800031e 	bne	r3,zero,6644 <__hi0bits+0x44>
    6638:	2109883a 	add	r4,r4,r4
    663c:	10800084 	addi	r2,r2,2
    6640:	2109883a 	add	r4,r4,r4
    6644:	20000316 	blt	r4,zero,6654 <__hi0bits+0x54>
    6648:	2110002c 	andhi	r4,r4,16384
    664c:	2000041e 	bne	r4,zero,6660 <__hi0bits+0x60>
    6650:	00800804 	movi	r2,32
    6654:	f800283a 	ret
    6658:	0005883a 	mov	r2,zero
    665c:	003fec06 	br	6610 <__hi0bits+0x10>
    6660:	10800044 	addi	r2,r2,1
    6664:	f800283a 	ret

00006668 <__lo0bits>:
    6668:	20c00017 	ldw	r3,0(r4)
    666c:	188001cc 	andi	r2,r3,7
    6670:	10000826 	beq	r2,zero,6694 <__lo0bits+0x2c>
    6674:	1880004c 	andi	r2,r3,1
    6678:	1000211e 	bne	r2,zero,6700 <__lo0bits+0x98>
    667c:	1880008c 	andi	r2,r3,2
    6680:	1000211e 	bne	r2,zero,6708 <__lo0bits+0xa0>
    6684:	1806d0ba 	srli	r3,r3,2
    6688:	00800084 	movi	r2,2
    668c:	20c00015 	stw	r3,0(r4)
    6690:	f800283a 	ret
    6694:	18bfffcc 	andi	r2,r3,65535
    6698:	10001326 	beq	r2,zero,66e8 <__lo0bits+0x80>
    669c:	0005883a 	mov	r2,zero
    66a0:	19403fcc 	andi	r5,r3,255
    66a4:	2800021e 	bne	r5,zero,66b0 <__lo0bits+0x48>
    66a8:	1806d23a 	srli	r3,r3,8
    66ac:	10800204 	addi	r2,r2,8
    66b0:	194003cc 	andi	r5,r3,15
    66b4:	2800021e 	bne	r5,zero,66c0 <__lo0bits+0x58>
    66b8:	1806d13a 	srli	r3,r3,4
    66bc:	10800104 	addi	r2,r2,4
    66c0:	194000cc 	andi	r5,r3,3
    66c4:	2800021e 	bne	r5,zero,66d0 <__lo0bits+0x68>
    66c8:	1806d0ba 	srli	r3,r3,2
    66cc:	10800084 	addi	r2,r2,2
    66d0:	1940004c 	andi	r5,r3,1
    66d4:	2800081e 	bne	r5,zero,66f8 <__lo0bits+0x90>
    66d8:	1806d07a 	srli	r3,r3,1
    66dc:	1800051e 	bne	r3,zero,66f4 <__lo0bits+0x8c>
    66e0:	00800804 	movi	r2,32
    66e4:	f800283a 	ret
    66e8:	1806d43a 	srli	r3,r3,16
    66ec:	00800404 	movi	r2,16
    66f0:	003feb06 	br	66a0 <__lo0bits+0x38>
    66f4:	10800044 	addi	r2,r2,1
    66f8:	20c00015 	stw	r3,0(r4)
    66fc:	f800283a 	ret
    6700:	0005883a 	mov	r2,zero
    6704:	f800283a 	ret
    6708:	1806d07a 	srli	r3,r3,1
    670c:	00800044 	movi	r2,1
    6710:	20c00015 	stw	r3,0(r4)
    6714:	f800283a 	ret

00006718 <__i2b>:
    6718:	defffd04 	addi	sp,sp,-12
    671c:	dc000015 	stw	r16,0(sp)
    6720:	04000044 	movi	r16,1
    6724:	dc400115 	stw	r17,4(sp)
    6728:	2823883a 	mov	r17,r5
    672c:	800b883a 	mov	r5,r16
    6730:	dfc00215 	stw	ra,8(sp)
    6734:	000630c0 	call	630c <_Balloc>
    6738:	14400515 	stw	r17,20(r2)
    673c:	14000415 	stw	r16,16(r2)
    6740:	dfc00217 	ldw	ra,8(sp)
    6744:	dc400117 	ldw	r17,4(sp)
    6748:	dc000017 	ldw	r16,0(sp)
    674c:	dec00304 	addi	sp,sp,12
    6750:	f800283a 	ret

00006754 <__multiply>:
    6754:	defffa04 	addi	sp,sp,-24
    6758:	dcc00315 	stw	r19,12(sp)
    675c:	dc800215 	stw	r18,8(sp)
    6760:	34c00417 	ldw	r19,16(r6)
    6764:	2c800417 	ldw	r18,16(r5)
    6768:	dd000415 	stw	r20,16(sp)
    676c:	dc400115 	stw	r17,4(sp)
    6770:	dfc00515 	stw	ra,20(sp)
    6774:	dc000015 	stw	r16,0(sp)
    6778:	2829883a 	mov	r20,r5
    677c:	3023883a 	mov	r17,r6
    6780:	94c0050e 	bge	r18,r19,6798 <__multiply+0x44>
    6784:	9007883a 	mov	r3,r18
    6788:	3029883a 	mov	r20,r6
    678c:	9825883a 	mov	r18,r19
    6790:	2823883a 	mov	r17,r5
    6794:	1827883a 	mov	r19,r3
    6798:	a0800217 	ldw	r2,8(r20)
    679c:	94e1883a 	add	r16,r18,r19
    67a0:	a1400117 	ldw	r5,4(r20)
    67a4:	1400010e 	bge	r2,r16,67ac <__multiply+0x58>
    67a8:	29400044 	addi	r5,r5,1
    67ac:	000630c0 	call	630c <_Balloc>
    67b0:	8415883a 	add	r10,r16,r16
    67b4:	12c00504 	addi	r11,r2,20
    67b8:	5295883a 	add	r10,r10,r10
    67bc:	5a95883a 	add	r10,r11,r10
    67c0:	5807883a 	mov	r3,r11
    67c4:	5a80032e 	bgeu	r11,r10,67d4 <__multiply+0x80>
    67c8:	18000015 	stw	zero,0(r3)
    67cc:	18c00104 	addi	r3,r3,4
    67d0:	1abffd36 	bltu	r3,r10,67c8 <__multiply+0x74>
    67d4:	9ce7883a 	add	r19,r19,r19
    67d8:	94a5883a 	add	r18,r18,r18
    67dc:	89800504 	addi	r6,r17,20
    67e0:	9ce7883a 	add	r19,r19,r19
    67e4:	a3400504 	addi	r13,r20,20
    67e8:	94a5883a 	add	r18,r18,r18
    67ec:	34d9883a 	add	r12,r6,r19
    67f0:	6c93883a 	add	r9,r13,r18
    67f4:	3300422e 	bgeu	r6,r12,6900 <__multiply+0x1ac>
    67f8:	37c00017 	ldw	ra,0(r6)
    67fc:	fbffffcc 	andi	r15,ra,65535
    6800:	78001b26 	beq	r15,zero,6870 <__multiply+0x11c>
    6804:	5811883a 	mov	r8,r11
    6808:	681d883a 	mov	r14,r13
    680c:	000f883a 	mov	r7,zero
    6810:	71000017 	ldw	r4,0(r14)
    6814:	40c00017 	ldw	r3,0(r8)
    6818:	73800104 	addi	r14,r14,4
    681c:	217fffcc 	andi	r5,r4,65535
    6820:	2bcb383a 	mul	r5,r5,r15
    6824:	2008d43a 	srli	r4,r4,16
    6828:	1c7fffcc 	andi	r17,r3,65535
    682c:	2c4b883a 	add	r5,r5,r17
    6830:	29cb883a 	add	r5,r5,r7
    6834:	23c9383a 	mul	r4,r4,r15
    6838:	1806d43a 	srli	r3,r3,16
    683c:	280ed43a 	srli	r7,r5,16
    6840:	297fffcc 	andi	r5,r5,65535
    6844:	20c7883a 	add	r3,r4,r3
    6848:	19c7883a 	add	r3,r3,r7
    684c:	1808943a 	slli	r4,r3,16
    6850:	4023883a 	mov	r17,r8
    6854:	180ed43a 	srli	r7,r3,16
    6858:	214ab03a 	or	r5,r4,r5
    685c:	41400015 	stw	r5,0(r8)
    6860:	42000104 	addi	r8,r8,4
    6864:	727fea36 	bltu	r14,r9,6810 <__multiply+0xbc>
    6868:	89c00115 	stw	r7,4(r17)
    686c:	37c00017 	ldw	ra,0(r6)
    6870:	f83ed43a 	srli	ra,ra,16
    6874:	f8001f26 	beq	ra,zero,68f4 <__multiply+0x1a0>
    6878:	58c00017 	ldw	r3,0(r11)
    687c:	681d883a 	mov	r14,r13
    6880:	581f883a 	mov	r15,r11
    6884:	1811883a 	mov	r8,r3
    6888:	5825883a 	mov	r18,r11
    688c:	000f883a 	mov	r7,zero
    6890:	00000106 	br	6898 <__multiply+0x144>
    6894:	8825883a 	mov	r18,r17
    6898:	7140000b 	ldhu	r5,0(r14)
    689c:	4010d43a 	srli	r8,r8,16
    68a0:	193fffcc 	andi	r4,r3,65535
    68a4:	2fcb383a 	mul	r5,r5,ra
    68a8:	7bc00104 	addi	r15,r15,4
    68ac:	73800104 	addi	r14,r14,4
    68b0:	2a0b883a 	add	r5,r5,r8
    68b4:	29cb883a 	add	r5,r5,r7
    68b8:	2806943a 	slli	r3,r5,16
    68bc:	94400104 	addi	r17,r18,4
    68c0:	280ad43a 	srli	r5,r5,16
    68c4:	1908b03a 	or	r4,r3,r4
    68c8:	793fff15 	stw	r4,-4(r15)
    68cc:	70ffff17 	ldw	r3,-4(r14)
    68d0:	8a000017 	ldw	r8,0(r17)
    68d4:	1806d43a 	srli	r3,r3,16
    68d8:	413fffcc 	andi	r4,r8,65535
    68dc:	1fc7383a 	mul	r3,r3,ra
    68e0:	1907883a 	add	r3,r3,r4
    68e4:	1947883a 	add	r3,r3,r5
    68e8:	180ed43a 	srli	r7,r3,16
    68ec:	727fe936 	bltu	r14,r9,6894 <__multiply+0x140>
    68f0:	90c00115 	stw	r3,4(r18)
    68f4:	31800104 	addi	r6,r6,4
    68f8:	5ac00104 	addi	r11,r11,4
    68fc:	333fbe36 	bltu	r6,r12,67f8 <__multiply+0xa4>
    6900:	0400090e 	bge	zero,r16,6928 <__multiply+0x1d4>
    6904:	50ffff17 	ldw	r3,-4(r10)
    6908:	52bfff04 	addi	r10,r10,-4
    690c:	18000326 	beq	r3,zero,691c <__multiply+0x1c8>
    6910:	00000506 	br	6928 <__multiply+0x1d4>
    6914:	50c00017 	ldw	r3,0(r10)
    6918:	1800031e 	bne	r3,zero,6928 <__multiply+0x1d4>
    691c:	843fffc4 	addi	r16,r16,-1
    6920:	52bfff04 	addi	r10,r10,-4
    6924:	803ffb1e 	bne	r16,zero,6914 <__multiply+0x1c0>
    6928:	14000415 	stw	r16,16(r2)
    692c:	dfc00517 	ldw	ra,20(sp)
    6930:	dd000417 	ldw	r20,16(sp)
    6934:	dcc00317 	ldw	r19,12(sp)
    6938:	dc800217 	ldw	r18,8(sp)
    693c:	dc400117 	ldw	r17,4(sp)
    6940:	dc000017 	ldw	r16,0(sp)
    6944:	dec00604 	addi	sp,sp,24
    6948:	f800283a 	ret

0000694c <__pow5mult>:
    694c:	defffa04 	addi	sp,sp,-24
    6950:	dcc00315 	stw	r19,12(sp)
    6954:	dc000015 	stw	r16,0(sp)
    6958:	dfc00515 	stw	ra,20(sp)
    695c:	dd000415 	stw	r20,16(sp)
    6960:	dc800215 	stw	r18,8(sp)
    6964:	dc400115 	stw	r17,4(sp)
    6968:	308000cc 	andi	r2,r6,3
    696c:	3021883a 	mov	r16,r6
    6970:	2027883a 	mov	r19,r4
    6974:	10002f1e 	bne	r2,zero,6a34 <__pow5mult+0xe8>
    6978:	2825883a 	mov	r18,r5
    697c:	8021d0ba 	srai	r16,r16,2
    6980:	80001a26 	beq	r16,zero,69ec <__pow5mult+0xa0>
    6984:	9c401217 	ldw	r17,72(r19)
    6988:	8800061e 	bne	r17,zero,69a4 <__pow5mult+0x58>
    698c:	00003406 	br	6a60 <__pow5mult+0x114>
    6990:	8021d07a 	srai	r16,r16,1
    6994:	80001526 	beq	r16,zero,69ec <__pow5mult+0xa0>
    6998:	88800017 	ldw	r2,0(r17)
    699c:	10001c26 	beq	r2,zero,6a10 <__pow5mult+0xc4>
    69a0:	1023883a 	mov	r17,r2
    69a4:	8080004c 	andi	r2,r16,1
    69a8:	103ff926 	beq	r2,zero,6990 <__pow5mult+0x44>
    69ac:	880d883a 	mov	r6,r17
    69b0:	900b883a 	mov	r5,r18
    69b4:	9809883a 	mov	r4,r19
    69b8:	00067540 	call	6754 <__multiply>
    69bc:	90001b26 	beq	r18,zero,6a2c <__pow5mult+0xe0>
    69c0:	91000117 	ldw	r4,4(r18)
    69c4:	98c01317 	ldw	r3,76(r19)
    69c8:	8021d07a 	srai	r16,r16,1
    69cc:	2109883a 	add	r4,r4,r4
    69d0:	2109883a 	add	r4,r4,r4
    69d4:	1907883a 	add	r3,r3,r4
    69d8:	19000017 	ldw	r4,0(r3)
    69dc:	91000015 	stw	r4,0(r18)
    69e0:	1c800015 	stw	r18,0(r3)
    69e4:	1025883a 	mov	r18,r2
    69e8:	803feb1e 	bne	r16,zero,6998 <__pow5mult+0x4c>
    69ec:	9005883a 	mov	r2,r18
    69f0:	dfc00517 	ldw	ra,20(sp)
    69f4:	dd000417 	ldw	r20,16(sp)
    69f8:	dcc00317 	ldw	r19,12(sp)
    69fc:	dc800217 	ldw	r18,8(sp)
    6a00:	dc400117 	ldw	r17,4(sp)
    6a04:	dc000017 	ldw	r16,0(sp)
    6a08:	dec00604 	addi	sp,sp,24
    6a0c:	f800283a 	ret
    6a10:	880d883a 	mov	r6,r17
    6a14:	880b883a 	mov	r5,r17
    6a18:	9809883a 	mov	r4,r19
    6a1c:	00067540 	call	6754 <__multiply>
    6a20:	88800015 	stw	r2,0(r17)
    6a24:	10000015 	stw	zero,0(r2)
    6a28:	003fdd06 	br	69a0 <__pow5mult+0x54>
    6a2c:	1025883a 	mov	r18,r2
    6a30:	003fd706 	br	6990 <__pow5mult+0x44>
    6a34:	10bfffc4 	addi	r2,r2,-1
    6a38:	1085883a 	add	r2,r2,r2
    6a3c:	00c00074 	movhi	r3,1
    6a40:	18fd8104 	addi	r3,r3,-2556
    6a44:	1085883a 	add	r2,r2,r2
    6a48:	1885883a 	add	r2,r3,r2
    6a4c:	11800017 	ldw	r6,0(r2)
    6a50:	000f883a 	mov	r7,zero
    6a54:	00063dc0 	call	63dc <__multadd>
    6a58:	1025883a 	mov	r18,r2
    6a5c:	003fc706 	br	697c <__pow5mult+0x30>
    6a60:	05000044 	movi	r20,1
    6a64:	a00b883a 	mov	r5,r20
    6a68:	9809883a 	mov	r4,r19
    6a6c:	000630c0 	call	630c <_Balloc>
    6a70:	1023883a 	mov	r17,r2
    6a74:	00809c44 	movi	r2,625
    6a78:	88800515 	stw	r2,20(r17)
    6a7c:	8d000415 	stw	r20,16(r17)
    6a80:	9c401215 	stw	r17,72(r19)
    6a84:	88000015 	stw	zero,0(r17)
    6a88:	003fc606 	br	69a4 <__pow5mult+0x58>

00006a8c <__lshift>:
    6a8c:	defff904 	addi	sp,sp,-28
    6a90:	dd400515 	stw	r21,20(sp)
    6a94:	dcc00315 	stw	r19,12(sp)
    6a98:	302bd17a 	srai	r21,r6,5
    6a9c:	2cc00417 	ldw	r19,16(r5)
    6aa0:	28800217 	ldw	r2,8(r5)
    6aa4:	dd000415 	stw	r20,16(sp)
    6aa8:	ace7883a 	add	r19,r21,r19
    6aac:	dc800215 	stw	r18,8(sp)
    6ab0:	dc400115 	stw	r17,4(sp)
    6ab4:	dc000015 	stw	r16,0(sp)
    6ab8:	dfc00615 	stw	ra,24(sp)
    6abc:	9c000044 	addi	r16,r19,1
    6ac0:	2823883a 	mov	r17,r5
    6ac4:	3029883a 	mov	r20,r6
    6ac8:	2025883a 	mov	r18,r4
    6acc:	29400117 	ldw	r5,4(r5)
    6ad0:	1400030e 	bge	r2,r16,6ae0 <__lshift+0x54>
    6ad4:	1085883a 	add	r2,r2,r2
    6ad8:	29400044 	addi	r5,r5,1
    6adc:	143ffd16 	blt	r2,r16,6ad4 <__lshift+0x48>
    6ae0:	9009883a 	mov	r4,r18
    6ae4:	000630c0 	call	630c <_Balloc>
    6ae8:	10c00504 	addi	r3,r2,20
    6aec:	0540070e 	bge	zero,r21,6b0c <__lshift+0x80>
    6af0:	ad6b883a 	add	r21,r21,r21
    6af4:	ad6b883a 	add	r21,r21,r21
    6af8:	1809883a 	mov	r4,r3
    6afc:	1d47883a 	add	r3,r3,r21
    6b00:	20000015 	stw	zero,0(r4)
    6b04:	21000104 	addi	r4,r4,4
    6b08:	193ffd1e 	bne	r3,r4,6b00 <__lshift+0x74>
    6b0c:	8a000417 	ldw	r8,16(r17)
    6b10:	89000504 	addi	r4,r17,20
    6b14:	a18007cc 	andi	r6,r20,31
    6b18:	4211883a 	add	r8,r8,r8
    6b1c:	4211883a 	add	r8,r8,r8
    6b20:	2211883a 	add	r8,r4,r8
    6b24:	30002326 	beq	r6,zero,6bb4 <__lshift+0x128>
    6b28:	02400804 	movi	r9,32
    6b2c:	4993c83a 	sub	r9,r9,r6
    6b30:	000b883a 	mov	r5,zero
    6b34:	21c00017 	ldw	r7,0(r4)
    6b38:	1815883a 	mov	r10,r3
    6b3c:	18c00104 	addi	r3,r3,4
    6b40:	398e983a 	sll	r7,r7,r6
    6b44:	21000104 	addi	r4,r4,4
    6b48:	394ab03a 	or	r5,r7,r5
    6b4c:	197fff15 	stw	r5,-4(r3)
    6b50:	217fff17 	ldw	r5,-4(r4)
    6b54:	2a4ad83a 	srl	r5,r5,r9
    6b58:	223ff636 	bltu	r4,r8,6b34 <__lshift+0xa8>
    6b5c:	51400115 	stw	r5,4(r10)
    6b60:	28001a1e 	bne	r5,zero,6bcc <__lshift+0x140>
    6b64:	843fffc4 	addi	r16,r16,-1
    6b68:	14000415 	stw	r16,16(r2)
    6b6c:	88000826 	beq	r17,zero,6b90 <__lshift+0x104>
    6b70:	89000117 	ldw	r4,4(r17)
    6b74:	90c01317 	ldw	r3,76(r18)
    6b78:	2109883a 	add	r4,r4,r4
    6b7c:	2109883a 	add	r4,r4,r4
    6b80:	1907883a 	add	r3,r3,r4
    6b84:	19000017 	ldw	r4,0(r3)
    6b88:	89000015 	stw	r4,0(r17)
    6b8c:	1c400015 	stw	r17,0(r3)
    6b90:	dfc00617 	ldw	ra,24(sp)
    6b94:	dd400517 	ldw	r21,20(sp)
    6b98:	dd000417 	ldw	r20,16(sp)
    6b9c:	dcc00317 	ldw	r19,12(sp)
    6ba0:	dc800217 	ldw	r18,8(sp)
    6ba4:	dc400117 	ldw	r17,4(sp)
    6ba8:	dc000017 	ldw	r16,0(sp)
    6bac:	dec00704 	addi	sp,sp,28
    6bb0:	f800283a 	ret
    6bb4:	21400017 	ldw	r5,0(r4)
    6bb8:	18c00104 	addi	r3,r3,4
    6bbc:	21000104 	addi	r4,r4,4
    6bc0:	197fff15 	stw	r5,-4(r3)
    6bc4:	223ffb36 	bltu	r4,r8,6bb4 <__lshift+0x128>
    6bc8:	003fe606 	br	6b64 <__lshift+0xd8>
    6bcc:	9c000084 	addi	r16,r19,2
    6bd0:	003fe406 	br	6b64 <__lshift+0xd8>

00006bd4 <__mcmp>:
    6bd4:	20800417 	ldw	r2,16(r4)
    6bd8:	28c00417 	ldw	r3,16(r5)
    6bdc:	10c5c83a 	sub	r2,r2,r3
    6be0:	1000111e 	bne	r2,zero,6c28 <__mcmp+0x54>
    6be4:	18c7883a 	add	r3,r3,r3
    6be8:	18c7883a 	add	r3,r3,r3
    6bec:	21000504 	addi	r4,r4,20
    6bf0:	29400504 	addi	r5,r5,20
    6bf4:	20c5883a 	add	r2,r4,r3
    6bf8:	28cb883a 	add	r5,r5,r3
    6bfc:	00000106 	br	6c04 <__mcmp+0x30>
    6c00:	20800a2e 	bgeu	r4,r2,6c2c <__mcmp+0x58>
    6c04:	10bfff04 	addi	r2,r2,-4
    6c08:	297fff04 	addi	r5,r5,-4
    6c0c:	11800017 	ldw	r6,0(r2)
    6c10:	28c00017 	ldw	r3,0(r5)
    6c14:	30fffa26 	beq	r6,r3,6c00 <__mcmp+0x2c>
    6c18:	30c00236 	bltu	r6,r3,6c24 <__mcmp+0x50>
    6c1c:	00800044 	movi	r2,1
    6c20:	f800283a 	ret
    6c24:	00bfffc4 	movi	r2,-1
    6c28:	f800283a 	ret
    6c2c:	0005883a 	mov	r2,zero
    6c30:	f800283a 	ret

00006c34 <__mdiff>:
    6c34:	28c00417 	ldw	r3,16(r5)
    6c38:	30800417 	ldw	r2,16(r6)
    6c3c:	defffa04 	addi	sp,sp,-24
    6c40:	dcc00315 	stw	r19,12(sp)
    6c44:	dc800215 	stw	r18,8(sp)
    6c48:	dfc00515 	stw	ra,20(sp)
    6c4c:	dd000415 	stw	r20,16(sp)
    6c50:	dc400115 	stw	r17,4(sp)
    6c54:	dc000015 	stw	r16,0(sp)
    6c58:	1887c83a 	sub	r3,r3,r2
    6c5c:	2825883a 	mov	r18,r5
    6c60:	3027883a 	mov	r19,r6
    6c64:	1800141e 	bne	r3,zero,6cb8 <__mdiff+0x84>
    6c68:	1085883a 	add	r2,r2,r2
    6c6c:	1085883a 	add	r2,r2,r2
    6c70:	2a000504 	addi	r8,r5,20
    6c74:	34000504 	addi	r16,r6,20
    6c78:	4087883a 	add	r3,r8,r2
    6c7c:	8085883a 	add	r2,r16,r2
    6c80:	00000106 	br	6c88 <__mdiff+0x54>
    6c84:	40c0592e 	bgeu	r8,r3,6dec <__mdiff+0x1b8>
    6c88:	18ffff04 	addi	r3,r3,-4
    6c8c:	10bfff04 	addi	r2,r2,-4
    6c90:	19c00017 	ldw	r7,0(r3)
    6c94:	11400017 	ldw	r5,0(r2)
    6c98:	397ffa26 	beq	r7,r5,6c84 <__mdiff+0x50>
    6c9c:	3940592e 	bgeu	r7,r5,6e04 <__mdiff+0x1d0>
    6ca0:	9005883a 	mov	r2,r18
    6ca4:	4023883a 	mov	r17,r8
    6ca8:	9825883a 	mov	r18,r19
    6cac:	05000044 	movi	r20,1
    6cb0:	1027883a 	mov	r19,r2
    6cb4:	00000406 	br	6cc8 <__mdiff+0x94>
    6cb8:	18005616 	blt	r3,zero,6e14 <__mdiff+0x1e0>
    6cbc:	34400504 	addi	r17,r6,20
    6cc0:	2c000504 	addi	r16,r5,20
    6cc4:	0029883a 	mov	r20,zero
    6cc8:	91400117 	ldw	r5,4(r18)
    6ccc:	000630c0 	call	630c <_Balloc>
    6cd0:	92400417 	ldw	r9,16(r18)
    6cd4:	9b000417 	ldw	r12,16(r19)
    6cd8:	12c00504 	addi	r11,r2,20
    6cdc:	4a51883a 	add	r8,r9,r9
    6ce0:	6319883a 	add	r12,r12,r12
    6ce4:	4211883a 	add	r8,r8,r8
    6ce8:	6319883a 	add	r12,r12,r12
    6cec:	15000315 	stw	r20,12(r2)
    6cf0:	8211883a 	add	r8,r16,r8
    6cf4:	8b19883a 	add	r12,r17,r12
    6cf8:	0007883a 	mov	r3,zero
    6cfc:	81400017 	ldw	r5,0(r16)
    6d00:	89c00017 	ldw	r7,0(r17)
    6d04:	59800104 	addi	r6,r11,4
    6d08:	293fffcc 	andi	r4,r5,65535
    6d0c:	20c7883a 	add	r3,r4,r3
    6d10:	393fffcc 	andi	r4,r7,65535
    6d14:	1909c83a 	sub	r4,r3,r4
    6d18:	280ad43a 	srli	r5,r5,16
    6d1c:	380ed43a 	srli	r7,r7,16
    6d20:	2007d43a 	srai	r3,r4,16
    6d24:	213fffcc 	andi	r4,r4,65535
    6d28:	29cbc83a 	sub	r5,r5,r7
    6d2c:	28c7883a 	add	r3,r5,r3
    6d30:	180a943a 	slli	r5,r3,16
    6d34:	8c400104 	addi	r17,r17,4
    6d38:	84000104 	addi	r16,r16,4
    6d3c:	2908b03a 	or	r4,r5,r4
    6d40:	59000015 	stw	r4,0(r11)
    6d44:	1807d43a 	srai	r3,r3,16
    6d48:	3015883a 	mov	r10,r6
    6d4c:	3017883a 	mov	r11,r6
    6d50:	8b3fea36 	bltu	r17,r12,6cfc <__mdiff+0xc8>
    6d54:	8200162e 	bgeu	r16,r8,6db0 <__mdiff+0x17c>
    6d58:	8017883a 	mov	r11,r16
    6d5c:	59400017 	ldw	r5,0(r11)
    6d60:	31800104 	addi	r6,r6,4
    6d64:	5ac00104 	addi	r11,r11,4
    6d68:	293fffcc 	andi	r4,r5,65535
    6d6c:	20c7883a 	add	r3,r4,r3
    6d70:	280ed43a 	srli	r7,r5,16
    6d74:	180bd43a 	srai	r5,r3,16
    6d78:	193fffcc 	andi	r4,r3,65535
    6d7c:	3947883a 	add	r3,r7,r5
    6d80:	180a943a 	slli	r5,r3,16
    6d84:	1807d43a 	srai	r3,r3,16
    6d88:	2908b03a 	or	r4,r5,r4
    6d8c:	313fff15 	stw	r4,-4(r6)
    6d90:	5a3ff236 	bltu	r11,r8,6d5c <__mdiff+0x128>
    6d94:	0406303a 	nor	r3,zero,r16
    6d98:	1a07883a 	add	r3,r3,r8
    6d9c:	1806d0ba 	srli	r3,r3,2
    6da0:	18c00044 	addi	r3,r3,1
    6da4:	18c7883a 	add	r3,r3,r3
    6da8:	18c7883a 	add	r3,r3,r3
    6dac:	50d5883a 	add	r10,r10,r3
    6db0:	50ffff04 	addi	r3,r10,-4
    6db4:	2000041e 	bne	r4,zero,6dc8 <__mdiff+0x194>
    6db8:	18ffff04 	addi	r3,r3,-4
    6dbc:	19000017 	ldw	r4,0(r3)
    6dc0:	4a7fffc4 	addi	r9,r9,-1
    6dc4:	203ffc26 	beq	r4,zero,6db8 <__mdiff+0x184>
    6dc8:	12400415 	stw	r9,16(r2)
    6dcc:	dfc00517 	ldw	ra,20(sp)
    6dd0:	dd000417 	ldw	r20,16(sp)
    6dd4:	dcc00317 	ldw	r19,12(sp)
    6dd8:	dc800217 	ldw	r18,8(sp)
    6ddc:	dc400117 	ldw	r17,4(sp)
    6de0:	dc000017 	ldw	r16,0(sp)
    6de4:	dec00604 	addi	sp,sp,24
    6de8:	f800283a 	ret
    6dec:	000b883a 	mov	r5,zero
    6df0:	000630c0 	call	630c <_Balloc>
    6df4:	00c00044 	movi	r3,1
    6df8:	10c00415 	stw	r3,16(r2)
    6dfc:	10000515 	stw	zero,20(r2)
    6e00:	003ff206 	br	6dcc <__mdiff+0x198>
    6e04:	8023883a 	mov	r17,r16
    6e08:	0029883a 	mov	r20,zero
    6e0c:	4021883a 	mov	r16,r8
    6e10:	003fad06 	br	6cc8 <__mdiff+0x94>
    6e14:	9005883a 	mov	r2,r18
    6e18:	94400504 	addi	r17,r18,20
    6e1c:	9c000504 	addi	r16,r19,20
    6e20:	9825883a 	mov	r18,r19
    6e24:	05000044 	movi	r20,1
    6e28:	1027883a 	mov	r19,r2
    6e2c:	003fa606 	br	6cc8 <__mdiff+0x94>

00006e30 <__ulp>:
    6e30:	295ffc2c 	andhi	r5,r5,32752
    6e34:	00bf3034 	movhi	r2,64704
    6e38:	2887883a 	add	r3,r5,r2
    6e3c:	00c0020e 	bge	zero,r3,6e48 <__ulp+0x18>
    6e40:	0005883a 	mov	r2,zero
    6e44:	f800283a 	ret
    6e48:	00c7c83a 	sub	r3,zero,r3
    6e4c:	1807d53a 	srai	r3,r3,20
    6e50:	008004c4 	movi	r2,19
    6e54:	10c00b0e 	bge	r2,r3,6e84 <__ulp+0x54>
    6e58:	18bffb04 	addi	r2,r3,-20
    6e5c:	01000784 	movi	r4,30
    6e60:	0007883a 	mov	r3,zero
    6e64:	20800516 	blt	r4,r2,6e7c <__ulp+0x4c>
    6e68:	010007c4 	movi	r4,31
    6e6c:	2089c83a 	sub	r4,r4,r2
    6e70:	00800044 	movi	r2,1
    6e74:	1104983a 	sll	r2,r2,r4
    6e78:	f800283a 	ret
    6e7c:	00800044 	movi	r2,1
    6e80:	f800283a 	ret
    6e84:	01400234 	movhi	r5,8
    6e88:	28c7d83a 	sra	r3,r5,r3
    6e8c:	0005883a 	mov	r2,zero
    6e90:	f800283a 	ret

00006e94 <__b2d>:
    6e94:	defffa04 	addi	sp,sp,-24
    6e98:	dc000015 	stw	r16,0(sp)
    6e9c:	24000417 	ldw	r16,16(r4)
    6ea0:	dc400115 	stw	r17,4(sp)
    6ea4:	24400504 	addi	r17,r4,20
    6ea8:	8421883a 	add	r16,r16,r16
    6eac:	8421883a 	add	r16,r16,r16
    6eb0:	8c21883a 	add	r16,r17,r16
    6eb4:	dc800215 	stw	r18,8(sp)
    6eb8:	84bfff17 	ldw	r18,-4(r16)
    6ebc:	dd000415 	stw	r20,16(sp)
    6ec0:	dcc00315 	stw	r19,12(sp)
    6ec4:	9009883a 	mov	r4,r18
    6ec8:	2829883a 	mov	r20,r5
    6ecc:	dfc00515 	stw	ra,20(sp)
    6ed0:	00066000 	call	6600 <__hi0bits>
    6ed4:	00c00804 	movi	r3,32
    6ed8:	1889c83a 	sub	r4,r3,r2
    6edc:	a1000015 	stw	r4,0(r20)
    6ee0:	01000284 	movi	r4,10
    6ee4:	84ffff04 	addi	r19,r16,-4
    6ee8:	20801216 	blt	r4,r2,6f34 <__b2d+0xa0>
    6eec:	018002c4 	movi	r6,11
    6ef0:	308dc83a 	sub	r6,r6,r2
    6ef4:	9186d83a 	srl	r3,r18,r6
    6ef8:	18cffc34 	orhi	r3,r3,16368
    6efc:	8cc0212e 	bgeu	r17,r19,6f84 <__b2d+0xf0>
    6f00:	813ffe17 	ldw	r4,-8(r16)
    6f04:	218cd83a 	srl	r6,r4,r6
    6f08:	10800544 	addi	r2,r2,21
    6f0c:	9084983a 	sll	r2,r18,r2
    6f10:	1184b03a 	or	r2,r2,r6
    6f14:	dfc00517 	ldw	ra,20(sp)
    6f18:	dd000417 	ldw	r20,16(sp)
    6f1c:	dcc00317 	ldw	r19,12(sp)
    6f20:	dc800217 	ldw	r18,8(sp)
    6f24:	dc400117 	ldw	r17,4(sp)
    6f28:	dc000017 	ldw	r16,0(sp)
    6f2c:	dec00604 	addi	sp,sp,24
    6f30:	f800283a 	ret
    6f34:	8cc00f2e 	bgeu	r17,r19,6f74 <__b2d+0xe0>
    6f38:	117ffd44 	addi	r5,r2,-11
    6f3c:	80bffe17 	ldw	r2,-8(r16)
    6f40:	28000e26 	beq	r5,zero,6f7c <__b2d+0xe8>
    6f44:	1949c83a 	sub	r4,r3,r5
    6f48:	9164983a 	sll	r18,r18,r5
    6f4c:	1106d83a 	srl	r3,r2,r4
    6f50:	81bffe04 	addi	r6,r16,-8
    6f54:	948ffc34 	orhi	r18,r18,16368
    6f58:	90c6b03a 	or	r3,r18,r3
    6f5c:	89800e2e 	bgeu	r17,r6,6f98 <__b2d+0x104>
    6f60:	81bffd17 	ldw	r6,-12(r16)
    6f64:	1144983a 	sll	r2,r2,r5
    6f68:	310ad83a 	srl	r5,r6,r4
    6f6c:	2884b03a 	or	r2,r5,r2
    6f70:	003fe806 	br	6f14 <__b2d+0x80>
    6f74:	10bffd44 	addi	r2,r2,-11
    6f78:	1000041e 	bne	r2,zero,6f8c <__b2d+0xf8>
    6f7c:	90cffc34 	orhi	r3,r18,16368
    6f80:	003fe406 	br	6f14 <__b2d+0x80>
    6f84:	000d883a 	mov	r6,zero
    6f88:	003fdf06 	br	6f08 <__b2d+0x74>
    6f8c:	90a4983a 	sll	r18,r18,r2
    6f90:	0005883a 	mov	r2,zero
    6f94:	003ff906 	br	6f7c <__b2d+0xe8>
    6f98:	1144983a 	sll	r2,r2,r5
    6f9c:	003fdd06 	br	6f14 <__b2d+0x80>

00006fa0 <__d2b>:
    6fa0:	defff804 	addi	sp,sp,-32
    6fa4:	dc000215 	stw	r16,8(sp)
    6fa8:	3021883a 	mov	r16,r6
    6fac:	dc400315 	stw	r17,12(sp)
    6fb0:	8022907a 	slli	r17,r16,1
    6fb4:	dd000615 	stw	r20,24(sp)
    6fb8:	2829883a 	mov	r20,r5
    6fbc:	01400044 	movi	r5,1
    6fc0:	dcc00515 	stw	r19,20(sp)
    6fc4:	dc800415 	stw	r18,16(sp)
    6fc8:	dfc00715 	stw	ra,28(sp)
    6fcc:	3825883a 	mov	r18,r7
    6fd0:	8822d57a 	srli	r17,r17,21
    6fd4:	000630c0 	call	630c <_Balloc>
    6fd8:	1027883a 	mov	r19,r2
    6fdc:	00800434 	movhi	r2,16
    6fe0:	10bfffc4 	addi	r2,r2,-1
    6fe4:	808c703a 	and	r6,r16,r2
    6fe8:	88000126 	beq	r17,zero,6ff0 <__d2b+0x50>
    6fec:	31800434 	orhi	r6,r6,16
    6ff0:	d9800015 	stw	r6,0(sp)
    6ff4:	a0002426 	beq	r20,zero,7088 <__d2b+0xe8>
    6ff8:	d9000104 	addi	r4,sp,4
    6ffc:	dd000115 	stw	r20,4(sp)
    7000:	00066680 	call	6668 <__lo0bits>
    7004:	d8c00017 	ldw	r3,0(sp)
    7008:	10002f1e 	bne	r2,zero,70c8 <__d2b+0x128>
    700c:	d9000117 	ldw	r4,4(sp)
    7010:	99000515 	stw	r4,20(r19)
    7014:	1821003a 	cmpeq	r16,r3,zero
    7018:	01000084 	movi	r4,2
    701c:	2421c83a 	sub	r16,r4,r16
    7020:	98c00615 	stw	r3,24(r19)
    7024:	9c000415 	stw	r16,16(r19)
    7028:	88001f1e 	bne	r17,zero,70a8 <__d2b+0x108>
    702c:	10bef384 	addi	r2,r2,-1074
    7030:	90800015 	stw	r2,0(r18)
    7034:	00900034 	movhi	r2,16384
    7038:	10bfffc4 	addi	r2,r2,-1
    703c:	8085883a 	add	r2,r16,r2
    7040:	1085883a 	add	r2,r2,r2
    7044:	1085883a 	add	r2,r2,r2
    7048:	9885883a 	add	r2,r19,r2
    704c:	11000517 	ldw	r4,20(r2)
    7050:	8020917a 	slli	r16,r16,5
    7054:	00066000 	call	6600 <__hi0bits>
    7058:	d8c00817 	ldw	r3,32(sp)
    705c:	8085c83a 	sub	r2,r16,r2
    7060:	18800015 	stw	r2,0(r3)
    7064:	9805883a 	mov	r2,r19
    7068:	dfc00717 	ldw	ra,28(sp)
    706c:	dd000617 	ldw	r20,24(sp)
    7070:	dcc00517 	ldw	r19,20(sp)
    7074:	dc800417 	ldw	r18,16(sp)
    7078:	dc400317 	ldw	r17,12(sp)
    707c:	dc000217 	ldw	r16,8(sp)
    7080:	dec00804 	addi	sp,sp,32
    7084:	f800283a 	ret
    7088:	d809883a 	mov	r4,sp
    708c:	00066680 	call	6668 <__lo0bits>
    7090:	d8c00017 	ldw	r3,0(sp)
    7094:	04000044 	movi	r16,1
    7098:	9c000415 	stw	r16,16(r19)
    709c:	98c00515 	stw	r3,20(r19)
    70a0:	10800804 	addi	r2,r2,32
    70a4:	883fe126 	beq	r17,zero,702c <__d2b+0x8c>
    70a8:	00c00d44 	movi	r3,53
    70ac:	8c7ef344 	addi	r17,r17,-1075
    70b0:	88a3883a 	add	r17,r17,r2
    70b4:	1885c83a 	sub	r2,r3,r2
    70b8:	d8c00817 	ldw	r3,32(sp)
    70bc:	94400015 	stw	r17,0(r18)
    70c0:	18800015 	stw	r2,0(r3)
    70c4:	003fe706 	br	7064 <__d2b+0xc4>
    70c8:	01000804 	movi	r4,32
    70cc:	2089c83a 	sub	r4,r4,r2
    70d0:	1908983a 	sll	r4,r3,r4
    70d4:	d9400117 	ldw	r5,4(sp)
    70d8:	1886d83a 	srl	r3,r3,r2
    70dc:	2148b03a 	or	r4,r4,r5
    70e0:	99000515 	stw	r4,20(r19)
    70e4:	d8c00015 	stw	r3,0(sp)
    70e8:	003fca06 	br	7014 <__d2b+0x74>

000070ec <__ratio>:
    70ec:	defff904 	addi	sp,sp,-28
    70f0:	dc400315 	stw	r17,12(sp)
    70f4:	2823883a 	mov	r17,r5
    70f8:	d9400104 	addi	r5,sp,4
    70fc:	dfc00615 	stw	ra,24(sp)
    7100:	dcc00515 	stw	r19,20(sp)
    7104:	dc800415 	stw	r18,16(sp)
    7108:	2027883a 	mov	r19,r4
    710c:	dc000215 	stw	r16,8(sp)
    7110:	0006e940 	call	6e94 <__b2d>
    7114:	d80b883a 	mov	r5,sp
    7118:	8809883a 	mov	r4,r17
    711c:	1025883a 	mov	r18,r2
    7120:	1821883a 	mov	r16,r3
    7124:	0006e940 	call	6e94 <__b2d>
    7128:	8a000417 	ldw	r8,16(r17)
    712c:	99000417 	ldw	r4,16(r19)
    7130:	d9400117 	ldw	r5,4(sp)
    7134:	2209c83a 	sub	r4,r4,r8
    7138:	2010917a 	slli	r8,r4,5
    713c:	d9000017 	ldw	r4,0(sp)
    7140:	2909c83a 	sub	r4,r5,r4
    7144:	4109883a 	add	r4,r8,r4
    7148:	01000e0e 	bge	zero,r4,7184 <__ratio+0x98>
    714c:	2008953a 	slli	r4,r4,20
    7150:	2421883a 	add	r16,r4,r16
    7154:	100d883a 	mov	r6,r2
    7158:	180f883a 	mov	r7,r3
    715c:	9009883a 	mov	r4,r18
    7160:	800b883a 	mov	r5,r16
    7164:	000afd80 	call	afd8 <__divdf3>
    7168:	dfc00617 	ldw	ra,24(sp)
    716c:	dcc00517 	ldw	r19,20(sp)
    7170:	dc800417 	ldw	r18,16(sp)
    7174:	dc400317 	ldw	r17,12(sp)
    7178:	dc000217 	ldw	r16,8(sp)
    717c:	dec00704 	addi	sp,sp,28
    7180:	f800283a 	ret
    7184:	2008953a 	slli	r4,r4,20
    7188:	1907c83a 	sub	r3,r3,r4
    718c:	003ff106 	br	7154 <__ratio+0x68>

00007190 <_mprec_log10>:
    7190:	defffe04 	addi	sp,sp,-8
    7194:	dc000015 	stw	r16,0(sp)
    7198:	dfc00115 	stw	ra,4(sp)
    719c:	008005c4 	movi	r2,23
    71a0:	2021883a 	mov	r16,r4
    71a4:	11000d0e 	bge	r2,r4,71dc <_mprec_log10+0x4c>
    71a8:	0005883a 	mov	r2,zero
    71ac:	00cffc34 	movhi	r3,16368
    71b0:	843fffc4 	addi	r16,r16,-1
    71b4:	000d883a 	mov	r6,zero
    71b8:	01d00934 	movhi	r7,16420
    71bc:	1009883a 	mov	r4,r2
    71c0:	180b883a 	mov	r5,r3
    71c4:	000bb180 	call	bb18 <__muldf3>
    71c8:	803ff91e 	bne	r16,zero,71b0 <_mprec_log10+0x20>
    71cc:	dfc00117 	ldw	ra,4(sp)
    71d0:	dc000017 	ldw	r16,0(sp)
    71d4:	dec00204 	addi	sp,sp,8
    71d8:	f800283a 	ret
    71dc:	202090fa 	slli	r16,r4,3
    71e0:	00800074 	movhi	r2,1
    71e4:	10bd9804 	addi	r2,r2,-2464
    71e8:	1421883a 	add	r16,r2,r16
    71ec:	80800017 	ldw	r2,0(r16)
    71f0:	80c00117 	ldw	r3,4(r16)
    71f4:	dfc00117 	ldw	ra,4(sp)
    71f8:	dc000017 	ldw	r16,0(sp)
    71fc:	dec00204 	addi	sp,sp,8
    7200:	f800283a 	ret

00007204 <__copybits>:
    7204:	297fffc4 	addi	r5,r5,-1
    7208:	280fd17a 	srai	r7,r5,5
    720c:	30c00417 	ldw	r3,16(r6)
    7210:	30800504 	addi	r2,r6,20
    7214:	39c00044 	addi	r7,r7,1
    7218:	18c7883a 	add	r3,r3,r3
    721c:	39cf883a 	add	r7,r7,r7
    7220:	18c7883a 	add	r3,r3,r3
    7224:	39cf883a 	add	r7,r7,r7
    7228:	10c7883a 	add	r3,r2,r3
    722c:	21cf883a 	add	r7,r4,r7
    7230:	10c00d2e 	bgeu	r2,r3,7268 <__copybits+0x64>
    7234:	200b883a 	mov	r5,r4
    7238:	12000017 	ldw	r8,0(r2)
    723c:	29400104 	addi	r5,r5,4
    7240:	10800104 	addi	r2,r2,4
    7244:	2a3fff15 	stw	r8,-4(r5)
    7248:	10fffb36 	bltu	r2,r3,7238 <__copybits+0x34>
    724c:	1985c83a 	sub	r2,r3,r6
    7250:	10bffac4 	addi	r2,r2,-21
    7254:	1004d0ba 	srli	r2,r2,2
    7258:	10800044 	addi	r2,r2,1
    725c:	1085883a 	add	r2,r2,r2
    7260:	1085883a 	add	r2,r2,r2
    7264:	2089883a 	add	r4,r4,r2
    7268:	21c0032e 	bgeu	r4,r7,7278 <__copybits+0x74>
    726c:	20000015 	stw	zero,0(r4)
    7270:	21000104 	addi	r4,r4,4
    7274:	21fffd36 	bltu	r4,r7,726c <__copybits+0x68>
    7278:	f800283a 	ret

0000727c <__any_on>:
    727c:	20c00417 	ldw	r3,16(r4)
    7280:	2805d17a 	srai	r2,r5,5
    7284:	21000504 	addi	r4,r4,20
    7288:	18800d0e 	bge	r3,r2,72c0 <__any_on+0x44>
    728c:	18c7883a 	add	r3,r3,r3
    7290:	18c7883a 	add	r3,r3,r3
    7294:	20c7883a 	add	r3,r4,r3
    7298:	20c0192e 	bgeu	r4,r3,7300 <__any_on+0x84>
    729c:	18bfff17 	ldw	r2,-4(r3)
    72a0:	18ffff04 	addi	r3,r3,-4
    72a4:	1000041e 	bne	r2,zero,72b8 <__any_on+0x3c>
    72a8:	20c0142e 	bgeu	r4,r3,72fc <__any_on+0x80>
    72ac:	18ffff04 	addi	r3,r3,-4
    72b0:	19400017 	ldw	r5,0(r3)
    72b4:	283ffc26 	beq	r5,zero,72a8 <__any_on+0x2c>
    72b8:	00800044 	movi	r2,1
    72bc:	f800283a 	ret
    72c0:	10c00a0e 	bge	r2,r3,72ec <__any_on+0x70>
    72c4:	1085883a 	add	r2,r2,r2
    72c8:	1085883a 	add	r2,r2,r2
    72cc:	294007cc 	andi	r5,r5,31
    72d0:	2087883a 	add	r3,r4,r2
    72d4:	283ff026 	beq	r5,zero,7298 <__any_on+0x1c>
    72d8:	19800017 	ldw	r6,0(r3)
    72dc:	3144d83a 	srl	r2,r6,r5
    72e0:	114a983a 	sll	r5,r2,r5
    72e4:	317ff41e 	bne	r6,r5,72b8 <__any_on+0x3c>
    72e8:	003feb06 	br	7298 <__any_on+0x1c>
    72ec:	1085883a 	add	r2,r2,r2
    72f0:	1085883a 	add	r2,r2,r2
    72f4:	2087883a 	add	r3,r4,r2
    72f8:	003fe706 	br	7298 <__any_on+0x1c>
    72fc:	f800283a 	ret
    7300:	0005883a 	mov	r2,zero
    7304:	f800283a 	ret

00007308 <_realloc_r>:
    7308:	defff604 	addi	sp,sp,-40
    730c:	dc800215 	stw	r18,8(sp)
    7310:	dfc00915 	stw	ra,36(sp)
    7314:	df000815 	stw	fp,32(sp)
    7318:	ddc00715 	stw	r23,28(sp)
    731c:	dd800615 	stw	r22,24(sp)
    7320:	dd400515 	stw	r21,20(sp)
    7324:	dd000415 	stw	r20,16(sp)
    7328:	dcc00315 	stw	r19,12(sp)
    732c:	dc400115 	stw	r17,4(sp)
    7330:	dc000015 	stw	r16,0(sp)
    7334:	3025883a 	mov	r18,r6
    7338:	2800b726 	beq	r5,zero,7618 <_realloc_r+0x310>
    733c:	282b883a 	mov	r21,r5
    7340:	2029883a 	mov	r20,r4
    7344:	000d3580 	call	d358 <__malloc_lock>
    7348:	a8bfff17 	ldw	r2,-4(r21)
    734c:	043fff04 	movi	r16,-4
    7350:	90c002c4 	addi	r3,r18,11
    7354:	01000584 	movi	r4,22
    7358:	acfffe04 	addi	r19,r21,-8
    735c:	1420703a 	and	r16,r2,r16
    7360:	20c0332e 	bgeu	r4,r3,7430 <_realloc_r+0x128>
    7364:	047ffe04 	movi	r17,-8
    7368:	1c62703a 	and	r17,r3,r17
    736c:	8807883a 	mov	r3,r17
    7370:	88005816 	blt	r17,zero,74d4 <_realloc_r+0x1cc>
    7374:	8c805736 	bltu	r17,r18,74d4 <_realloc_r+0x1cc>
    7378:	80c0300e 	bge	r16,r3,743c <_realloc_r+0x134>
    737c:	07000074 	movhi	fp,1
    7380:	e73f4404 	addi	fp,fp,-752
    7384:	e1c00217 	ldw	r7,8(fp)
    7388:	9c09883a 	add	r4,r19,r16
    738c:	22000117 	ldw	r8,4(r4)
    7390:	21c06326 	beq	r4,r7,7520 <_realloc_r+0x218>
    7394:	017fff84 	movi	r5,-2
    7398:	414a703a 	and	r5,r8,r5
    739c:	214b883a 	add	r5,r4,r5
    73a0:	29800117 	ldw	r6,4(r5)
    73a4:	3180004c 	andi	r6,r6,1
    73a8:	30003f26 	beq	r6,zero,74a8 <_realloc_r+0x1a0>
    73ac:	1080004c 	andi	r2,r2,1
    73b0:	10008326 	beq	r2,zero,75c0 <_realloc_r+0x2b8>
    73b4:	900b883a 	mov	r5,r18
    73b8:	a009883a 	mov	r4,r20
    73bc:	00057980 	call	5798 <_malloc_r>
    73c0:	1025883a 	mov	r18,r2
    73c4:	10011e26 	beq	r2,zero,7840 <_realloc_r+0x538>
    73c8:	a93fff17 	ldw	r4,-4(r21)
    73cc:	10fffe04 	addi	r3,r2,-8
    73d0:	00bfff84 	movi	r2,-2
    73d4:	2084703a 	and	r2,r4,r2
    73d8:	9885883a 	add	r2,r19,r2
    73dc:	1880ee26 	beq	r3,r2,7798 <_realloc_r+0x490>
    73e0:	81bfff04 	addi	r6,r16,-4
    73e4:	00800904 	movi	r2,36
    73e8:	1180b836 	bltu	r2,r6,76cc <_realloc_r+0x3c4>
    73ec:	00c004c4 	movi	r3,19
    73f0:	19809636 	bltu	r3,r6,764c <_realloc_r+0x344>
    73f4:	9005883a 	mov	r2,r18
    73f8:	a807883a 	mov	r3,r21
    73fc:	19000017 	ldw	r4,0(r3)
    7400:	11000015 	stw	r4,0(r2)
    7404:	19000117 	ldw	r4,4(r3)
    7408:	11000115 	stw	r4,4(r2)
    740c:	18c00217 	ldw	r3,8(r3)
    7410:	10c00215 	stw	r3,8(r2)
    7414:	a80b883a 	mov	r5,r21
    7418:	a009883a 	mov	r4,r20
    741c:	0004bac0 	call	4bac <_free_r>
    7420:	a009883a 	mov	r4,r20
    7424:	000d37c0 	call	d37c <__malloc_unlock>
    7428:	9005883a 	mov	r2,r18
    742c:	00001206 	br	7478 <_realloc_r+0x170>
    7430:	00c00404 	movi	r3,16
    7434:	1823883a 	mov	r17,r3
    7438:	003fce06 	br	7374 <_realloc_r+0x6c>
    743c:	a825883a 	mov	r18,r21
    7440:	8445c83a 	sub	r2,r16,r17
    7444:	00c003c4 	movi	r3,15
    7448:	18802636 	bltu	r3,r2,74e4 <_realloc_r+0x1dc>
    744c:	99800117 	ldw	r6,4(r19)
    7450:	9c07883a 	add	r3,r19,r16
    7454:	3180004c 	andi	r6,r6,1
    7458:	3420b03a 	or	r16,r6,r16
    745c:	9c000115 	stw	r16,4(r19)
    7460:	18800117 	ldw	r2,4(r3)
    7464:	10800054 	ori	r2,r2,1
    7468:	18800115 	stw	r2,4(r3)
    746c:	a009883a 	mov	r4,r20
    7470:	000d37c0 	call	d37c <__malloc_unlock>
    7474:	9005883a 	mov	r2,r18
    7478:	dfc00917 	ldw	ra,36(sp)
    747c:	df000817 	ldw	fp,32(sp)
    7480:	ddc00717 	ldw	r23,28(sp)
    7484:	dd800617 	ldw	r22,24(sp)
    7488:	dd400517 	ldw	r21,20(sp)
    748c:	dd000417 	ldw	r20,16(sp)
    7490:	dcc00317 	ldw	r19,12(sp)
    7494:	dc800217 	ldw	r18,8(sp)
    7498:	dc400117 	ldw	r17,4(sp)
    749c:	dc000017 	ldw	r16,0(sp)
    74a0:	dec00a04 	addi	sp,sp,40
    74a4:	f800283a 	ret
    74a8:	017fff04 	movi	r5,-4
    74ac:	414a703a 	and	r5,r8,r5
    74b0:	814d883a 	add	r6,r16,r5
    74b4:	30c01f16 	blt	r6,r3,7534 <_realloc_r+0x22c>
    74b8:	20800317 	ldw	r2,12(r4)
    74bc:	20c00217 	ldw	r3,8(r4)
    74c0:	a825883a 	mov	r18,r21
    74c4:	3021883a 	mov	r16,r6
    74c8:	18800315 	stw	r2,12(r3)
    74cc:	10c00215 	stw	r3,8(r2)
    74d0:	003fdb06 	br	7440 <_realloc_r+0x138>
    74d4:	00800304 	movi	r2,12
    74d8:	a0800015 	stw	r2,0(r20)
    74dc:	0005883a 	mov	r2,zero
    74e0:	003fe506 	br	7478 <_realloc_r+0x170>
    74e4:	98c00117 	ldw	r3,4(r19)
    74e8:	9c4b883a 	add	r5,r19,r17
    74ec:	11000054 	ori	r4,r2,1
    74f0:	18c0004c 	andi	r3,r3,1
    74f4:	1c62b03a 	or	r17,r3,r17
    74f8:	9c400115 	stw	r17,4(r19)
    74fc:	29000115 	stw	r4,4(r5)
    7500:	2885883a 	add	r2,r5,r2
    7504:	10c00117 	ldw	r3,4(r2)
    7508:	29400204 	addi	r5,r5,8
    750c:	a009883a 	mov	r4,r20
    7510:	18c00054 	ori	r3,r3,1
    7514:	10c00115 	stw	r3,4(r2)
    7518:	0004bac0 	call	4bac <_free_r>
    751c:	003fd306 	br	746c <_realloc_r+0x164>
    7520:	017fff04 	movi	r5,-4
    7524:	414a703a 	and	r5,r8,r5
    7528:	89800404 	addi	r6,r17,16
    752c:	8151883a 	add	r8,r16,r5
    7530:	4180590e 	bge	r8,r6,7698 <_realloc_r+0x390>
    7534:	1080004c 	andi	r2,r2,1
    7538:	103f9e1e 	bne	r2,zero,73b4 <_realloc_r+0xac>
    753c:	adbffe17 	ldw	r22,-8(r21)
    7540:	00bfff04 	movi	r2,-4
    7544:	9dadc83a 	sub	r22,r19,r22
    7548:	b1800117 	ldw	r6,4(r22)
    754c:	3084703a 	and	r2,r6,r2
    7550:	20002026 	beq	r4,zero,75d4 <_realloc_r+0x2cc>
    7554:	80af883a 	add	r23,r16,r2
    7558:	b96f883a 	add	r23,r23,r5
    755c:	21c05f26 	beq	r4,r7,76dc <_realloc_r+0x3d4>
    7560:	b8c01c16 	blt	r23,r3,75d4 <_realloc_r+0x2cc>
    7564:	20800317 	ldw	r2,12(r4)
    7568:	20c00217 	ldw	r3,8(r4)
    756c:	81bfff04 	addi	r6,r16,-4
    7570:	01000904 	movi	r4,36
    7574:	18800315 	stw	r2,12(r3)
    7578:	10c00215 	stw	r3,8(r2)
    757c:	b0c00217 	ldw	r3,8(r22)
    7580:	b0800317 	ldw	r2,12(r22)
    7584:	b4800204 	addi	r18,r22,8
    7588:	18800315 	stw	r2,12(r3)
    758c:	10c00215 	stw	r3,8(r2)
    7590:	21801b36 	bltu	r4,r6,7600 <_realloc_r+0x2f8>
    7594:	008004c4 	movi	r2,19
    7598:	1180352e 	bgeu	r2,r6,7670 <_realloc_r+0x368>
    759c:	a8800017 	ldw	r2,0(r21)
    75a0:	b0800215 	stw	r2,8(r22)
    75a4:	a8800117 	ldw	r2,4(r21)
    75a8:	b0800315 	stw	r2,12(r22)
    75ac:	008006c4 	movi	r2,27
    75b0:	11807f36 	bltu	r2,r6,77b0 <_realloc_r+0x4a8>
    75b4:	b0800404 	addi	r2,r22,16
    75b8:	ad400204 	addi	r21,r21,8
    75bc:	00002d06 	br	7674 <_realloc_r+0x36c>
    75c0:	adbffe17 	ldw	r22,-8(r21)
    75c4:	00bfff04 	movi	r2,-4
    75c8:	9dadc83a 	sub	r22,r19,r22
    75cc:	b1000117 	ldw	r4,4(r22)
    75d0:	2084703a 	and	r2,r4,r2
    75d4:	b03f7726 	beq	r22,zero,73b4 <_realloc_r+0xac>
    75d8:	80af883a 	add	r23,r16,r2
    75dc:	b8ff7516 	blt	r23,r3,73b4 <_realloc_r+0xac>
    75e0:	b0800317 	ldw	r2,12(r22)
    75e4:	b0c00217 	ldw	r3,8(r22)
    75e8:	81bfff04 	addi	r6,r16,-4
    75ec:	01000904 	movi	r4,36
    75f0:	18800315 	stw	r2,12(r3)
    75f4:	10c00215 	stw	r3,8(r2)
    75f8:	b4800204 	addi	r18,r22,8
    75fc:	21bfe52e 	bgeu	r4,r6,7594 <_realloc_r+0x28c>
    7600:	a80b883a 	mov	r5,r21
    7604:	9009883a 	mov	r4,r18
    7608:	00060880 	call	6088 <memmove>
    760c:	b821883a 	mov	r16,r23
    7610:	b027883a 	mov	r19,r22
    7614:	003f8a06 	br	7440 <_realloc_r+0x138>
    7618:	300b883a 	mov	r5,r6
    761c:	dfc00917 	ldw	ra,36(sp)
    7620:	df000817 	ldw	fp,32(sp)
    7624:	ddc00717 	ldw	r23,28(sp)
    7628:	dd800617 	ldw	r22,24(sp)
    762c:	dd400517 	ldw	r21,20(sp)
    7630:	dd000417 	ldw	r20,16(sp)
    7634:	dcc00317 	ldw	r19,12(sp)
    7638:	dc800217 	ldw	r18,8(sp)
    763c:	dc400117 	ldw	r17,4(sp)
    7640:	dc000017 	ldw	r16,0(sp)
    7644:	dec00a04 	addi	sp,sp,40
    7648:	00057981 	jmpi	5798 <_malloc_r>
    764c:	a8c00017 	ldw	r3,0(r21)
    7650:	90c00015 	stw	r3,0(r18)
    7654:	a8c00117 	ldw	r3,4(r21)
    7658:	90c00115 	stw	r3,4(r18)
    765c:	00c006c4 	movi	r3,27
    7660:	19804536 	bltu	r3,r6,7778 <_realloc_r+0x470>
    7664:	90800204 	addi	r2,r18,8
    7668:	a8c00204 	addi	r3,r21,8
    766c:	003f6306 	br	73fc <_realloc_r+0xf4>
    7670:	9005883a 	mov	r2,r18
    7674:	a8c00017 	ldw	r3,0(r21)
    7678:	b821883a 	mov	r16,r23
    767c:	b027883a 	mov	r19,r22
    7680:	10c00015 	stw	r3,0(r2)
    7684:	a8c00117 	ldw	r3,4(r21)
    7688:	10c00115 	stw	r3,4(r2)
    768c:	a8c00217 	ldw	r3,8(r21)
    7690:	10c00215 	stw	r3,8(r2)
    7694:	003f6a06 	br	7440 <_realloc_r+0x138>
    7698:	9c67883a 	add	r19,r19,r17
    769c:	4445c83a 	sub	r2,r8,r17
    76a0:	e4c00215 	stw	r19,8(fp)
    76a4:	10800054 	ori	r2,r2,1
    76a8:	98800115 	stw	r2,4(r19)
    76ac:	a8bfff17 	ldw	r2,-4(r21)
    76b0:	a009883a 	mov	r4,r20
    76b4:	1080004c 	andi	r2,r2,1
    76b8:	1462b03a 	or	r17,r2,r17
    76bc:	ac7fff15 	stw	r17,-4(r21)
    76c0:	000d37c0 	call	d37c <__malloc_unlock>
    76c4:	a805883a 	mov	r2,r21
    76c8:	003f6b06 	br	7478 <_realloc_r+0x170>
    76cc:	a80b883a 	mov	r5,r21
    76d0:	9009883a 	mov	r4,r18
    76d4:	00060880 	call	6088 <memmove>
    76d8:	003f4e06 	br	7414 <_realloc_r+0x10c>
    76dc:	89000404 	addi	r4,r17,16
    76e0:	b93fbc16 	blt	r23,r4,75d4 <_realloc_r+0x2cc>
    76e4:	b0800317 	ldw	r2,12(r22)
    76e8:	b0c00217 	ldw	r3,8(r22)
    76ec:	81bfff04 	addi	r6,r16,-4
    76f0:	01000904 	movi	r4,36
    76f4:	18800315 	stw	r2,12(r3)
    76f8:	10c00215 	stw	r3,8(r2)
    76fc:	b4800204 	addi	r18,r22,8
    7700:	21804336 	bltu	r4,r6,7810 <_realloc_r+0x508>
    7704:	008004c4 	movi	r2,19
    7708:	11803f2e 	bgeu	r2,r6,7808 <_realloc_r+0x500>
    770c:	a8800017 	ldw	r2,0(r21)
    7710:	b0800215 	stw	r2,8(r22)
    7714:	a8800117 	ldw	r2,4(r21)
    7718:	b0800315 	stw	r2,12(r22)
    771c:	008006c4 	movi	r2,27
    7720:	11803f36 	bltu	r2,r6,7820 <_realloc_r+0x518>
    7724:	b0800404 	addi	r2,r22,16
    7728:	ad400204 	addi	r21,r21,8
    772c:	a8c00017 	ldw	r3,0(r21)
    7730:	10c00015 	stw	r3,0(r2)
    7734:	a8c00117 	ldw	r3,4(r21)
    7738:	10c00115 	stw	r3,4(r2)
    773c:	a8c00217 	ldw	r3,8(r21)
    7740:	10c00215 	stw	r3,8(r2)
    7744:	b447883a 	add	r3,r22,r17
    7748:	bc45c83a 	sub	r2,r23,r17
    774c:	e0c00215 	stw	r3,8(fp)
    7750:	10800054 	ori	r2,r2,1
    7754:	18800115 	stw	r2,4(r3)
    7758:	b0800117 	ldw	r2,4(r22)
    775c:	a009883a 	mov	r4,r20
    7760:	1080004c 	andi	r2,r2,1
    7764:	1462b03a 	or	r17,r2,r17
    7768:	b4400115 	stw	r17,4(r22)
    776c:	000d37c0 	call	d37c <__malloc_unlock>
    7770:	9005883a 	mov	r2,r18
    7774:	003f4006 	br	7478 <_realloc_r+0x170>
    7778:	a8c00217 	ldw	r3,8(r21)
    777c:	90c00215 	stw	r3,8(r18)
    7780:	a8c00317 	ldw	r3,12(r21)
    7784:	90c00315 	stw	r3,12(r18)
    7788:	30801126 	beq	r6,r2,77d0 <_realloc_r+0x4c8>
    778c:	90800404 	addi	r2,r18,16
    7790:	a8c00404 	addi	r3,r21,16
    7794:	003f1906 	br	73fc <_realloc_r+0xf4>
    7798:	90ffff17 	ldw	r3,-4(r18)
    779c:	00bfff04 	movi	r2,-4
    77a0:	a825883a 	mov	r18,r21
    77a4:	1884703a 	and	r2,r3,r2
    77a8:	80a1883a 	add	r16,r16,r2
    77ac:	003f2406 	br	7440 <_realloc_r+0x138>
    77b0:	a8800217 	ldw	r2,8(r21)
    77b4:	b0800415 	stw	r2,16(r22)
    77b8:	a8800317 	ldw	r2,12(r21)
    77bc:	b0800515 	stw	r2,20(r22)
    77c0:	31000a26 	beq	r6,r4,77ec <_realloc_r+0x4e4>
    77c4:	b0800604 	addi	r2,r22,24
    77c8:	ad400404 	addi	r21,r21,16
    77cc:	003fa906 	br	7674 <_realloc_r+0x36c>
    77d0:	a9000417 	ldw	r4,16(r21)
    77d4:	90800604 	addi	r2,r18,24
    77d8:	a8c00604 	addi	r3,r21,24
    77dc:	91000415 	stw	r4,16(r18)
    77e0:	a9000517 	ldw	r4,20(r21)
    77e4:	91000515 	stw	r4,20(r18)
    77e8:	003f0406 	br	73fc <_realloc_r+0xf4>
    77ec:	a8c00417 	ldw	r3,16(r21)
    77f0:	ad400604 	addi	r21,r21,24
    77f4:	b0800804 	addi	r2,r22,32
    77f8:	b0c00615 	stw	r3,24(r22)
    77fc:	a8ffff17 	ldw	r3,-4(r21)
    7800:	b0c00715 	stw	r3,28(r22)
    7804:	003f9b06 	br	7674 <_realloc_r+0x36c>
    7808:	9005883a 	mov	r2,r18
    780c:	003fc706 	br	772c <_realloc_r+0x424>
    7810:	a80b883a 	mov	r5,r21
    7814:	9009883a 	mov	r4,r18
    7818:	00060880 	call	6088 <memmove>
    781c:	003fc906 	br	7744 <_realloc_r+0x43c>
    7820:	a8800217 	ldw	r2,8(r21)
    7824:	b0800415 	stw	r2,16(r22)
    7828:	a8800317 	ldw	r2,12(r21)
    782c:	b0800515 	stw	r2,20(r22)
    7830:	31000726 	beq	r6,r4,7850 <_realloc_r+0x548>
    7834:	b0800604 	addi	r2,r22,24
    7838:	ad400404 	addi	r21,r21,16
    783c:	003fbb06 	br	772c <_realloc_r+0x424>
    7840:	a009883a 	mov	r4,r20
    7844:	000d37c0 	call	d37c <__malloc_unlock>
    7848:	0005883a 	mov	r2,zero
    784c:	003f0a06 	br	7478 <_realloc_r+0x170>
    7850:	a8c00417 	ldw	r3,16(r21)
    7854:	ad400604 	addi	r21,r21,24
    7858:	b0800804 	addi	r2,r22,32
    785c:	b0c00615 	stw	r3,24(r22)
    7860:	a8ffff17 	ldw	r3,-4(r21)
    7864:	b0c00715 	stw	r3,28(r22)
    7868:	003fb006 	br	772c <_realloc_r+0x424>

0000786c <__fpclassifyd>:
    786c:	00a00034 	movhi	r2,32768
    7870:	10bfffc4 	addi	r2,r2,-1
    7874:	2884703a 	and	r2,r5,r2
    7878:	10000726 	beq	r2,zero,7898 <__fpclassifyd+0x2c>
    787c:	00fffc34 	movhi	r3,65520
    7880:	019ff834 	movhi	r6,32736
    7884:	28c7883a 	add	r3,r5,r3
    7888:	31bfffc4 	addi	r6,r6,-1
    788c:	30c00536 	bltu	r6,r3,78a4 <__fpclassifyd+0x38>
    7890:	00800104 	movi	r2,4
    7894:	f800283a 	ret
    7898:	2000021e 	bne	r4,zero,78a4 <__fpclassifyd+0x38>
    789c:	00800084 	movi	r2,2
    78a0:	f800283a 	ret
    78a4:	00dffc34 	movhi	r3,32752
    78a8:	019ff834 	movhi	r6,32736
    78ac:	28cb883a 	add	r5,r5,r3
    78b0:	31bfffc4 	addi	r6,r6,-1
    78b4:	317ff62e 	bgeu	r6,r5,7890 <__fpclassifyd+0x24>
    78b8:	01400434 	movhi	r5,16
    78bc:	297fffc4 	addi	r5,r5,-1
    78c0:	28800236 	bltu	r5,r2,78cc <__fpclassifyd+0x60>
    78c4:	008000c4 	movi	r2,3
    78c8:	f800283a 	ret
    78cc:	10c00226 	beq	r2,r3,78d8 <__fpclassifyd+0x6c>
    78d0:	0005883a 	mov	r2,zero
    78d4:	f800283a 	ret
    78d8:	2005003a 	cmpeq	r2,r4,zero
    78dc:	f800283a 	ret

000078e0 <_sbrk_r>:
    78e0:	defffd04 	addi	sp,sp,-12
    78e4:	dc000015 	stw	r16,0(sp)
    78e8:	04000074 	movhi	r16,1
    78ec:	dc400115 	stw	r17,4(sp)
    78f0:	840b9904 	addi	r16,r16,11876
    78f4:	2023883a 	mov	r17,r4
    78f8:	2809883a 	mov	r4,r5
    78fc:	dfc00215 	stw	ra,8(sp)
    7900:	80000015 	stw	zero,0(r16)
    7904:	000d53c0 	call	d53c <sbrk>
    7908:	00ffffc4 	movi	r3,-1
    790c:	10c00526 	beq	r2,r3,7924 <_sbrk_r+0x44>
    7910:	dfc00217 	ldw	ra,8(sp)
    7914:	dc400117 	ldw	r17,4(sp)
    7918:	dc000017 	ldw	r16,0(sp)
    791c:	dec00304 	addi	sp,sp,12
    7920:	f800283a 	ret
    7924:	80c00017 	ldw	r3,0(r16)
    7928:	183ff926 	beq	r3,zero,7910 <_sbrk_r+0x30>
    792c:	88c00015 	stw	r3,0(r17)
    7930:	003ff706 	br	7910 <_sbrk_r+0x30>

00007934 <__sread>:
    7934:	defffe04 	addi	sp,sp,-8
    7938:	dc000015 	stw	r16,0(sp)
    793c:	2821883a 	mov	r16,r5
    7940:	2940038f 	ldh	r5,14(r5)
    7944:	dfc00115 	stw	ra,4(sp)
    7948:	00097280 	call	9728 <_read_r>
    794c:	10000716 	blt	r2,zero,796c <__sread+0x38>
    7950:	80c01417 	ldw	r3,80(r16)
    7954:	1887883a 	add	r3,r3,r2
    7958:	80c01415 	stw	r3,80(r16)
    795c:	dfc00117 	ldw	ra,4(sp)
    7960:	dc000017 	ldw	r16,0(sp)
    7964:	dec00204 	addi	sp,sp,8
    7968:	f800283a 	ret
    796c:	80c0030b 	ldhu	r3,12(r16)
    7970:	18fbffcc 	andi	r3,r3,61439
    7974:	80c0030d 	sth	r3,12(r16)
    7978:	dfc00117 	ldw	ra,4(sp)
    797c:	dc000017 	ldw	r16,0(sp)
    7980:	dec00204 	addi	sp,sp,8
    7984:	f800283a 	ret

00007988 <__seofread>:
    7988:	0005883a 	mov	r2,zero
    798c:	f800283a 	ret

00007990 <__swrite>:
    7990:	2880030b 	ldhu	r2,12(r5)
    7994:	defffb04 	addi	sp,sp,-20
    7998:	dcc00315 	stw	r19,12(sp)
    799c:	dc800215 	stw	r18,8(sp)
    79a0:	dc400115 	stw	r17,4(sp)
    79a4:	dc000015 	stw	r16,0(sp)
    79a8:	dfc00415 	stw	ra,16(sp)
    79ac:	10c0400c 	andi	r3,r2,256
    79b0:	2821883a 	mov	r16,r5
    79b4:	2023883a 	mov	r17,r4
    79b8:	3025883a 	mov	r18,r6
    79bc:	3827883a 	mov	r19,r7
    79c0:	18000526 	beq	r3,zero,79d8 <__swrite+0x48>
    79c4:	2940038f 	ldh	r5,14(r5)
    79c8:	01c00084 	movi	r7,2
    79cc:	000d883a 	mov	r6,zero
    79d0:	00096c80 	call	96c8 <_lseek_r>
    79d4:	8080030b 	ldhu	r2,12(r16)
    79d8:	8140038f 	ldh	r5,14(r16)
    79dc:	10bbffcc 	andi	r2,r2,61439
    79e0:	980f883a 	mov	r7,r19
    79e4:	900d883a 	mov	r6,r18
    79e8:	8809883a 	mov	r4,r17
    79ec:	8080030d 	sth	r2,12(r16)
    79f0:	dfc00417 	ldw	ra,16(sp)
    79f4:	dcc00317 	ldw	r19,12(sp)
    79f8:	dc800217 	ldw	r18,8(sp)
    79fc:	dc400117 	ldw	r17,4(sp)
    7a00:	dc000017 	ldw	r16,0(sp)
    7a04:	dec00504 	addi	sp,sp,20
    7a08:	00091941 	jmpi	9194 <_write_r>

00007a0c <__sseek>:
    7a0c:	defffe04 	addi	sp,sp,-8
    7a10:	dc000015 	stw	r16,0(sp)
    7a14:	2821883a 	mov	r16,r5
    7a18:	2940038f 	ldh	r5,14(r5)
    7a1c:	dfc00115 	stw	ra,4(sp)
    7a20:	00096c80 	call	96c8 <_lseek_r>
    7a24:	00ffffc4 	movi	r3,-1
    7a28:	10c00826 	beq	r2,r3,7a4c <__sseek+0x40>
    7a2c:	80c0030b 	ldhu	r3,12(r16)
    7a30:	80801415 	stw	r2,80(r16)
    7a34:	18c40014 	ori	r3,r3,4096
    7a38:	80c0030d 	sth	r3,12(r16)
    7a3c:	dfc00117 	ldw	ra,4(sp)
    7a40:	dc000017 	ldw	r16,0(sp)
    7a44:	dec00204 	addi	sp,sp,8
    7a48:	f800283a 	ret
    7a4c:	80c0030b 	ldhu	r3,12(r16)
    7a50:	18fbffcc 	andi	r3,r3,61439
    7a54:	80c0030d 	sth	r3,12(r16)
    7a58:	dfc00117 	ldw	ra,4(sp)
    7a5c:	dc000017 	ldw	r16,0(sp)
    7a60:	dec00204 	addi	sp,sp,8
    7a64:	f800283a 	ret

00007a68 <__sclose>:
    7a68:	2940038f 	ldh	r5,14(r5)
    7a6c:	00091f41 	jmpi	91f4 <_close_r>

00007a70 <strcmp>:
    7a70:	2144b03a 	or	r2,r4,r5
    7a74:	108000cc 	andi	r2,r2,3
    7a78:	1000171e 	bne	r2,zero,7ad8 <strcmp+0x68>
    7a7c:	20800017 	ldw	r2,0(r4)
    7a80:	28c00017 	ldw	r3,0(r5)
    7a84:	10c0141e 	bne	r2,r3,7ad8 <strcmp+0x68>
    7a88:	027fbff4 	movhi	r9,65279
    7a8c:	4a7fbfc4 	addi	r9,r9,-257
    7a90:	0086303a 	nor	r3,zero,r2
    7a94:	02202074 	movhi	r8,32897
    7a98:	1245883a 	add	r2,r2,r9
    7a9c:	42202004 	addi	r8,r8,-32640
    7aa0:	10c4703a 	and	r2,r2,r3
    7aa4:	1204703a 	and	r2,r2,r8
    7aa8:	10000226 	beq	r2,zero,7ab4 <strcmp+0x44>
    7aac:	00002306 	br	7b3c <strcmp+0xcc>
    7ab0:	1000221e 	bne	r2,zero,7b3c <strcmp+0xcc>
    7ab4:	21000104 	addi	r4,r4,4
    7ab8:	20c00017 	ldw	r3,0(r4)
    7abc:	29400104 	addi	r5,r5,4
    7ac0:	29800017 	ldw	r6,0(r5)
    7ac4:	1a4f883a 	add	r7,r3,r9
    7ac8:	00c4303a 	nor	r2,zero,r3
    7acc:	3884703a 	and	r2,r7,r2
    7ad0:	1204703a 	and	r2,r2,r8
    7ad4:	19bff626 	beq	r3,r6,7ab0 <strcmp+0x40>
    7ad8:	20800003 	ldbu	r2,0(r4)
    7adc:	10c03fcc 	andi	r3,r2,255
    7ae0:	18c0201c 	xori	r3,r3,128
    7ae4:	18ffe004 	addi	r3,r3,-128
    7ae8:	18000c26 	beq	r3,zero,7b1c <strcmp+0xac>
    7aec:	29800007 	ldb	r6,0(r5)
    7af0:	19800326 	beq	r3,r6,7b00 <strcmp+0x90>
    7af4:	00001306 	br	7b44 <strcmp+0xd4>
    7af8:	29800007 	ldb	r6,0(r5)
    7afc:	11800b1e 	bne	r2,r6,7b2c <strcmp+0xbc>
    7b00:	21000044 	addi	r4,r4,1
    7b04:	20c00003 	ldbu	r3,0(r4)
    7b08:	29400044 	addi	r5,r5,1
    7b0c:	18803fcc 	andi	r2,r3,255
    7b10:	1080201c 	xori	r2,r2,128
    7b14:	10bfe004 	addi	r2,r2,-128
    7b18:	103ff71e 	bne	r2,zero,7af8 <strcmp+0x88>
    7b1c:	0007883a 	mov	r3,zero
    7b20:	28800003 	ldbu	r2,0(r5)
    7b24:	1885c83a 	sub	r2,r3,r2
    7b28:	f800283a 	ret
    7b2c:	28800003 	ldbu	r2,0(r5)
    7b30:	18c03fcc 	andi	r3,r3,255
    7b34:	1885c83a 	sub	r2,r3,r2
    7b38:	f800283a 	ret
    7b3c:	0005883a 	mov	r2,zero
    7b40:	f800283a 	ret
    7b44:	10c03fcc 	andi	r3,r2,255
    7b48:	003ff506 	br	7b20 <strcmp+0xb0>

00007b4c <__sprint_r.part.0>:
    7b4c:	28801917 	ldw	r2,100(r5)
    7b50:	defff604 	addi	sp,sp,-40
    7b54:	dd400515 	stw	r21,20(sp)
    7b58:	dfc00915 	stw	ra,36(sp)
    7b5c:	df000815 	stw	fp,32(sp)
    7b60:	ddc00715 	stw	r23,28(sp)
    7b64:	dd800615 	stw	r22,24(sp)
    7b68:	dd000415 	stw	r20,16(sp)
    7b6c:	dcc00315 	stw	r19,12(sp)
    7b70:	dc800215 	stw	r18,8(sp)
    7b74:	dc400115 	stw	r17,4(sp)
    7b78:	dc000015 	stw	r16,0(sp)
    7b7c:	1088000c 	andi	r2,r2,8192
    7b80:	302b883a 	mov	r21,r6
    7b84:	10002e26 	beq	r2,zero,7c40 <__sprint_r.part.0+0xf4>
    7b88:	30800217 	ldw	r2,8(r6)
    7b8c:	35800017 	ldw	r22,0(r6)
    7b90:	10002926 	beq	r2,zero,7c38 <__sprint_r.part.0+0xec>
    7b94:	2827883a 	mov	r19,r5
    7b98:	2029883a 	mov	r20,r4
    7b9c:	b5c00104 	addi	r23,r22,4
    7ba0:	04bfffc4 	movi	r18,-1
    7ba4:	bc400017 	ldw	r17,0(r23)
    7ba8:	b4000017 	ldw	r16,0(r22)
    7bac:	0039883a 	mov	fp,zero
    7bb0:	8822d0ba 	srli	r17,r17,2
    7bb4:	8800031e 	bne	r17,zero,7bc4 <__sprint_r.part.0+0x78>
    7bb8:	00001806 	br	7c1c <__sprint_r.part.0+0xd0>
    7bbc:	84000104 	addi	r16,r16,4
    7bc0:	8f001526 	beq	r17,fp,7c18 <__sprint_r.part.0+0xcc>
    7bc4:	81400017 	ldw	r5,0(r16)
    7bc8:	980d883a 	mov	r6,r19
    7bcc:	a009883a 	mov	r4,r20
    7bd0:	00095740 	call	9574 <_fputwc_r>
    7bd4:	e7000044 	addi	fp,fp,1
    7bd8:	14bff81e 	bne	r2,r18,7bbc <__sprint_r.part.0+0x70>
    7bdc:	9005883a 	mov	r2,r18
    7be0:	a8000215 	stw	zero,8(r21)
    7be4:	a8000115 	stw	zero,4(r21)
    7be8:	dfc00917 	ldw	ra,36(sp)
    7bec:	df000817 	ldw	fp,32(sp)
    7bf0:	ddc00717 	ldw	r23,28(sp)
    7bf4:	dd800617 	ldw	r22,24(sp)
    7bf8:	dd400517 	ldw	r21,20(sp)
    7bfc:	dd000417 	ldw	r20,16(sp)
    7c00:	dcc00317 	ldw	r19,12(sp)
    7c04:	dc800217 	ldw	r18,8(sp)
    7c08:	dc400117 	ldw	r17,4(sp)
    7c0c:	dc000017 	ldw	r16,0(sp)
    7c10:	dec00a04 	addi	sp,sp,40
    7c14:	f800283a 	ret
    7c18:	a8800217 	ldw	r2,8(r21)
    7c1c:	8c63883a 	add	r17,r17,r17
    7c20:	8c63883a 	add	r17,r17,r17
    7c24:	1445c83a 	sub	r2,r2,r17
    7c28:	a8800215 	stw	r2,8(r21)
    7c2c:	b5800204 	addi	r22,r22,8
    7c30:	bdc00204 	addi	r23,r23,8
    7c34:	103fdb1e 	bne	r2,zero,7ba4 <__sprint_r.part.0+0x58>
    7c38:	0005883a 	mov	r2,zero
    7c3c:	003fe806 	br	7be0 <__sprint_r.part.0+0x94>
    7c40:	0004ebc0 	call	4ebc <__sfvwrite_r>
    7c44:	003fe606 	br	7be0 <__sprint_r.part.0+0x94>

00007c48 <__sprint_r>:
    7c48:	30c00217 	ldw	r3,8(r6)
    7c4c:	18000126 	beq	r3,zero,7c54 <__sprint_r+0xc>
    7c50:	0007b4c1 	jmpi	7b4c <__sprint_r.part.0>
    7c54:	30000115 	stw	zero,4(r6)
    7c58:	0005883a 	mov	r2,zero
    7c5c:	f800283a 	ret

00007c60 <___vfiprintf_internal_r>:
    7c60:	deffc904 	addi	sp,sp,-220
    7c64:	df003515 	stw	fp,212(sp)
    7c68:	dd003115 	stw	r20,196(sp)
    7c6c:	dfc03615 	stw	ra,216(sp)
    7c70:	ddc03415 	stw	r23,208(sp)
    7c74:	dd803315 	stw	r22,204(sp)
    7c78:	dd403215 	stw	r21,200(sp)
    7c7c:	dcc03015 	stw	r19,192(sp)
    7c80:	dc802f15 	stw	r18,188(sp)
    7c84:	dc402e15 	stw	r17,184(sp)
    7c88:	dc002d15 	stw	r16,180(sp)
    7c8c:	d9002015 	stw	r4,128(sp)
    7c90:	d9c02215 	stw	r7,136(sp)
    7c94:	2829883a 	mov	r20,r5
    7c98:	3039883a 	mov	fp,r6
    7c9c:	20000226 	beq	r4,zero,7ca8 <___vfiprintf_internal_r+0x48>
    7ca0:	20800e17 	ldw	r2,56(r4)
    7ca4:	1000cf26 	beq	r2,zero,7fe4 <___vfiprintf_internal_r+0x384>
    7ca8:	a080030b 	ldhu	r2,12(r20)
    7cac:	10c8000c 	andi	r3,r2,8192
    7cb0:	1800061e 	bne	r3,zero,7ccc <___vfiprintf_internal_r+0x6c>
    7cb4:	a1001917 	ldw	r4,100(r20)
    7cb8:	00f7ffc4 	movi	r3,-8193
    7cbc:	10880014 	ori	r2,r2,8192
    7cc0:	20c6703a 	and	r3,r4,r3
    7cc4:	a080030d 	sth	r2,12(r20)
    7cc8:	a0c01915 	stw	r3,100(r20)
    7ccc:	10c0020c 	andi	r3,r2,8
    7cd0:	1800a926 	beq	r3,zero,7f78 <___vfiprintf_internal_r+0x318>
    7cd4:	a0c00417 	ldw	r3,16(r20)
    7cd8:	1800a726 	beq	r3,zero,7f78 <___vfiprintf_internal_r+0x318>
    7cdc:	1080068c 	andi	r2,r2,26
    7ce0:	00c00284 	movi	r3,10
    7ce4:	10c0ac26 	beq	r2,r3,7f98 <___vfiprintf_internal_r+0x338>
    7ce8:	da801a04 	addi	r10,sp,104
    7cec:	da801e15 	stw	r10,120(sp)
    7cf0:	d8801e17 	ldw	r2,120(sp)
    7cf4:	da8019c4 	addi	r10,sp,103
    7cf8:	05800074 	movhi	r22,1
    7cfc:	05c00074 	movhi	r23,1
    7d00:	da801f15 	stw	r10,124(sp)
    7d04:	1295c83a 	sub	r10,r2,r10
    7d08:	b5bdce04 	addi	r22,r22,-2248
    7d0c:	bdfdca04 	addi	r23,r23,-2264
    7d10:	dec01a15 	stw	sp,104(sp)
    7d14:	d8001c15 	stw	zero,112(sp)
    7d18:	d8001b15 	stw	zero,108(sp)
    7d1c:	d8002615 	stw	zero,152(sp)
    7d20:	d8002315 	stw	zero,140(sp)
    7d24:	da802715 	stw	r10,156(sp)
    7d28:	d811883a 	mov	r8,sp
    7d2c:	dd002115 	stw	r20,132(sp)
    7d30:	e021883a 	mov	r16,fp
    7d34:	80800007 	ldb	r2,0(r16)
    7d38:	1003ea26 	beq	r2,zero,8ce4 <___vfiprintf_internal_r+0x1084>
    7d3c:	00c00944 	movi	r3,37
    7d40:	8025883a 	mov	r18,r16
    7d44:	10c0021e 	bne	r2,r3,7d50 <___vfiprintf_internal_r+0xf0>
    7d48:	00001606 	br	7da4 <___vfiprintf_internal_r+0x144>
    7d4c:	10c00326 	beq	r2,r3,7d5c <___vfiprintf_internal_r+0xfc>
    7d50:	94800044 	addi	r18,r18,1
    7d54:	90800007 	ldb	r2,0(r18)
    7d58:	103ffc1e 	bne	r2,zero,7d4c <___vfiprintf_internal_r+0xec>
    7d5c:	9423c83a 	sub	r17,r18,r16
    7d60:	88001026 	beq	r17,zero,7da4 <___vfiprintf_internal_r+0x144>
    7d64:	d8c01c17 	ldw	r3,112(sp)
    7d68:	d8801b17 	ldw	r2,108(sp)
    7d6c:	44000015 	stw	r16,0(r8)
    7d70:	88c7883a 	add	r3,r17,r3
    7d74:	10800044 	addi	r2,r2,1
    7d78:	44400115 	stw	r17,4(r8)
    7d7c:	d8c01c15 	stw	r3,112(sp)
    7d80:	d8801b15 	stw	r2,108(sp)
    7d84:	010001c4 	movi	r4,7
    7d88:	2080760e 	bge	r4,r2,7f64 <___vfiprintf_internal_r+0x304>
    7d8c:	1803821e 	bne	r3,zero,8b98 <___vfiprintf_internal_r+0xf38>
    7d90:	da802317 	ldw	r10,140(sp)
    7d94:	d8001b15 	stw	zero,108(sp)
    7d98:	d811883a 	mov	r8,sp
    7d9c:	5455883a 	add	r10,r10,r17
    7da0:	da802315 	stw	r10,140(sp)
    7da4:	90800007 	ldb	r2,0(r18)
    7da8:	10044626 	beq	r2,zero,8ec4 <___vfiprintf_internal_r+0x1264>
    7dac:	90c00047 	ldb	r3,1(r18)
    7db0:	94000044 	addi	r16,r18,1
    7db4:	d8001d85 	stb	zero,118(sp)
    7db8:	0009883a 	mov	r4,zero
    7dbc:	000f883a 	mov	r7,zero
    7dc0:	027fffc4 	movi	r9,-1
    7dc4:	0023883a 	mov	r17,zero
    7dc8:	0029883a 	mov	r20,zero
    7dcc:	01401604 	movi	r5,88
    7dd0:	01800244 	movi	r6,9
    7dd4:	03400a84 	movi	r13,42
    7dd8:	03001b04 	movi	r12,108
    7ddc:	84000044 	addi	r16,r16,1
    7de0:	18bff804 	addi	r2,r3,-32
    7de4:	28827336 	bltu	r5,r2,87b4 <___vfiprintf_internal_r+0xb54>
    7de8:	100490ba 	slli	r2,r2,2
    7dec:	02800034 	movhi	r10,0
    7df0:	529f8004 	addi	r10,r10,32256
    7df4:	1285883a 	add	r2,r2,r10
    7df8:	10800017 	ldw	r2,0(r2)
    7dfc:	1000683a 	jmp	r2
    7e00:	000084e8 	cmpgeui	zero,zero,531
    7e04:	000087b4 	movhi	zero,542
    7e08:	000087b4 	movhi	zero,542
    7e0c:	00008508 	cmpgei	zero,zero,532
    7e10:	000087b4 	movhi	zero,542
    7e14:	000087b4 	movhi	zero,542
    7e18:	000087b4 	movhi	zero,542
    7e1c:	000087b4 	movhi	zero,542
    7e20:	000087b4 	movhi	zero,542
    7e24:	000087b4 	movhi	zero,542
    7e28:	000086f0 	cmpltui	zero,zero,539
    7e2c:	0000870c 	andi	zero,zero,540
    7e30:	000087b4 	movhi	zero,542
    7e34:	00007ff4 	movhi	zero,511
    7e38:	0000871c 	xori	zero,zero,540
    7e3c:	000087b4 	movhi	zero,542
    7e40:	00008514 	movui	zero,532
    7e44:	00008520 	cmpeqi	zero,zero,532
    7e48:	00008520 	cmpeqi	zero,zero,532
    7e4c:	00008520 	cmpeqi	zero,zero,532
    7e50:	00008520 	cmpeqi	zero,zero,532
    7e54:	00008520 	cmpeqi	zero,zero,532
    7e58:	00008520 	cmpeqi	zero,zero,532
    7e5c:	00008520 	cmpeqi	zero,zero,532
    7e60:	00008520 	cmpeqi	zero,zero,532
    7e64:	00008520 	cmpeqi	zero,zero,532
    7e68:	000087b4 	movhi	zero,542
    7e6c:	000087b4 	movhi	zero,542
    7e70:	000087b4 	movhi	zero,542
    7e74:	000087b4 	movhi	zero,542
    7e78:	000087b4 	movhi	zero,542
    7e7c:	000087b4 	movhi	zero,542
    7e80:	000087b4 	movhi	zero,542
    7e84:	000087b4 	movhi	zero,542
    7e88:	000087b4 	movhi	zero,542
    7e8c:	000087b4 	movhi	zero,542
    7e90:	0000854c 	andi	zero,zero,533
    7e94:	000087b4 	movhi	zero,542
    7e98:	000087b4 	movhi	zero,542
    7e9c:	000087b4 	movhi	zero,542
    7ea0:	000087b4 	movhi	zero,542
    7ea4:	000087b4 	movhi	zero,542
    7ea8:	000087b4 	movhi	zero,542
    7eac:	000087b4 	movhi	zero,542
    7eb0:	000087b4 	movhi	zero,542
    7eb4:	000087b4 	movhi	zero,542
    7eb8:	000087b4 	movhi	zero,542
    7ebc:	00008584 	movi	zero,534
    7ec0:	000087b4 	movhi	zero,542
    7ec4:	000087b4 	movhi	zero,542
    7ec8:	000087b4 	movhi	zero,542
    7ecc:	000087b4 	movhi	zero,542
    7ed0:	000087b4 	movhi	zero,542
    7ed4:	000085dc 	xori	zero,zero,535
    7ed8:	000087b4 	movhi	zero,542
    7edc:	000087b4 	movhi	zero,542
    7ee0:	0000864c 	andi	zero,zero,537
    7ee4:	000087b4 	movhi	zero,542
    7ee8:	000087b4 	movhi	zero,542
    7eec:	000087b4 	movhi	zero,542
    7ef0:	000087b4 	movhi	zero,542
    7ef4:	000087b4 	movhi	zero,542
    7ef8:	000087b4 	movhi	zero,542
    7efc:	000087b4 	movhi	zero,542
    7f00:	000087b4 	movhi	zero,542
    7f04:	000087b4 	movhi	zero,542
    7f08:	000087b4 	movhi	zero,542
    7f0c:	000083f8 	rdprs	zero,zero,527
    7f10:	00008424 	muli	zero,zero,528
    7f14:	000087b4 	movhi	zero,542
    7f18:	000087b4 	movhi	zero,542
    7f1c:	000087b4 	movhi	zero,542
    7f20:	0000875c 	xori	zero,zero,541
    7f24:	00008424 	muli	zero,zero,528
    7f28:	000087b4 	movhi	zero,542
    7f2c:	000087b4 	movhi	zero,542
    7f30:	000082b8 	rdprs	zero,zero,522
    7f34:	000087b4 	movhi	zero,542
    7f38:	000082c8 	cmpgei	zero,zero,523
    7f3c:	00008304 	movi	zero,524
    7f40:	00008000 	call	800 <___vfprintf_internal_r+0x6c>
    7f44:	000082ac 	andhi	zero,zero,522
    7f48:	000087b4 	movhi	zero,542
    7f4c:	00008688 	cmpgei	zero,zero,538
    7f50:	000087b4 	movhi	zero,542
    7f54:	000086e0 	cmpeqi	zero,zero,539
    7f58:	000087b4 	movhi	zero,542
    7f5c:	000087b4 	movhi	zero,542
    7f60:	000083a4 	muli	zero,zero,526
    7f64:	42000204 	addi	r8,r8,8
    7f68:	da802317 	ldw	r10,140(sp)
    7f6c:	5455883a 	add	r10,r10,r17
    7f70:	da802315 	stw	r10,140(sp)
    7f74:	003f8b06 	br	7da4 <___vfiprintf_internal_r+0x144>
    7f78:	d9002017 	ldw	r4,128(sp)
    7f7c:	a00b883a 	mov	r5,r20
    7f80:	0002a640 	call	2a64 <__swsetup_r>
    7f84:	1003b11e 	bne	r2,zero,8e4c <___vfiprintf_internal_r+0x11ec>
    7f88:	a080030b 	ldhu	r2,12(r20)
    7f8c:	00c00284 	movi	r3,10
    7f90:	1080068c 	andi	r2,r2,26
    7f94:	10ff541e 	bne	r2,r3,7ce8 <___vfiprintf_internal_r+0x88>
    7f98:	a080038f 	ldh	r2,14(r20)
    7f9c:	103f5216 	blt	r2,zero,7ce8 <___vfiprintf_internal_r+0x88>
    7fa0:	d9c02217 	ldw	r7,136(sp)
    7fa4:	d9002017 	ldw	r4,128(sp)
    7fa8:	e00d883a 	mov	r6,fp
    7fac:	a00b883a 	mov	r5,r20
    7fb0:	00090d80 	call	90d8 <__sbprintf>
    7fb4:	dfc03617 	ldw	ra,216(sp)
    7fb8:	df003517 	ldw	fp,212(sp)
    7fbc:	ddc03417 	ldw	r23,208(sp)
    7fc0:	dd803317 	ldw	r22,204(sp)
    7fc4:	dd403217 	ldw	r21,200(sp)
    7fc8:	dd003117 	ldw	r20,196(sp)
    7fcc:	dcc03017 	ldw	r19,192(sp)
    7fd0:	dc802f17 	ldw	r18,188(sp)
    7fd4:	dc402e17 	ldw	r17,184(sp)
    7fd8:	dc002d17 	ldw	r16,180(sp)
    7fdc:	dec03704 	addi	sp,sp,220
    7fe0:	f800283a 	ret
    7fe4:	0004a380 	call	4a38 <__sinit>
    7fe8:	003f2f06 	br	7ca8 <___vfiprintf_internal_r+0x48>
    7fec:	0463c83a 	sub	r17,zero,r17
    7ff0:	d8802215 	stw	r2,136(sp)
    7ff4:	a5000114 	ori	r20,r20,4
    7ff8:	80c00007 	ldb	r3,0(r16)
    7ffc:	003f7706 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8000:	00800c04 	movi	r2,48
    8004:	da802217 	ldw	r10,136(sp)
    8008:	d8801d05 	stb	r2,116(sp)
    800c:	00801e04 	movi	r2,120
    8010:	d8801d45 	stb	r2,117(sp)
    8014:	d8001d85 	stb	zero,118(sp)
    8018:	50c00104 	addi	r3,r10,4
    801c:	54800017 	ldw	r18,0(r10)
    8020:	0027883a 	mov	r19,zero
    8024:	a0800094 	ori	r2,r20,2
    8028:	48030b16 	blt	r9,zero,8c58 <___vfiprintf_internal_r+0xff8>
    802c:	00bfdfc4 	movi	r2,-129
    8030:	a096703a 	and	r11,r20,r2
    8034:	d8c02215 	stw	r3,136(sp)
    8038:	5d000094 	ori	r20,r11,2
    803c:	90032b1e 	bne	r18,zero,8cec <___vfiprintf_internal_r+0x108c>
    8040:	00800074 	movhi	r2,1
    8044:	10bd6904 	addi	r2,r2,-2652
    8048:	d8802615 	stw	r2,152(sp)
    804c:	0039883a 	mov	fp,zero
    8050:	48017b1e 	bne	r9,zero,8640 <___vfiprintf_internal_r+0x9e0>
    8054:	0013883a 	mov	r9,zero
    8058:	0027883a 	mov	r19,zero
    805c:	dd401a04 	addi	r21,sp,104
    8060:	4825883a 	mov	r18,r9
    8064:	4cc0010e 	bge	r9,r19,806c <___vfiprintf_internal_r+0x40c>
    8068:	9825883a 	mov	r18,r19
    806c:	e7003fcc 	andi	fp,fp,255
    8070:	e700201c 	xori	fp,fp,128
    8074:	e73fe004 	addi	fp,fp,-128
    8078:	e0000126 	beq	fp,zero,8080 <___vfiprintf_internal_r+0x420>
    807c:	94800044 	addi	r18,r18,1
    8080:	a380008c 	andi	r14,r20,2
    8084:	70000126 	beq	r14,zero,808c <___vfiprintf_internal_r+0x42c>
    8088:	94800084 	addi	r18,r18,2
    808c:	a700210c 	andi	fp,r20,132
    8090:	e001df1e 	bne	fp,zero,8810 <___vfiprintf_internal_r+0xbb0>
    8094:	8c87c83a 	sub	r3,r17,r18
    8098:	00c1dd0e 	bge	zero,r3,8810 <___vfiprintf_internal_r+0xbb0>
    809c:	01c00404 	movi	r7,16
    80a0:	d8801c17 	ldw	r2,112(sp)
    80a4:	38c3ad0e 	bge	r7,r3,8f5c <___vfiprintf_internal_r+0x12fc>
    80a8:	02800074 	movhi	r10,1
    80ac:	52bdce04 	addi	r10,r10,-2248
    80b0:	dc002915 	stw	r16,164(sp)
    80b4:	d9801b17 	ldw	r6,108(sp)
    80b8:	da802415 	stw	r10,144(sp)
    80bc:	03c001c4 	movi	r15,7
    80c0:	da402515 	stw	r9,148(sp)
    80c4:	db802815 	stw	r14,160(sp)
    80c8:	1821883a 	mov	r16,r3
    80cc:	00000506 	br	80e4 <___vfiprintf_internal_r+0x484>
    80d0:	31400084 	addi	r5,r6,2
    80d4:	42000204 	addi	r8,r8,8
    80d8:	200d883a 	mov	r6,r4
    80dc:	843ffc04 	addi	r16,r16,-16
    80e0:	3c000d0e 	bge	r7,r16,8118 <___vfiprintf_internal_r+0x4b8>
    80e4:	10800404 	addi	r2,r2,16
    80e8:	31000044 	addi	r4,r6,1
    80ec:	45800015 	stw	r22,0(r8)
    80f0:	41c00115 	stw	r7,4(r8)
    80f4:	d8801c15 	stw	r2,112(sp)
    80f8:	d9001b15 	stw	r4,108(sp)
    80fc:	793ff40e 	bge	r15,r4,80d0 <___vfiprintf_internal_r+0x470>
    8100:	1001b51e 	bne	r2,zero,87d8 <___vfiprintf_internal_r+0xb78>
    8104:	843ffc04 	addi	r16,r16,-16
    8108:	000d883a 	mov	r6,zero
    810c:	01400044 	movi	r5,1
    8110:	d811883a 	mov	r8,sp
    8114:	3c3ff316 	blt	r7,r16,80e4 <___vfiprintf_internal_r+0x484>
    8118:	8007883a 	mov	r3,r16
    811c:	da402517 	ldw	r9,148(sp)
    8120:	db802817 	ldw	r14,160(sp)
    8124:	dc002917 	ldw	r16,164(sp)
    8128:	da802417 	ldw	r10,144(sp)
    812c:	1885883a 	add	r2,r3,r2
    8130:	40c00115 	stw	r3,4(r8)
    8134:	42800015 	stw	r10,0(r8)
    8138:	d8801c15 	stw	r2,112(sp)
    813c:	d9401b15 	stw	r5,108(sp)
    8140:	00c001c4 	movi	r3,7
    8144:	19426016 	blt	r3,r5,8ac8 <___vfiprintf_internal_r+0xe68>
    8148:	d8c01d87 	ldb	r3,118(sp)
    814c:	42000204 	addi	r8,r8,8
    8150:	29000044 	addi	r4,r5,1
    8154:	1801b31e 	bne	r3,zero,8824 <___vfiprintf_internal_r+0xbc4>
    8158:	7001c026 	beq	r14,zero,885c <___vfiprintf_internal_r+0xbfc>
    815c:	d8c01d04 	addi	r3,sp,116
    8160:	10800084 	addi	r2,r2,2
    8164:	40c00015 	stw	r3,0(r8)
    8168:	00c00084 	movi	r3,2
    816c:	40c00115 	stw	r3,4(r8)
    8170:	d8801c15 	stw	r2,112(sp)
    8174:	d9001b15 	stw	r4,108(sp)
    8178:	00c001c4 	movi	r3,7
    817c:	1902650e 	bge	r3,r4,8b14 <___vfiprintf_internal_r+0xeb4>
    8180:	10029a1e 	bne	r2,zero,8bec <___vfiprintf_internal_r+0xf8c>
    8184:	00c02004 	movi	r3,128
    8188:	01000044 	movi	r4,1
    818c:	000b883a 	mov	r5,zero
    8190:	d811883a 	mov	r8,sp
    8194:	e0c1b31e 	bne	fp,r3,8864 <___vfiprintf_internal_r+0xc04>
    8198:	8cb9c83a 	sub	fp,r17,r18
    819c:	0701b10e 	bge	zero,fp,8864 <___vfiprintf_internal_r+0xc04>
    81a0:	01c00404 	movi	r7,16
    81a4:	3f03890e 	bge	r7,fp,8fcc <___vfiprintf_internal_r+0x136c>
    81a8:	00c00074 	movhi	r3,1
    81ac:	18fdca04 	addi	r3,r3,-2264
    81b0:	d8c02415 	stw	r3,144(sp)
    81b4:	8007883a 	mov	r3,r16
    81b8:	034001c4 	movi	r13,7
    81bc:	e021883a 	mov	r16,fp
    81c0:	da402515 	stw	r9,148(sp)
    81c4:	1839883a 	mov	fp,r3
    81c8:	00000506 	br	81e0 <___vfiprintf_internal_r+0x580>
    81cc:	29800084 	addi	r6,r5,2
    81d0:	42000204 	addi	r8,r8,8
    81d4:	180b883a 	mov	r5,r3
    81d8:	843ffc04 	addi	r16,r16,-16
    81dc:	3c000d0e 	bge	r7,r16,8214 <___vfiprintf_internal_r+0x5b4>
    81e0:	10800404 	addi	r2,r2,16
    81e4:	28c00044 	addi	r3,r5,1
    81e8:	45c00015 	stw	r23,0(r8)
    81ec:	41c00115 	stw	r7,4(r8)
    81f0:	d8801c15 	stw	r2,112(sp)
    81f4:	d8c01b15 	stw	r3,108(sp)
    81f8:	68fff40e 	bge	r13,r3,81cc <___vfiprintf_internal_r+0x56c>
    81fc:	1002241e 	bne	r2,zero,8a90 <___vfiprintf_internal_r+0xe30>
    8200:	843ffc04 	addi	r16,r16,-16
    8204:	01800044 	movi	r6,1
    8208:	000b883a 	mov	r5,zero
    820c:	d811883a 	mov	r8,sp
    8210:	3c3ff316 	blt	r7,r16,81e0 <___vfiprintf_internal_r+0x580>
    8214:	da402517 	ldw	r9,148(sp)
    8218:	e007883a 	mov	r3,fp
    821c:	8039883a 	mov	fp,r16
    8220:	1821883a 	mov	r16,r3
    8224:	d8c02417 	ldw	r3,144(sp)
    8228:	1705883a 	add	r2,r2,fp
    822c:	47000115 	stw	fp,4(r8)
    8230:	40c00015 	stw	r3,0(r8)
    8234:	d8801c15 	stw	r2,112(sp)
    8238:	d9801b15 	stw	r6,108(sp)
    823c:	00c001c4 	movi	r3,7
    8240:	19827616 	blt	r3,r6,8c1c <___vfiprintf_internal_r+0xfbc>
    8244:	4cf9c83a 	sub	fp,r9,r19
    8248:	42000204 	addi	r8,r8,8
    824c:	31000044 	addi	r4,r6,1
    8250:	300b883a 	mov	r5,r6
    8254:	07018516 	blt	zero,fp,886c <___vfiprintf_internal_r+0xc0c>
    8258:	9885883a 	add	r2,r19,r2
    825c:	45400015 	stw	r21,0(r8)
    8260:	44c00115 	stw	r19,4(r8)
    8264:	d8801c15 	stw	r2,112(sp)
    8268:	d9001b15 	stw	r4,108(sp)
    826c:	00c001c4 	movi	r3,7
    8270:	1901dd0e 	bge	r3,r4,89e8 <___vfiprintf_internal_r+0xd88>
    8274:	1002401e 	bne	r2,zero,8b78 <___vfiprintf_internal_r+0xf18>
    8278:	d8001b15 	stw	zero,108(sp)
    827c:	a2c0010c 	andi	r11,r20,4
    8280:	58000226 	beq	r11,zero,828c <___vfiprintf_internal_r+0x62c>
    8284:	8ca7c83a 	sub	r19,r17,r18
    8288:	04c2f216 	blt	zero,r19,8e54 <___vfiprintf_internal_r+0x11f4>
    828c:	8c80010e 	bge	r17,r18,8294 <___vfiprintf_internal_r+0x634>
    8290:	9023883a 	mov	r17,r18
    8294:	da802317 	ldw	r10,140(sp)
    8298:	5455883a 	add	r10,r10,r17
    829c:	da802315 	stw	r10,140(sp)
    82a0:	d8001b15 	stw	zero,108(sp)
    82a4:	d811883a 	mov	r8,sp
    82a8:	003ea206 	br	7d34 <___vfiprintf_internal_r+0xd4>
    82ac:	a5000814 	ori	r20,r20,32
    82b0:	80c00007 	ldb	r3,0(r16)
    82b4:	003ec906 	br	7ddc <___vfiprintf_internal_r+0x17c>
    82b8:	80c00007 	ldb	r3,0(r16)
    82bc:	1b030926 	beq	r3,r12,8ee4 <___vfiprintf_internal_r+0x1284>
    82c0:	a5000414 	ori	r20,r20,16
    82c4:	003ec506 	br	7ddc <___vfiprintf_internal_r+0x17c>
    82c8:	21003fcc 	andi	r4,r4,255
    82cc:	20035e1e 	bne	r4,zero,9048 <___vfiprintf_internal_r+0x13e8>
    82d0:	a080080c 	andi	r2,r20,32
    82d4:	1002a526 	beq	r2,zero,8d6c <___vfiprintf_internal_r+0x110c>
    82d8:	da802217 	ldw	r10,136(sp)
    82dc:	50800017 	ldw	r2,0(r10)
    82e0:	da802317 	ldw	r10,140(sp)
    82e4:	5007d7fa 	srai	r3,r10,31
    82e8:	da802217 	ldw	r10,136(sp)
    82ec:	10c00115 	stw	r3,4(r2)
    82f0:	52800104 	addi	r10,r10,4
    82f4:	da802215 	stw	r10,136(sp)
    82f8:	da802317 	ldw	r10,140(sp)
    82fc:	12800015 	stw	r10,0(r2)
    8300:	003e8c06 	br	7d34 <___vfiprintf_internal_r+0xd4>
    8304:	21003fcc 	andi	r4,r4,255
    8308:	2003511e 	bne	r4,zero,9050 <___vfiprintf_internal_r+0x13f0>
    830c:	a080080c 	andi	r2,r20,32
    8310:	1000a126 	beq	r2,zero,8598 <___vfiprintf_internal_r+0x938>
    8314:	da802217 	ldw	r10,136(sp)
    8318:	d8001d85 	stb	zero,118(sp)
    831c:	50800204 	addi	r2,r10,8
    8320:	54800017 	ldw	r18,0(r10)
    8324:	54c00117 	ldw	r19,4(r10)
    8328:	4802b416 	blt	r9,zero,8dfc <___vfiprintf_internal_r+0x119c>
    832c:	013fdfc4 	movi	r4,-129
    8330:	94c6b03a 	or	r3,r18,r19
    8334:	d8802215 	stw	r2,136(sp)
    8338:	a128703a 	and	r20,r20,r4
    833c:	1800a226 	beq	r3,zero,85c8 <___vfiprintf_internal_r+0x968>
    8340:	0039883a 	mov	fp,zero
    8344:	dd401a04 	addi	r21,sp,104
    8348:	9006d0fa 	srli	r3,r18,3
    834c:	9808977a 	slli	r4,r19,29
    8350:	9826d0fa 	srli	r19,r19,3
    8354:	948001cc 	andi	r18,r18,7
    8358:	90800c04 	addi	r2,r18,48
    835c:	ad7fffc4 	addi	r21,r21,-1
    8360:	20e4b03a 	or	r18,r4,r3
    8364:	a8800005 	stb	r2,0(r21)
    8368:	94c6b03a 	or	r3,r18,r19
    836c:	183ff61e 	bne	r3,zero,8348 <___vfiprintf_internal_r+0x6e8>
    8370:	a0c0004c 	andi	r3,r20,1
    8374:	18005926 	beq	r3,zero,84dc <___vfiprintf_internal_r+0x87c>
    8378:	10803fcc 	andi	r2,r2,255
    837c:	1080201c 	xori	r2,r2,128
    8380:	10bfe004 	addi	r2,r2,-128
    8384:	00c00c04 	movi	r3,48
    8388:	10c05426 	beq	r2,r3,84dc <___vfiprintf_internal_r+0x87c>
    838c:	da801e17 	ldw	r10,120(sp)
    8390:	a8bfffc4 	addi	r2,r21,-1
    8394:	a8ffffc5 	stb	r3,-1(r21)
    8398:	50a7c83a 	sub	r19,r10,r2
    839c:	102b883a 	mov	r21,r2
    83a0:	003f2f06 	br	8060 <___vfiprintf_internal_r+0x400>
    83a4:	21003fcc 	andi	r4,r4,255
    83a8:	2003421e 	bne	r4,zero,90b4 <___vfiprintf_internal_r+0x1454>
    83ac:	00800074 	movhi	r2,1
    83b0:	10bd6904 	addi	r2,r2,-2652
    83b4:	d8802615 	stw	r2,152(sp)
    83b8:	a080080c 	andi	r2,r20,32
    83bc:	1000aa26 	beq	r2,zero,8668 <___vfiprintf_internal_r+0xa08>
    83c0:	da802217 	ldw	r10,136(sp)
    83c4:	54800017 	ldw	r18,0(r10)
    83c8:	54c00117 	ldw	r19,4(r10)
    83cc:	52800204 	addi	r10,r10,8
    83d0:	da802215 	stw	r10,136(sp)
    83d4:	a080004c 	andi	r2,r20,1
    83d8:	1001d226 	beq	r2,zero,8b24 <___vfiprintf_internal_r+0xec4>
    83dc:	94c4b03a 	or	r2,r18,r19
    83e0:	1002351e 	bne	r2,zero,8cb8 <___vfiprintf_internal_r+0x1058>
    83e4:	d8001d85 	stb	zero,118(sp)
    83e8:	48022216 	blt	r9,zero,8c74 <___vfiprintf_internal_r+0x1014>
    83ec:	00bfdfc4 	movi	r2,-129
    83f0:	a0a8703a 	and	r20,r20,r2
    83f4:	003f1506 	br	804c <___vfiprintf_internal_r+0x3ec>
    83f8:	da802217 	ldw	r10,136(sp)
    83fc:	04800044 	movi	r18,1
    8400:	d8001d85 	stb	zero,118(sp)
    8404:	50800017 	ldw	r2,0(r10)
    8408:	52800104 	addi	r10,r10,4
    840c:	da802215 	stw	r10,136(sp)
    8410:	d8801005 	stb	r2,64(sp)
    8414:	9027883a 	mov	r19,r18
    8418:	dd401004 	addi	r21,sp,64
    841c:	0013883a 	mov	r9,zero
    8420:	003f1706 	br	8080 <___vfiprintf_internal_r+0x420>
    8424:	21003fcc 	andi	r4,r4,255
    8428:	2003201e 	bne	r4,zero,90ac <___vfiprintf_internal_r+0x144c>
    842c:	a080080c 	andi	r2,r20,32
    8430:	10004b26 	beq	r2,zero,8560 <___vfiprintf_internal_r+0x900>
    8434:	da802217 	ldw	r10,136(sp)
    8438:	50800117 	ldw	r2,4(r10)
    843c:	54800017 	ldw	r18,0(r10)
    8440:	52800204 	addi	r10,r10,8
    8444:	da802215 	stw	r10,136(sp)
    8448:	1027883a 	mov	r19,r2
    844c:	10022c16 	blt	r2,zero,8d00 <___vfiprintf_internal_r+0x10a0>
    8450:	df001d83 	ldbu	fp,118(sp)
    8454:	48007216 	blt	r9,zero,8620 <___vfiprintf_internal_r+0x9c0>
    8458:	00ffdfc4 	movi	r3,-129
    845c:	94c4b03a 	or	r2,r18,r19
    8460:	a0e8703a 	and	r20,r20,r3
    8464:	1000cc26 	beq	r2,zero,8798 <___vfiprintf_internal_r+0xb38>
    8468:	98021026 	beq	r19,zero,8cac <___vfiprintf_internal_r+0x104c>
    846c:	dc402415 	stw	r17,144(sp)
    8470:	dc002515 	stw	r16,148(sp)
    8474:	9823883a 	mov	r17,r19
    8478:	9021883a 	mov	r16,r18
    847c:	dd401a04 	addi	r21,sp,104
    8480:	4825883a 	mov	r18,r9
    8484:	4027883a 	mov	r19,r8
    8488:	8009883a 	mov	r4,r16
    848c:	880b883a 	mov	r5,r17
    8490:	01800284 	movi	r6,10
    8494:	000f883a 	mov	r7,zero
    8498:	000a0400 	call	a040 <__umoddi3>
    849c:	10800c04 	addi	r2,r2,48
    84a0:	ad7fffc4 	addi	r21,r21,-1
    84a4:	8009883a 	mov	r4,r16
    84a8:	880b883a 	mov	r5,r17
    84ac:	a8800005 	stb	r2,0(r21)
    84b0:	01800284 	movi	r6,10
    84b4:	000f883a 	mov	r7,zero
    84b8:	0009ac80 	call	9ac8 <__udivdi3>
    84bc:	1021883a 	mov	r16,r2
    84c0:	10c4b03a 	or	r2,r2,r3
    84c4:	1823883a 	mov	r17,r3
    84c8:	103fef1e 	bne	r2,zero,8488 <___vfiprintf_internal_r+0x828>
    84cc:	dc402417 	ldw	r17,144(sp)
    84d0:	dc002517 	ldw	r16,148(sp)
    84d4:	9013883a 	mov	r9,r18
    84d8:	9811883a 	mov	r8,r19
    84dc:	da801e17 	ldw	r10,120(sp)
    84e0:	5567c83a 	sub	r19,r10,r21
    84e4:	003ede06 	br	8060 <___vfiprintf_internal_r+0x400>
    84e8:	38803fcc 	andi	r2,r7,255
    84ec:	1080201c 	xori	r2,r2,128
    84f0:	10bfe004 	addi	r2,r2,-128
    84f4:	1002371e 	bne	r2,zero,8dd4 <___vfiprintf_internal_r+0x1174>
    84f8:	01000044 	movi	r4,1
    84fc:	01c00804 	movi	r7,32
    8500:	80c00007 	ldb	r3,0(r16)
    8504:	003e3506 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8508:	a5000054 	ori	r20,r20,1
    850c:	80c00007 	ldb	r3,0(r16)
    8510:	003e3206 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8514:	a5002014 	ori	r20,r20,128
    8518:	80c00007 	ldb	r3,0(r16)
    851c:	003e2f06 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8520:	8015883a 	mov	r10,r16
    8524:	0023883a 	mov	r17,zero
    8528:	18bff404 	addi	r2,r3,-48
    852c:	50c00007 	ldb	r3,0(r10)
    8530:	8c4002a4 	muli	r17,r17,10
    8534:	84000044 	addi	r16,r16,1
    8538:	8015883a 	mov	r10,r16
    853c:	1463883a 	add	r17,r2,r17
    8540:	18bff404 	addi	r2,r3,-48
    8544:	30bff92e 	bgeu	r6,r2,852c <___vfiprintf_internal_r+0x8cc>
    8548:	003e2506 	br	7de0 <___vfiprintf_internal_r+0x180>
    854c:	21003fcc 	andi	r4,r4,255
    8550:	2002d41e 	bne	r4,zero,90a4 <___vfiprintf_internal_r+0x1444>
    8554:	a5000414 	ori	r20,r20,16
    8558:	a080080c 	andi	r2,r20,32
    855c:	103fb51e 	bne	r2,zero,8434 <___vfiprintf_internal_r+0x7d4>
    8560:	a080040c 	andi	r2,r20,16
    8564:	1001f826 	beq	r2,zero,8d48 <___vfiprintf_internal_r+0x10e8>
    8568:	da802217 	ldw	r10,136(sp)
    856c:	54800017 	ldw	r18,0(r10)
    8570:	52800104 	addi	r10,r10,4
    8574:	da802215 	stw	r10,136(sp)
    8578:	9027d7fa 	srai	r19,r18,31
    857c:	9805883a 	mov	r2,r19
    8580:	003fb206 	br	844c <___vfiprintf_internal_r+0x7ec>
    8584:	21003fcc 	andi	r4,r4,255
    8588:	2002c41e 	bne	r4,zero,909c <___vfiprintf_internal_r+0x143c>
    858c:	a5000414 	ori	r20,r20,16
    8590:	a080080c 	andi	r2,r20,32
    8594:	103f5f1e 	bne	r2,zero,8314 <___vfiprintf_internal_r+0x6b4>
    8598:	a080040c 	andi	r2,r20,16
    859c:	10020f26 	beq	r2,zero,8ddc <___vfiprintf_internal_r+0x117c>
    85a0:	da802217 	ldw	r10,136(sp)
    85a4:	d8001d85 	stb	zero,118(sp)
    85a8:	0027883a 	mov	r19,zero
    85ac:	50800104 	addi	r2,r10,4
    85b0:	54800017 	ldw	r18,0(r10)
    85b4:	48021116 	blt	r9,zero,8dfc <___vfiprintf_internal_r+0x119c>
    85b8:	00ffdfc4 	movi	r3,-129
    85bc:	d8802215 	stw	r2,136(sp)
    85c0:	a0e8703a 	and	r20,r20,r3
    85c4:	903f5e1e 	bne	r18,zero,8340 <___vfiprintf_internal_r+0x6e0>
    85c8:	0039883a 	mov	fp,zero
    85cc:	4802a626 	beq	r9,zero,9068 <___vfiprintf_internal_r+0x1408>
    85d0:	0025883a 	mov	r18,zero
    85d4:	0027883a 	mov	r19,zero
    85d8:	003f5a06 	br	8344 <___vfiprintf_internal_r+0x6e4>
    85dc:	21003fcc 	andi	r4,r4,255
    85e0:	20029f1e 	bne	r4,zero,9060 <___vfiprintf_internal_r+0x1400>
    85e4:	a5000414 	ori	r20,r20,16
    85e8:	a080080c 	andi	r2,r20,32
    85ec:	10005e1e 	bne	r2,zero,8768 <___vfiprintf_internal_r+0xb08>
    85f0:	a080040c 	andi	r2,r20,16
    85f4:	1001a21e 	bne	r2,zero,8c80 <___vfiprintf_internal_r+0x1020>
    85f8:	a080100c 	andi	r2,r20,64
    85fc:	d8001d85 	stb	zero,118(sp)
    8600:	da802217 	ldw	r10,136(sp)
    8604:	1002231e 	bne	r2,zero,8e94 <___vfiprintf_internal_r+0x1234>
    8608:	50800104 	addi	r2,r10,4
    860c:	54800017 	ldw	r18,0(r10)
    8610:	0027883a 	mov	r19,zero
    8614:	4801a00e 	bge	r9,zero,8c98 <___vfiprintf_internal_r+0x1038>
    8618:	d8802215 	stw	r2,136(sp)
    861c:	0039883a 	mov	fp,zero
    8620:	94c4b03a 	or	r2,r18,r19
    8624:	103f901e 	bne	r2,zero,8468 <___vfiprintf_internal_r+0x808>
    8628:	00800044 	movi	r2,1
    862c:	10803fcc 	andi	r2,r2,255
    8630:	00c00044 	movi	r3,1
    8634:	10c05926 	beq	r2,r3,879c <___vfiprintf_internal_r+0xb3c>
    8638:	00c00084 	movi	r3,2
    863c:	10ffe41e 	bne	r2,r3,85d0 <___vfiprintf_internal_r+0x970>
    8640:	0025883a 	mov	r18,zero
    8644:	0027883a 	mov	r19,zero
    8648:	00013d06 	br	8b40 <___vfiprintf_internal_r+0xee0>
    864c:	21003fcc 	andi	r4,r4,255
    8650:	2002811e 	bne	r4,zero,9058 <___vfiprintf_internal_r+0x13f8>
    8654:	00800074 	movhi	r2,1
    8658:	10bd6404 	addi	r2,r2,-2672
    865c:	d8802615 	stw	r2,152(sp)
    8660:	a080080c 	andi	r2,r20,32
    8664:	103f561e 	bne	r2,zero,83c0 <___vfiprintf_internal_r+0x760>
    8668:	a080040c 	andi	r2,r20,16
    866c:	1001d126 	beq	r2,zero,8db4 <___vfiprintf_internal_r+0x1154>
    8670:	da802217 	ldw	r10,136(sp)
    8674:	0027883a 	mov	r19,zero
    8678:	54800017 	ldw	r18,0(r10)
    867c:	52800104 	addi	r10,r10,4
    8680:	da802215 	stw	r10,136(sp)
    8684:	003f5306 	br	83d4 <___vfiprintf_internal_r+0x774>
    8688:	da802217 	ldw	r10,136(sp)
    868c:	d8001d85 	stb	zero,118(sp)
    8690:	55400017 	ldw	r21,0(r10)
    8694:	50c00104 	addi	r3,r10,4
    8698:	a8024226 	beq	r21,zero,8fa4 <___vfiprintf_internal_r+0x1344>
    869c:	48021816 	blt	r9,zero,8f00 <___vfiprintf_internal_r+0x12a0>
    86a0:	480d883a 	mov	r6,r9
    86a4:	000b883a 	mov	r5,zero
    86a8:	a809883a 	mov	r4,r21
    86ac:	d8c02a15 	stw	r3,168(sp)
    86b0:	da002b15 	stw	r8,172(sp)
    86b4:	da402c15 	stw	r9,176(sp)
    86b8:	0005fa40 	call	5fa4 <memchr>
    86bc:	d8c02a17 	ldw	r3,168(sp)
    86c0:	da002b17 	ldw	r8,172(sp)
    86c4:	da402c17 	ldw	r9,176(sp)
    86c8:	10024826 	beq	r2,zero,8fec <___vfiprintf_internal_r+0x138c>
    86cc:	1567c83a 	sub	r19,r2,r21
    86d0:	df001d83 	ldbu	fp,118(sp)
    86d4:	d8c02215 	stw	r3,136(sp)
    86d8:	0013883a 	mov	r9,zero
    86dc:	003e6006 	br	8060 <___vfiprintf_internal_r+0x400>
    86e0:	21003fcc 	andi	r4,r4,255
    86e4:	203fc026 	beq	r4,zero,85e8 <___vfiprintf_internal_r+0x988>
    86e8:	d9c01d85 	stb	r7,118(sp)
    86ec:	003fbe06 	br	85e8 <___vfiprintf_internal_r+0x988>
    86f0:	da802217 	ldw	r10,136(sp)
    86f4:	54400017 	ldw	r17,0(r10)
    86f8:	50800104 	addi	r2,r10,4
    86fc:	883e3b16 	blt	r17,zero,7fec <___vfiprintf_internal_r+0x38c>
    8700:	d8802215 	stw	r2,136(sp)
    8704:	80c00007 	ldb	r3,0(r16)
    8708:	003db406 	br	7ddc <___vfiprintf_internal_r+0x17c>
    870c:	01000044 	movi	r4,1
    8710:	01c00ac4 	movi	r7,43
    8714:	80c00007 	ldb	r3,0(r16)
    8718:	003db006 	br	7ddc <___vfiprintf_internal_r+0x17c>
    871c:	80c00007 	ldb	r3,0(r16)
    8720:	82800044 	addi	r10,r16,1
    8724:	1b423c26 	beq	r3,r13,9018 <___vfiprintf_internal_r+0x13b8>
    8728:	18bff404 	addi	r2,r3,-48
    872c:	0013883a 	mov	r9,zero
    8730:	30822b36 	bltu	r6,r2,8fe0 <___vfiprintf_internal_r+0x1380>
    8734:	50c00007 	ldb	r3,0(r10)
    8738:	4a4002a4 	muli	r9,r9,10
    873c:	54000044 	addi	r16,r10,1
    8740:	8015883a 	mov	r10,r16
    8744:	4893883a 	add	r9,r9,r2
    8748:	18bff404 	addi	r2,r3,-48
    874c:	30bff92e 	bgeu	r6,r2,8734 <___vfiprintf_internal_r+0xad4>
    8750:	483da30e 	bge	r9,zero,7de0 <___vfiprintf_internal_r+0x180>
    8754:	027fffc4 	movi	r9,-1
    8758:	003da106 	br	7de0 <___vfiprintf_internal_r+0x180>
    875c:	a5001014 	ori	r20,r20,64
    8760:	80c00007 	ldb	r3,0(r16)
    8764:	003d9d06 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8768:	da802217 	ldw	r10,136(sp)
    876c:	d8001d85 	stb	zero,118(sp)
    8770:	50c00204 	addi	r3,r10,8
    8774:	54800017 	ldw	r18,0(r10)
    8778:	54c00117 	ldw	r19,4(r10)
    877c:	4801ca16 	blt	r9,zero,8ea8 <___vfiprintf_internal_r+0x1248>
    8780:	013fdfc4 	movi	r4,-129
    8784:	94c4b03a 	or	r2,r18,r19
    8788:	d8c02215 	stw	r3,136(sp)
    878c:	a128703a 	and	r20,r20,r4
    8790:	0039883a 	mov	fp,zero
    8794:	103f341e 	bne	r2,zero,8468 <___vfiprintf_internal_r+0x808>
    8798:	483e2e26 	beq	r9,zero,8054 <___vfiprintf_internal_r+0x3f4>
    879c:	0025883a 	mov	r18,zero
    87a0:	94800c04 	addi	r18,r18,48
    87a4:	dc8019c5 	stb	r18,103(sp)
    87a8:	dcc02717 	ldw	r19,156(sp)
    87ac:	dd4019c4 	addi	r21,sp,103
    87b0:	003e2b06 	br	8060 <___vfiprintf_internal_r+0x400>
    87b4:	21003fcc 	andi	r4,r4,255
    87b8:	2002361e 	bne	r4,zero,9094 <___vfiprintf_internal_r+0x1434>
    87bc:	1801c126 	beq	r3,zero,8ec4 <___vfiprintf_internal_r+0x1264>
    87c0:	04800044 	movi	r18,1
    87c4:	d8c01005 	stb	r3,64(sp)
    87c8:	d8001d85 	stb	zero,118(sp)
    87cc:	9027883a 	mov	r19,r18
    87d0:	dd401004 	addi	r21,sp,64
    87d4:	003f1106 	br	841c <___vfiprintf_internal_r+0x7bc>
    87d8:	d9402117 	ldw	r5,132(sp)
    87dc:	d9002017 	ldw	r4,128(sp)
    87e0:	d9801a04 	addi	r6,sp,104
    87e4:	d9c02b15 	stw	r7,172(sp)
    87e8:	dbc02a15 	stw	r15,168(sp)
    87ec:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    87f0:	d9c02b17 	ldw	r7,172(sp)
    87f4:	dbc02a17 	ldw	r15,168(sp)
    87f8:	10006d1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    87fc:	d9801b17 	ldw	r6,108(sp)
    8800:	d8801c17 	ldw	r2,112(sp)
    8804:	d811883a 	mov	r8,sp
    8808:	31400044 	addi	r5,r6,1
    880c:	003e3306 	br	80dc <___vfiprintf_internal_r+0x47c>
    8810:	d9401b17 	ldw	r5,108(sp)
    8814:	d8801c17 	ldw	r2,112(sp)
    8818:	29000044 	addi	r4,r5,1
    881c:	d8c01d87 	ldb	r3,118(sp)
    8820:	183e4d26 	beq	r3,zero,8158 <___vfiprintf_internal_r+0x4f8>
    8824:	00c00044 	movi	r3,1
    8828:	d9401d84 	addi	r5,sp,118
    882c:	10c5883a 	add	r2,r2,r3
    8830:	41400015 	stw	r5,0(r8)
    8834:	40c00115 	stw	r3,4(r8)
    8838:	d8801c15 	stw	r2,112(sp)
    883c:	d9001b15 	stw	r4,108(sp)
    8840:	014001c4 	movi	r5,7
    8844:	2900a90e 	bge	r5,r4,8aec <___vfiprintf_internal_r+0xe8c>
    8848:	1000da1e 	bne	r2,zero,8bb4 <___vfiprintf_internal_r+0xf54>
    884c:	7000ab1e 	bne	r14,zero,8afc <___vfiprintf_internal_r+0xe9c>
    8850:	000b883a 	mov	r5,zero
    8854:	1809883a 	mov	r4,r3
    8858:	d811883a 	mov	r8,sp
    885c:	00c02004 	movi	r3,128
    8860:	e0fe4d26 	beq	fp,r3,8198 <___vfiprintf_internal_r+0x538>
    8864:	4cf9c83a 	sub	fp,r9,r19
    8868:	073e7b0e 	bge	zero,fp,8258 <___vfiprintf_internal_r+0x5f8>
    886c:	01c00404 	movi	r7,16
    8870:	3f01900e 	bge	r7,fp,8eb4 <___vfiprintf_internal_r+0x1254>
    8874:	00c00074 	movhi	r3,1
    8878:	18fdca04 	addi	r3,r3,-2264
    887c:	d8c02415 	stw	r3,144(sp)
    8880:	034001c4 	movi	r13,7
    8884:	00000506 	br	889c <___vfiprintf_internal_r+0xc3c>
    8888:	29000084 	addi	r4,r5,2
    888c:	42000204 	addi	r8,r8,8
    8890:	180b883a 	mov	r5,r3
    8894:	e73ffc04 	addi	fp,fp,-16
    8898:	3f000d0e 	bge	r7,fp,88d0 <___vfiprintf_internal_r+0xc70>
    889c:	10800404 	addi	r2,r2,16
    88a0:	28c00044 	addi	r3,r5,1
    88a4:	45c00015 	stw	r23,0(r8)
    88a8:	41c00115 	stw	r7,4(r8)
    88ac:	d8801c15 	stw	r2,112(sp)
    88b0:	d8c01b15 	stw	r3,108(sp)
    88b4:	68fff40e 	bge	r13,r3,8888 <___vfiprintf_internal_r+0xc28>
    88b8:	1000101e 	bne	r2,zero,88fc <___vfiprintf_internal_r+0xc9c>
    88bc:	e73ffc04 	addi	fp,fp,-16
    88c0:	01000044 	movi	r4,1
    88c4:	000b883a 	mov	r5,zero
    88c8:	d811883a 	mov	r8,sp
    88cc:	3f3ff316 	blt	r7,fp,889c <___vfiprintf_internal_r+0xc3c>
    88d0:	da802417 	ldw	r10,144(sp)
    88d4:	1705883a 	add	r2,r2,fp
    88d8:	47000115 	stw	fp,4(r8)
    88dc:	42800015 	stw	r10,0(r8)
    88e0:	d8801c15 	stw	r2,112(sp)
    88e4:	d9001b15 	stw	r4,108(sp)
    88e8:	00c001c4 	movi	r3,7
    88ec:	19003616 	blt	r3,r4,89c8 <___vfiprintf_internal_r+0xd68>
    88f0:	42000204 	addi	r8,r8,8
    88f4:	21000044 	addi	r4,r4,1
    88f8:	003e5706 	br	8258 <___vfiprintf_internal_r+0x5f8>
    88fc:	d9402117 	ldw	r5,132(sp)
    8900:	d9002017 	ldw	r4,128(sp)
    8904:	d9801a04 	addi	r6,sp,104
    8908:	d9c02b15 	stw	r7,172(sp)
    890c:	db402a15 	stw	r13,168(sp)
    8910:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8914:	d9c02b17 	ldw	r7,172(sp)
    8918:	db402a17 	ldw	r13,168(sp)
    891c:	1000241e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8920:	d9401b17 	ldw	r5,108(sp)
    8924:	d8801c17 	ldw	r2,112(sp)
    8928:	d811883a 	mov	r8,sp
    892c:	29000044 	addi	r4,r5,1
    8930:	003fd806 	br	8894 <___vfiprintf_internal_r+0xc34>
    8934:	d9401b17 	ldw	r5,108(sp)
    8938:	00c00074 	movhi	r3,1
    893c:	18fdce04 	addi	r3,r3,-2248
    8940:	d8c02415 	stw	r3,144(sp)
    8944:	29400044 	addi	r5,r5,1
    8948:	d8c02417 	ldw	r3,144(sp)
    894c:	14c5883a 	add	r2,r2,r19
    8950:	44c00115 	stw	r19,4(r8)
    8954:	40c00015 	stw	r3,0(r8)
    8958:	d8801c15 	stw	r2,112(sp)
    895c:	d9401b15 	stw	r5,108(sp)
    8960:	00c001c4 	movi	r3,7
    8964:	1940070e 	bge	r3,r5,8984 <___vfiprintf_internal_r+0xd24>
    8968:	103e4826 	beq	r2,zero,828c <___vfiprintf_internal_r+0x62c>
    896c:	d9402117 	ldw	r5,132(sp)
    8970:	d9002017 	ldw	r4,128(sp)
    8974:	d9801a04 	addi	r6,sp,104
    8978:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    897c:	10000c1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8980:	d8801c17 	ldw	r2,112(sp)
    8984:	8c80010e 	bge	r17,r18,898c <___vfiprintf_internal_r+0xd2c>
    8988:	9023883a 	mov	r17,r18
    898c:	da802317 	ldw	r10,140(sp)
    8990:	5455883a 	add	r10,r10,r17
    8994:	da802315 	stw	r10,140(sp)
    8998:	103e4126 	beq	r2,zero,82a0 <___vfiprintf_internal_r+0x640>
    899c:	d9402117 	ldw	r5,132(sp)
    89a0:	d9002017 	ldw	r4,128(sp)
    89a4:	d9801a04 	addi	r6,sp,104
    89a8:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    89ac:	103e3c26 	beq	r2,zero,82a0 <___vfiprintf_internal_r+0x640>
    89b0:	dd002117 	ldw	r20,132(sp)
    89b4:	a080030b 	ldhu	r2,12(r20)
    89b8:	1080100c 	andi	r2,r2,64
    89bc:	1001231e 	bne	r2,zero,8e4c <___vfiprintf_internal_r+0x11ec>
    89c0:	d8802317 	ldw	r2,140(sp)
    89c4:	003d7b06 	br	7fb4 <___vfiprintf_internal_r+0x354>
    89c8:	1000991e 	bne	r2,zero,8c30 <___vfiprintf_internal_r+0xfd0>
    89cc:	00c00044 	movi	r3,1
    89d0:	9805883a 	mov	r2,r19
    89d4:	dd400015 	stw	r21,0(sp)
    89d8:	dcc00115 	stw	r19,4(sp)
    89dc:	dcc01c15 	stw	r19,112(sp)
    89e0:	d8c01b15 	stw	r3,108(sp)
    89e4:	d811883a 	mov	r8,sp
    89e8:	42000204 	addi	r8,r8,8
    89ec:	a2c0010c 	andi	r11,r20,4
    89f0:	583fe426 	beq	r11,zero,8984 <___vfiprintf_internal_r+0xd24>
    89f4:	8ca7c83a 	sub	r19,r17,r18
    89f8:	04ffe20e 	bge	zero,r19,8984 <___vfiprintf_internal_r+0xd24>
    89fc:	01c00404 	movi	r7,16
    8a00:	3cffcc0e 	bge	r7,r19,8934 <___vfiprintf_internal_r+0xcd4>
    8a04:	02800074 	movhi	r10,1
    8a08:	52bdce04 	addi	r10,r10,-2248
    8a0c:	d9001b17 	ldw	r4,108(sp)
    8a10:	da802415 	stw	r10,144(sp)
    8a14:	382b883a 	mov	r21,r7
    8a18:	050001c4 	movi	r20,7
    8a1c:	df002017 	ldw	fp,128(sp)
    8a20:	00000506 	br	8a38 <___vfiprintf_internal_r+0xdd8>
    8a24:	21400084 	addi	r5,r4,2
    8a28:	42000204 	addi	r8,r8,8
    8a2c:	1809883a 	mov	r4,r3
    8a30:	9cfffc04 	addi	r19,r19,-16
    8a34:	acffc40e 	bge	r21,r19,8948 <___vfiprintf_internal_r+0xce8>
    8a38:	10800404 	addi	r2,r2,16
    8a3c:	20c00044 	addi	r3,r4,1
    8a40:	45800015 	stw	r22,0(r8)
    8a44:	45400115 	stw	r21,4(r8)
    8a48:	d8801c15 	stw	r2,112(sp)
    8a4c:	d8c01b15 	stw	r3,108(sp)
    8a50:	a0fff40e 	bge	r20,r3,8a24 <___vfiprintf_internal_r+0xdc4>
    8a54:	1000041e 	bne	r2,zero,8a68 <___vfiprintf_internal_r+0xe08>
    8a58:	01400044 	movi	r5,1
    8a5c:	0009883a 	mov	r4,zero
    8a60:	d811883a 	mov	r8,sp
    8a64:	003ff206 	br	8a30 <___vfiprintf_internal_r+0xdd0>
    8a68:	d9402117 	ldw	r5,132(sp)
    8a6c:	d9801a04 	addi	r6,sp,104
    8a70:	e009883a 	mov	r4,fp
    8a74:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8a78:	103fcd1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8a7c:	d9001b17 	ldw	r4,108(sp)
    8a80:	d8801c17 	ldw	r2,112(sp)
    8a84:	d811883a 	mov	r8,sp
    8a88:	21400044 	addi	r5,r4,1
    8a8c:	003fe806 	br	8a30 <___vfiprintf_internal_r+0xdd0>
    8a90:	d9402117 	ldw	r5,132(sp)
    8a94:	d9002017 	ldw	r4,128(sp)
    8a98:	d9801a04 	addi	r6,sp,104
    8a9c:	d9c02b15 	stw	r7,172(sp)
    8aa0:	db402a15 	stw	r13,168(sp)
    8aa4:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8aa8:	d9c02b17 	ldw	r7,172(sp)
    8aac:	db402a17 	ldw	r13,168(sp)
    8ab0:	103fbf1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8ab4:	d9401b17 	ldw	r5,108(sp)
    8ab8:	d8801c17 	ldw	r2,112(sp)
    8abc:	d811883a 	mov	r8,sp
    8ac0:	29800044 	addi	r6,r5,1
    8ac4:	003dc406 	br	81d8 <___vfiprintf_internal_r+0x578>
    8ac8:	1000d21e 	bne	r2,zero,8e14 <___vfiprintf_internal_r+0x11b4>
    8acc:	d8c01d87 	ldb	r3,118(sp)
    8ad0:	18009526 	beq	r3,zero,8d28 <___vfiprintf_internal_r+0x10c8>
    8ad4:	00800044 	movi	r2,1
    8ad8:	d8c01d84 	addi	r3,sp,118
    8adc:	1009883a 	mov	r4,r2
    8ae0:	d8c00015 	stw	r3,0(sp)
    8ae4:	d8800115 	stw	r2,4(sp)
    8ae8:	d811883a 	mov	r8,sp
    8aec:	200b883a 	mov	r5,r4
    8af0:	42000204 	addi	r8,r8,8
    8af4:	21000044 	addi	r4,r4,1
    8af8:	003d9706 	br	8158 <___vfiprintf_internal_r+0x4f8>
    8afc:	d9001d04 	addi	r4,sp,116
    8b00:	00800084 	movi	r2,2
    8b04:	d9000015 	stw	r4,0(sp)
    8b08:	d8800115 	stw	r2,4(sp)
    8b0c:	1809883a 	mov	r4,r3
    8b10:	d811883a 	mov	r8,sp
    8b14:	200b883a 	mov	r5,r4
    8b18:	42000204 	addi	r8,r8,8
    8b1c:	21000044 	addi	r4,r4,1
    8b20:	003f4e06 	br	885c <___vfiprintf_internal_r+0xbfc>
    8b24:	d8001d85 	stb	zero,118(sp)
    8b28:	48005016 	blt	r9,zero,8c6c <___vfiprintf_internal_r+0x100c>
    8b2c:	00ffdfc4 	movi	r3,-129
    8b30:	94c4b03a 	or	r2,r18,r19
    8b34:	a0e8703a 	and	r20,r20,r3
    8b38:	103d4426 	beq	r2,zero,804c <___vfiprintf_internal_r+0x3ec>
    8b3c:	0039883a 	mov	fp,zero
    8b40:	d9002617 	ldw	r4,152(sp)
    8b44:	dd401a04 	addi	r21,sp,104
    8b48:	908003cc 	andi	r2,r18,15
    8b4c:	9806973a 	slli	r3,r19,28
    8b50:	2085883a 	add	r2,r4,r2
    8b54:	9024d13a 	srli	r18,r18,4
    8b58:	10800003 	ldbu	r2,0(r2)
    8b5c:	9826d13a 	srli	r19,r19,4
    8b60:	ad7fffc4 	addi	r21,r21,-1
    8b64:	1ca4b03a 	or	r18,r3,r18
    8b68:	a8800005 	stb	r2,0(r21)
    8b6c:	94c4b03a 	or	r2,r18,r19
    8b70:	103ff51e 	bne	r2,zero,8b48 <___vfiprintf_internal_r+0xee8>
    8b74:	003e5906 	br	84dc <___vfiprintf_internal_r+0x87c>
    8b78:	d9402117 	ldw	r5,132(sp)
    8b7c:	d9002017 	ldw	r4,128(sp)
    8b80:	d9801a04 	addi	r6,sp,104
    8b84:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8b88:	103f891e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8b8c:	d8801c17 	ldw	r2,112(sp)
    8b90:	d811883a 	mov	r8,sp
    8b94:	003f9506 	br	89ec <___vfiprintf_internal_r+0xd8c>
    8b98:	d9402117 	ldw	r5,132(sp)
    8b9c:	d9002017 	ldw	r4,128(sp)
    8ba0:	d9801a04 	addi	r6,sp,104
    8ba4:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8ba8:	103f811e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8bac:	d811883a 	mov	r8,sp
    8bb0:	003ced06 	br	7f68 <___vfiprintf_internal_r+0x308>
    8bb4:	d9402117 	ldw	r5,132(sp)
    8bb8:	d9002017 	ldw	r4,128(sp)
    8bbc:	d9801a04 	addi	r6,sp,104
    8bc0:	da402c15 	stw	r9,176(sp)
    8bc4:	db802a15 	stw	r14,168(sp)
    8bc8:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8bcc:	da402c17 	ldw	r9,176(sp)
    8bd0:	db802a17 	ldw	r14,168(sp)
    8bd4:	103f761e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8bd8:	d9401b17 	ldw	r5,108(sp)
    8bdc:	d8801c17 	ldw	r2,112(sp)
    8be0:	d811883a 	mov	r8,sp
    8be4:	29000044 	addi	r4,r5,1
    8be8:	003d5b06 	br	8158 <___vfiprintf_internal_r+0x4f8>
    8bec:	d9402117 	ldw	r5,132(sp)
    8bf0:	d9002017 	ldw	r4,128(sp)
    8bf4:	d9801a04 	addi	r6,sp,104
    8bf8:	da402c15 	stw	r9,176(sp)
    8bfc:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8c00:	da402c17 	ldw	r9,176(sp)
    8c04:	103f6a1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8c08:	d9401b17 	ldw	r5,108(sp)
    8c0c:	d8801c17 	ldw	r2,112(sp)
    8c10:	d811883a 	mov	r8,sp
    8c14:	29000044 	addi	r4,r5,1
    8c18:	003f1006 	br	885c <___vfiprintf_internal_r+0xbfc>
    8c1c:	1000c31e 	bne	r2,zero,8f2c <___vfiprintf_internal_r+0x12cc>
    8c20:	01000044 	movi	r4,1
    8c24:	000b883a 	mov	r5,zero
    8c28:	d811883a 	mov	r8,sp
    8c2c:	003f0d06 	br	8864 <___vfiprintf_internal_r+0xc04>
    8c30:	d9402117 	ldw	r5,132(sp)
    8c34:	d9002017 	ldw	r4,128(sp)
    8c38:	d9801a04 	addi	r6,sp,104
    8c3c:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8c40:	103f5b1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8c44:	d9001b17 	ldw	r4,108(sp)
    8c48:	d8801c17 	ldw	r2,112(sp)
    8c4c:	d811883a 	mov	r8,sp
    8c50:	21000044 	addi	r4,r4,1
    8c54:	003d8006 	br	8258 <___vfiprintf_internal_r+0x5f8>
    8c58:	01000074 	movhi	r4,1
    8c5c:	213d6904 	addi	r4,r4,-2652
    8c60:	d9002615 	stw	r4,152(sp)
    8c64:	d8c02215 	stw	r3,136(sp)
    8c68:	1029883a 	mov	r20,r2
    8c6c:	94c4b03a 	or	r2,r18,r19
    8c70:	103fb21e 	bne	r2,zero,8b3c <___vfiprintf_internal_r+0xedc>
    8c74:	0039883a 	mov	fp,zero
    8c78:	00800084 	movi	r2,2
    8c7c:	003e6b06 	br	862c <___vfiprintf_internal_r+0x9cc>
    8c80:	da802217 	ldw	r10,136(sp)
    8c84:	d8001d85 	stb	zero,118(sp)
    8c88:	0027883a 	mov	r19,zero
    8c8c:	50800104 	addi	r2,r10,4
    8c90:	54800017 	ldw	r18,0(r10)
    8c94:	483e6016 	blt	r9,zero,8618 <___vfiprintf_internal_r+0x9b8>
    8c98:	00ffdfc4 	movi	r3,-129
    8c9c:	d8802215 	stw	r2,136(sp)
    8ca0:	a0e8703a 	and	r20,r20,r3
    8ca4:	0039883a 	mov	fp,zero
    8ca8:	903ebb26 	beq	r18,zero,8798 <___vfiprintf_internal_r+0xb38>
    8cac:	00800244 	movi	r2,9
    8cb0:	14bdee36 	bltu	r2,r18,846c <___vfiprintf_internal_r+0x80c>
    8cb4:	003eba06 	br	87a0 <___vfiprintf_internal_r+0xb40>
    8cb8:	00800c04 	movi	r2,48
    8cbc:	d8c01d45 	stb	r3,117(sp)
    8cc0:	d8801d05 	stb	r2,116(sp)
    8cc4:	d8001d85 	stb	zero,118(sp)
    8cc8:	a0c00094 	ori	r3,r20,2
    8ccc:	4800a916 	blt	r9,zero,8f74 <___vfiprintf_internal_r+0x1314>
    8cd0:	00bfdfc4 	movi	r2,-129
    8cd4:	a096703a 	and	r11,r20,r2
    8cd8:	5d000094 	ori	r20,r11,2
    8cdc:	0039883a 	mov	fp,zero
    8ce0:	003f9706 	br	8b40 <___vfiprintf_internal_r+0xee0>
    8ce4:	8025883a 	mov	r18,r16
    8ce8:	003c2e06 	br	7da4 <___vfiprintf_internal_r+0x144>
    8cec:	00800074 	movhi	r2,1
    8cf0:	10bd6904 	addi	r2,r2,-2652
    8cf4:	0039883a 	mov	fp,zero
    8cf8:	d8802615 	stw	r2,152(sp)
    8cfc:	003f9006 	br	8b40 <___vfiprintf_internal_r+0xee0>
    8d00:	04a5c83a 	sub	r18,zero,r18
    8d04:	07000b44 	movi	fp,45
    8d08:	9004c03a 	cmpne	r2,r18,zero
    8d0c:	04e7c83a 	sub	r19,zero,r19
    8d10:	df001d85 	stb	fp,118(sp)
    8d14:	98a7c83a 	sub	r19,r19,r2
    8d18:	48009f16 	blt	r9,zero,8f98 <___vfiprintf_internal_r+0x1338>
    8d1c:	00bfdfc4 	movi	r2,-129
    8d20:	a0a8703a 	and	r20,r20,r2
    8d24:	003dd006 	br	8468 <___vfiprintf_internal_r+0x808>
    8d28:	70004c26 	beq	r14,zero,8e5c <___vfiprintf_internal_r+0x11fc>
    8d2c:	00800084 	movi	r2,2
    8d30:	d8c01d04 	addi	r3,sp,116
    8d34:	d8c00015 	stw	r3,0(sp)
    8d38:	d8800115 	stw	r2,4(sp)
    8d3c:	01000044 	movi	r4,1
    8d40:	d811883a 	mov	r8,sp
    8d44:	003f7306 	br	8b14 <___vfiprintf_internal_r+0xeb4>
    8d48:	a080100c 	andi	r2,r20,64
    8d4c:	da802217 	ldw	r10,136(sp)
    8d50:	103e0626 	beq	r2,zero,856c <___vfiprintf_internal_r+0x90c>
    8d54:	5480000f 	ldh	r18,0(r10)
    8d58:	52800104 	addi	r10,r10,4
    8d5c:	da802215 	stw	r10,136(sp)
    8d60:	9027d7fa 	srai	r19,r18,31
    8d64:	9805883a 	mov	r2,r19
    8d68:	003db806 	br	844c <___vfiprintf_internal_r+0x7ec>
    8d6c:	a080040c 	andi	r2,r20,16
    8d70:	1000091e 	bne	r2,zero,8d98 <___vfiprintf_internal_r+0x1138>
    8d74:	a2c0100c 	andi	r11,r20,64
    8d78:	58000726 	beq	r11,zero,8d98 <___vfiprintf_internal_r+0x1138>
    8d7c:	da802217 	ldw	r10,136(sp)
    8d80:	50800017 	ldw	r2,0(r10)
    8d84:	52800104 	addi	r10,r10,4
    8d88:	da802215 	stw	r10,136(sp)
    8d8c:	da802317 	ldw	r10,140(sp)
    8d90:	1280000d 	sth	r10,0(r2)
    8d94:	003be706 	br	7d34 <___vfiprintf_internal_r+0xd4>
    8d98:	da802217 	ldw	r10,136(sp)
    8d9c:	50800017 	ldw	r2,0(r10)
    8da0:	52800104 	addi	r10,r10,4
    8da4:	da802215 	stw	r10,136(sp)
    8da8:	da802317 	ldw	r10,140(sp)
    8dac:	12800015 	stw	r10,0(r2)
    8db0:	003be006 	br	7d34 <___vfiprintf_internal_r+0xd4>
    8db4:	a080100c 	andi	r2,r20,64
    8db8:	da802217 	ldw	r10,136(sp)
    8dbc:	10003026 	beq	r2,zero,8e80 <___vfiprintf_internal_r+0x1220>
    8dc0:	5480000b 	ldhu	r18,0(r10)
    8dc4:	52800104 	addi	r10,r10,4
    8dc8:	0027883a 	mov	r19,zero
    8dcc:	da802215 	stw	r10,136(sp)
    8dd0:	003d8006 	br	83d4 <___vfiprintf_internal_r+0x774>
    8dd4:	80c00007 	ldb	r3,0(r16)
    8dd8:	003c0006 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8ddc:	a080100c 	andi	r2,r20,64
    8de0:	d8001d85 	stb	zero,118(sp)
    8de4:	da802217 	ldw	r10,136(sp)
    8de8:	1000201e 	bne	r2,zero,8e6c <___vfiprintf_internal_r+0x120c>
    8dec:	50800104 	addi	r2,r10,4
    8df0:	54800017 	ldw	r18,0(r10)
    8df4:	0027883a 	mov	r19,zero
    8df8:	483def0e 	bge	r9,zero,85b8 <___vfiprintf_internal_r+0x958>
    8dfc:	94c6b03a 	or	r3,r18,r19
    8e00:	d8802215 	stw	r2,136(sp)
    8e04:	183d4e1e 	bne	r3,zero,8340 <___vfiprintf_internal_r+0x6e0>
    8e08:	0039883a 	mov	fp,zero
    8e0c:	0005883a 	mov	r2,zero
    8e10:	003e0606 	br	862c <___vfiprintf_internal_r+0x9cc>
    8e14:	d9402117 	ldw	r5,132(sp)
    8e18:	d9002017 	ldw	r4,128(sp)
    8e1c:	d9801a04 	addi	r6,sp,104
    8e20:	da402c15 	stw	r9,176(sp)
    8e24:	db802a15 	stw	r14,168(sp)
    8e28:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8e2c:	da402c17 	ldw	r9,176(sp)
    8e30:	db802a17 	ldw	r14,168(sp)
    8e34:	103ede1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8e38:	d9401b17 	ldw	r5,108(sp)
    8e3c:	d8801c17 	ldw	r2,112(sp)
    8e40:	d811883a 	mov	r8,sp
    8e44:	29000044 	addi	r4,r5,1
    8e48:	003e7406 	br	881c <___vfiprintf_internal_r+0xbbc>
    8e4c:	00bfffc4 	movi	r2,-1
    8e50:	003c5806 	br	7fb4 <___vfiprintf_internal_r+0x354>
    8e54:	d811883a 	mov	r8,sp
    8e58:	003ee806 	br	89fc <___vfiprintf_internal_r+0xd9c>
    8e5c:	000b883a 	mov	r5,zero
    8e60:	01000044 	movi	r4,1
    8e64:	d811883a 	mov	r8,sp
    8e68:	003e7c06 	br	885c <___vfiprintf_internal_r+0xbfc>
    8e6c:	50800104 	addi	r2,r10,4
    8e70:	5480000b 	ldhu	r18,0(r10)
    8e74:	0027883a 	mov	r19,zero
    8e78:	483dcf0e 	bge	r9,zero,85b8 <___vfiprintf_internal_r+0x958>
    8e7c:	003fdf06 	br	8dfc <___vfiprintf_internal_r+0x119c>
    8e80:	54800017 	ldw	r18,0(r10)
    8e84:	52800104 	addi	r10,r10,4
    8e88:	0027883a 	mov	r19,zero
    8e8c:	da802215 	stw	r10,136(sp)
    8e90:	003d5006 	br	83d4 <___vfiprintf_internal_r+0x774>
    8e94:	50800104 	addi	r2,r10,4
    8e98:	5480000b 	ldhu	r18,0(r10)
    8e9c:	0027883a 	mov	r19,zero
    8ea0:	483f7d0e 	bge	r9,zero,8c98 <___vfiprintf_internal_r+0x1038>
    8ea4:	003ddc06 	br	8618 <___vfiprintf_internal_r+0x9b8>
    8ea8:	d8c02215 	stw	r3,136(sp)
    8eac:	0039883a 	mov	fp,zero
    8eb0:	003ddb06 	br	8620 <___vfiprintf_internal_r+0x9c0>
    8eb4:	02800074 	movhi	r10,1
    8eb8:	52bdca04 	addi	r10,r10,-2264
    8ebc:	da802415 	stw	r10,144(sp)
    8ec0:	003e8306 	br	88d0 <___vfiprintf_internal_r+0xc70>
    8ec4:	d8801c17 	ldw	r2,112(sp)
    8ec8:	dd002117 	ldw	r20,132(sp)
    8ecc:	103eb926 	beq	r2,zero,89b4 <___vfiprintf_internal_r+0xd54>
    8ed0:	d9002017 	ldw	r4,128(sp)
    8ed4:	d9801a04 	addi	r6,sp,104
    8ed8:	a00b883a 	mov	r5,r20
    8edc:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8ee0:	003eb406 	br	89b4 <___vfiprintf_internal_r+0xd54>
    8ee4:	80c00043 	ldbu	r3,1(r16)
    8ee8:	a5000814 	ori	r20,r20,32
    8eec:	84000044 	addi	r16,r16,1
    8ef0:	18c03fcc 	andi	r3,r3,255
    8ef4:	18c0201c 	xori	r3,r3,128
    8ef8:	18ffe004 	addi	r3,r3,-128
    8efc:	003bb706 	br	7ddc <___vfiprintf_internal_r+0x17c>
    8f00:	a809883a 	mov	r4,r21
    8f04:	d8c02a15 	stw	r3,168(sp)
    8f08:	da002b15 	stw	r8,172(sp)
    8f0c:	00006fc0 	call	6fc <strlen>
    8f10:	d8c02a17 	ldw	r3,168(sp)
    8f14:	1027883a 	mov	r19,r2
    8f18:	df001d83 	ldbu	fp,118(sp)
    8f1c:	d8c02215 	stw	r3,136(sp)
    8f20:	0013883a 	mov	r9,zero
    8f24:	da002b17 	ldw	r8,172(sp)
    8f28:	003c4d06 	br	8060 <___vfiprintf_internal_r+0x400>
    8f2c:	d9402117 	ldw	r5,132(sp)
    8f30:	d9002017 	ldw	r4,128(sp)
    8f34:	d9801a04 	addi	r6,sp,104
    8f38:	da402c15 	stw	r9,176(sp)
    8f3c:	0007b4c0 	call	7b4c <__sprint_r.part.0>
    8f40:	da402c17 	ldw	r9,176(sp)
    8f44:	103e9a1e 	bne	r2,zero,89b0 <___vfiprintf_internal_r+0xd50>
    8f48:	d9401b17 	ldw	r5,108(sp)
    8f4c:	d8801c17 	ldw	r2,112(sp)
    8f50:	d811883a 	mov	r8,sp
    8f54:	29000044 	addi	r4,r5,1
    8f58:	003e4206 	br	8864 <___vfiprintf_internal_r+0xc04>
    8f5c:	d9401b17 	ldw	r5,108(sp)
    8f60:	01000074 	movhi	r4,1
    8f64:	213dce04 	addi	r4,r4,-2248
    8f68:	d9002415 	stw	r4,144(sp)
    8f6c:	29400044 	addi	r5,r5,1
    8f70:	003c6d06 	br	8128 <___vfiprintf_internal_r+0x4c8>
    8f74:	0039883a 	mov	fp,zero
    8f78:	00800084 	movi	r2,2
    8f7c:	10803fcc 	andi	r2,r2,255
    8f80:	01000044 	movi	r4,1
    8f84:	11001e26 	beq	r2,r4,9000 <___vfiprintf_internal_r+0x13a0>
    8f88:	01000084 	movi	r4,2
    8f8c:	11001e1e 	bne	r2,r4,9008 <___vfiprintf_internal_r+0x13a8>
    8f90:	1829883a 	mov	r20,r3
    8f94:	003eea06 	br	8b40 <___vfiprintf_internal_r+0xee0>
    8f98:	a007883a 	mov	r3,r20
    8f9c:	00800044 	movi	r2,1
    8fa0:	003ff606 	br	8f7c <___vfiprintf_internal_r+0x131c>
    8fa4:	00800184 	movi	r2,6
    8fa8:	1240012e 	bgeu	r2,r9,8fb0 <___vfiprintf_internal_r+0x1350>
    8fac:	1013883a 	mov	r9,r2
    8fb0:	4827883a 	mov	r19,r9
    8fb4:	4825883a 	mov	r18,r9
    8fb8:	48001516 	blt	r9,zero,9010 <___vfiprintf_internal_r+0x13b0>
    8fbc:	05400074 	movhi	r21,1
    8fc0:	d8c02215 	stw	r3,136(sp)
    8fc4:	ad7d6e04 	addi	r21,r21,-2632
    8fc8:	003d1406 	br	841c <___vfiprintf_internal_r+0x7bc>
    8fcc:	02800074 	movhi	r10,1
    8fd0:	52bdca04 	addi	r10,r10,-2264
    8fd4:	da802415 	stw	r10,144(sp)
    8fd8:	200d883a 	mov	r6,r4
    8fdc:	003c9106 	br	8224 <___vfiprintf_internal_r+0x5c4>
    8fe0:	5021883a 	mov	r16,r10
    8fe4:	0013883a 	mov	r9,zero
    8fe8:	003b7d06 	br	7de0 <___vfiprintf_internal_r+0x180>
    8fec:	4827883a 	mov	r19,r9
    8ff0:	df001d83 	ldbu	fp,118(sp)
    8ff4:	d8c02215 	stw	r3,136(sp)
    8ff8:	0013883a 	mov	r9,zero
    8ffc:	003c1806 	br	8060 <___vfiprintf_internal_r+0x400>
    9000:	1829883a 	mov	r20,r3
    9004:	003d1806 	br	8468 <___vfiprintf_internal_r+0x808>
    9008:	1829883a 	mov	r20,r3
    900c:	003ccd06 	br	8344 <___vfiprintf_internal_r+0x6e4>
    9010:	0025883a 	mov	r18,zero
    9014:	003fe906 	br	8fbc <___vfiprintf_internal_r+0x135c>
    9018:	d8802217 	ldw	r2,136(sp)
    901c:	80c00043 	ldbu	r3,1(r16)
    9020:	5021883a 	mov	r16,r10
    9024:	12400017 	ldw	r9,0(r2)
    9028:	10800104 	addi	r2,r2,4
    902c:	d8802215 	stw	r2,136(sp)
    9030:	483faf0e 	bge	r9,zero,8ef0 <___vfiprintf_internal_r+0x1290>
    9034:	18c03fcc 	andi	r3,r3,255
    9038:	18c0201c 	xori	r3,r3,128
    903c:	027fffc4 	movi	r9,-1
    9040:	18ffe004 	addi	r3,r3,-128
    9044:	003b6506 	br	7ddc <___vfiprintf_internal_r+0x17c>
    9048:	d9c01d85 	stb	r7,118(sp)
    904c:	003ca006 	br	82d0 <___vfiprintf_internal_r+0x670>
    9050:	d9c01d85 	stb	r7,118(sp)
    9054:	003cad06 	br	830c <___vfiprintf_internal_r+0x6ac>
    9058:	d9c01d85 	stb	r7,118(sp)
    905c:	003d7d06 	br	8654 <___vfiprintf_internal_r+0x9f4>
    9060:	d9c01d85 	stb	r7,118(sp)
    9064:	003d5f06 	br	85e4 <___vfiprintf_internal_r+0x984>
    9068:	a080004c 	andi	r2,r20,1
    906c:	0039883a 	mov	fp,zero
    9070:	10000526 	beq	r2,zero,9088 <___vfiprintf_internal_r+0x1428>
    9074:	00800c04 	movi	r2,48
    9078:	d88019c5 	stb	r2,103(sp)
    907c:	dcc02717 	ldw	r19,156(sp)
    9080:	dd4019c4 	addi	r21,sp,103
    9084:	003bf606 	br	8060 <___vfiprintf_internal_r+0x400>
    9088:	0027883a 	mov	r19,zero
    908c:	dd401a04 	addi	r21,sp,104
    9090:	003bf306 	br	8060 <___vfiprintf_internal_r+0x400>
    9094:	d9c01d85 	stb	r7,118(sp)
    9098:	003dc806 	br	87bc <___vfiprintf_internal_r+0xb5c>
    909c:	d9c01d85 	stb	r7,118(sp)
    90a0:	003d3a06 	br	858c <___vfiprintf_internal_r+0x92c>
    90a4:	d9c01d85 	stb	r7,118(sp)
    90a8:	003d2a06 	br	8554 <___vfiprintf_internal_r+0x8f4>
    90ac:	d9c01d85 	stb	r7,118(sp)
    90b0:	003cde06 	br	842c <___vfiprintf_internal_r+0x7cc>
    90b4:	d9c01d85 	stb	r7,118(sp)
    90b8:	003cbc06 	br	83ac <___vfiprintf_internal_r+0x74c>

000090bc <__vfiprintf_internal>:
    90bc:	00800074 	movhi	r2,1
    90c0:	1084c904 	addi	r2,r2,4900
    90c4:	300f883a 	mov	r7,r6
    90c8:	280d883a 	mov	r6,r5
    90cc:	200b883a 	mov	r5,r4
    90d0:	11000017 	ldw	r4,0(r2)
    90d4:	0007c601 	jmpi	7c60 <___vfiprintf_internal_r>

000090d8 <__sbprintf>:
    90d8:	2880030b 	ldhu	r2,12(r5)
    90dc:	2ac01917 	ldw	r11,100(r5)
    90e0:	2a80038b 	ldhu	r10,14(r5)
    90e4:	2a400717 	ldw	r9,28(r5)
    90e8:	2a000917 	ldw	r8,36(r5)
    90ec:	defee204 	addi	sp,sp,-1144
    90f0:	00c10004 	movi	r3,1024
    90f4:	dc011a15 	stw	r16,1128(sp)
    90f8:	10bfff4c 	andi	r2,r2,65533
    90fc:	2821883a 	mov	r16,r5
    9100:	d8cb883a 	add	r5,sp,r3
    9104:	dc811c15 	stw	r18,1136(sp)
    9108:	dc411b15 	stw	r17,1132(sp)
    910c:	dfc11d15 	stw	ra,1140(sp)
    9110:	2025883a 	mov	r18,r4
    9114:	d881030d 	sth	r2,1036(sp)
    9118:	dac11915 	stw	r11,1124(sp)
    911c:	da81038d 	sth	r10,1038(sp)
    9120:	da410715 	stw	r9,1052(sp)
    9124:	da010915 	stw	r8,1060(sp)
    9128:	dec10015 	stw	sp,1024(sp)
    912c:	dec10415 	stw	sp,1040(sp)
    9130:	d8c10215 	stw	r3,1032(sp)
    9134:	d8c10515 	stw	r3,1044(sp)
    9138:	d8010615 	stw	zero,1048(sp)
    913c:	0007c600 	call	7c60 <___vfiprintf_internal_r>
    9140:	1023883a 	mov	r17,r2
    9144:	10000416 	blt	r2,zero,9158 <__sbprintf+0x80>
    9148:	d9410004 	addi	r5,sp,1024
    914c:	9009883a 	mov	r4,r18
    9150:	000465c0 	call	465c <_fflush_r>
    9154:	10000d1e 	bne	r2,zero,918c <__sbprintf+0xb4>
    9158:	d881030b 	ldhu	r2,1036(sp)
    915c:	1080100c 	andi	r2,r2,64
    9160:	10000326 	beq	r2,zero,9170 <__sbprintf+0x98>
    9164:	8080030b 	ldhu	r2,12(r16)
    9168:	10801014 	ori	r2,r2,64
    916c:	8080030d 	sth	r2,12(r16)
    9170:	8805883a 	mov	r2,r17
    9174:	dfc11d17 	ldw	ra,1140(sp)
    9178:	dc811c17 	ldw	r18,1136(sp)
    917c:	dc411b17 	ldw	r17,1132(sp)
    9180:	dc011a17 	ldw	r16,1128(sp)
    9184:	dec11e04 	addi	sp,sp,1144
    9188:	f800283a 	ret
    918c:	047fffc4 	movi	r17,-1
    9190:	003ff106 	br	9158 <__sbprintf+0x80>

00009194 <_write_r>:
    9194:	defffd04 	addi	sp,sp,-12
    9198:	2805883a 	mov	r2,r5
    919c:	dc000015 	stw	r16,0(sp)
    91a0:	04000074 	movhi	r16,1
    91a4:	dc400115 	stw	r17,4(sp)
    91a8:	300b883a 	mov	r5,r6
    91ac:	840b9904 	addi	r16,r16,11876
    91b0:	2023883a 	mov	r17,r4
    91b4:	380d883a 	mov	r6,r7
    91b8:	1009883a 	mov	r4,r2
    91bc:	dfc00215 	stw	ra,8(sp)
    91c0:	80000015 	stw	zero,0(r16)
    91c4:	000d6280 	call	d628 <write>
    91c8:	00ffffc4 	movi	r3,-1
    91cc:	10c00526 	beq	r2,r3,91e4 <_write_r+0x50>
    91d0:	dfc00217 	ldw	ra,8(sp)
    91d4:	dc400117 	ldw	r17,4(sp)
    91d8:	dc000017 	ldw	r16,0(sp)
    91dc:	dec00304 	addi	sp,sp,12
    91e0:	f800283a 	ret
    91e4:	80c00017 	ldw	r3,0(r16)
    91e8:	183ff926 	beq	r3,zero,91d0 <_write_r+0x3c>
    91ec:	88c00015 	stw	r3,0(r17)
    91f0:	003ff706 	br	91d0 <_write_r+0x3c>

000091f4 <_close_r>:
    91f4:	defffd04 	addi	sp,sp,-12
    91f8:	dc000015 	stw	r16,0(sp)
    91fc:	04000074 	movhi	r16,1
    9200:	dc400115 	stw	r17,4(sp)
    9204:	840b9904 	addi	r16,r16,11876
    9208:	2023883a 	mov	r17,r4
    920c:	2809883a 	mov	r4,r5
    9210:	dfc00215 	stw	ra,8(sp)
    9214:	80000015 	stw	zero,0(r16)
    9218:	000cdd00 	call	cdd0 <close>
    921c:	00ffffc4 	movi	r3,-1
    9220:	10c00526 	beq	r2,r3,9238 <_close_r+0x44>
    9224:	dfc00217 	ldw	ra,8(sp)
    9228:	dc400117 	ldw	r17,4(sp)
    922c:	dc000017 	ldw	r16,0(sp)
    9230:	dec00304 	addi	sp,sp,12
    9234:	f800283a 	ret
    9238:	80c00017 	ldw	r3,0(r16)
    923c:	183ff926 	beq	r3,zero,9224 <_close_r+0x30>
    9240:	88c00015 	stw	r3,0(r17)
    9244:	003ff706 	br	9224 <_close_r+0x30>

00009248 <_calloc_r>:
    9248:	298b383a 	mul	r5,r5,r6
    924c:	defffe04 	addi	sp,sp,-8
    9250:	dfc00115 	stw	ra,4(sp)
    9254:	dc000015 	stw	r16,0(sp)
    9258:	00057980 	call	5798 <_malloc_r>
    925c:	10002926 	beq	r2,zero,9304 <_calloc_r+0xbc>
    9260:	11bfff17 	ldw	r6,-4(r2)
    9264:	1021883a 	mov	r16,r2
    9268:	00bfff04 	movi	r2,-4
    926c:	308c703a 	and	r6,r6,r2
    9270:	00c00904 	movi	r3,36
    9274:	308d883a 	add	r6,r6,r2
    9278:	19801636 	bltu	r3,r6,92d4 <_calloc_r+0x8c>
    927c:	008004c4 	movi	r2,19
    9280:	11800b2e 	bgeu	r2,r6,92b0 <_calloc_r+0x68>
    9284:	80000015 	stw	zero,0(r16)
    9288:	80000115 	stw	zero,4(r16)
    928c:	008006c4 	movi	r2,27
    9290:	11801a2e 	bgeu	r2,r6,92fc <_calloc_r+0xb4>
    9294:	80000215 	stw	zero,8(r16)
    9298:	80000315 	stw	zero,12(r16)
    929c:	30c0151e 	bne	r6,r3,92f4 <_calloc_r+0xac>
    92a0:	80000415 	stw	zero,16(r16)
    92a4:	80800604 	addi	r2,r16,24
    92a8:	80000515 	stw	zero,20(r16)
    92ac:	00000106 	br	92b4 <_calloc_r+0x6c>
    92b0:	8005883a 	mov	r2,r16
    92b4:	10000015 	stw	zero,0(r2)
    92b8:	10000115 	stw	zero,4(r2)
    92bc:	10000215 	stw	zero,8(r2)
    92c0:	8005883a 	mov	r2,r16
    92c4:	dfc00117 	ldw	ra,4(sp)
    92c8:	dc000017 	ldw	r16,0(sp)
    92cc:	dec00204 	addi	sp,sp,8
    92d0:	f800283a 	ret
    92d4:	000b883a 	mov	r5,zero
    92d8:	8009883a 	mov	r4,r16
    92dc:	00061e40 	call	61e4 <memset>
    92e0:	8005883a 	mov	r2,r16
    92e4:	dfc00117 	ldw	ra,4(sp)
    92e8:	dc000017 	ldw	r16,0(sp)
    92ec:	dec00204 	addi	sp,sp,8
    92f0:	f800283a 	ret
    92f4:	80800404 	addi	r2,r16,16
    92f8:	003fee06 	br	92b4 <_calloc_r+0x6c>
    92fc:	80800204 	addi	r2,r16,8
    9300:	003fec06 	br	92b4 <_calloc_r+0x6c>
    9304:	0005883a 	mov	r2,zero
    9308:	003fee06 	br	92c4 <_calloc_r+0x7c>

0000930c <_fclose_r>:
    930c:	28003926 	beq	r5,zero,93f4 <_fclose_r+0xe8>
    9310:	defffc04 	addi	sp,sp,-16
    9314:	dc400115 	stw	r17,4(sp)
    9318:	dc000015 	stw	r16,0(sp)
    931c:	dfc00315 	stw	ra,12(sp)
    9320:	dc800215 	stw	r18,8(sp)
    9324:	2023883a 	mov	r17,r4
    9328:	2821883a 	mov	r16,r5
    932c:	20000226 	beq	r4,zero,9338 <_fclose_r+0x2c>
    9330:	20800e17 	ldw	r2,56(r4)
    9334:	10002726 	beq	r2,zero,93d4 <_fclose_r+0xc8>
    9338:	8080030f 	ldh	r2,12(r16)
    933c:	1000071e 	bne	r2,zero,935c <_fclose_r+0x50>
    9340:	0005883a 	mov	r2,zero
    9344:	dfc00317 	ldw	ra,12(sp)
    9348:	dc800217 	ldw	r18,8(sp)
    934c:	dc400117 	ldw	r17,4(sp)
    9350:	dc000017 	ldw	r16,0(sp)
    9354:	dec00404 	addi	sp,sp,16
    9358:	f800283a 	ret
    935c:	800b883a 	mov	r5,r16
    9360:	8809883a 	mov	r4,r17
    9364:	00044400 	call	4440 <__sflush_r>
    9368:	1025883a 	mov	r18,r2
    936c:	80800b17 	ldw	r2,44(r16)
    9370:	10000426 	beq	r2,zero,9384 <_fclose_r+0x78>
    9374:	81400717 	ldw	r5,28(r16)
    9378:	8809883a 	mov	r4,r17
    937c:	103ee83a 	callr	r2
    9380:	10001616 	blt	r2,zero,93dc <_fclose_r+0xd0>
    9384:	8080030b 	ldhu	r2,12(r16)
    9388:	1080200c 	andi	r2,r2,128
    938c:	1000151e 	bne	r2,zero,93e4 <_fclose_r+0xd8>
    9390:	81400c17 	ldw	r5,48(r16)
    9394:	28000526 	beq	r5,zero,93ac <_fclose_r+0xa0>
    9398:	80801004 	addi	r2,r16,64
    939c:	28800226 	beq	r5,r2,93a8 <_fclose_r+0x9c>
    93a0:	8809883a 	mov	r4,r17
    93a4:	0004bac0 	call	4bac <_free_r>
    93a8:	80000c15 	stw	zero,48(r16)
    93ac:	81401117 	ldw	r5,68(r16)
    93b0:	28000326 	beq	r5,zero,93c0 <_fclose_r+0xb4>
    93b4:	8809883a 	mov	r4,r17
    93b8:	0004bac0 	call	4bac <_free_r>
    93bc:	80001115 	stw	zero,68(r16)
    93c0:	0004a480 	call	4a48 <__sfp_lock_acquire>
    93c4:	8000030d 	sth	zero,12(r16)
    93c8:	0004a4c0 	call	4a4c <__sfp_lock_release>
    93cc:	9005883a 	mov	r2,r18
    93d0:	003fdc06 	br	9344 <_fclose_r+0x38>
    93d4:	0004a380 	call	4a38 <__sinit>
    93d8:	003fd706 	br	9338 <_fclose_r+0x2c>
    93dc:	04bfffc4 	movi	r18,-1
    93e0:	003fe806 	br	9384 <_fclose_r+0x78>
    93e4:	81400417 	ldw	r5,16(r16)
    93e8:	8809883a 	mov	r4,r17
    93ec:	0004bac0 	call	4bac <_free_r>
    93f0:	003fe706 	br	9390 <_fclose_r+0x84>
    93f4:	0005883a 	mov	r2,zero
    93f8:	f800283a 	ret

000093fc <fclose>:
    93fc:	00800074 	movhi	r2,1
    9400:	1084c904 	addi	r2,r2,4900
    9404:	200b883a 	mov	r5,r4
    9408:	11000017 	ldw	r4,0(r2)
    940c:	000930c1 	jmpi	930c <_fclose_r>

00009410 <__fputwc>:
    9410:	defff804 	addi	sp,sp,-32
    9414:	dcc00415 	stw	r19,16(sp)
    9418:	dc800315 	stw	r18,12(sp)
    941c:	dc000115 	stw	r16,4(sp)
    9420:	dfc00715 	stw	ra,28(sp)
    9424:	dd400615 	stw	r21,24(sp)
    9428:	dd000515 	stw	r20,20(sp)
    942c:	dc400215 	stw	r17,8(sp)
    9430:	2027883a 	mov	r19,r4
    9434:	2825883a 	mov	r18,r5
    9438:	3021883a 	mov	r16,r6
    943c:	00055880 	call	5588 <__locale_mb_cur_max>
    9440:	00c00044 	movi	r3,1
    9444:	10c03e26 	beq	r2,r3,9540 <__fputwc+0x130>
    9448:	81c01704 	addi	r7,r16,92
    944c:	900d883a 	mov	r6,r18
    9450:	d80b883a 	mov	r5,sp
    9454:	9809883a 	mov	r4,r19
    9458:	00098e00 	call	98e0 <_wcrtomb_r>
    945c:	1029883a 	mov	r20,r2
    9460:	00bfffc4 	movi	r2,-1
    9464:	a0802026 	beq	r20,r2,94e8 <__fputwc+0xd8>
    9468:	d9400003 	ldbu	r5,0(sp)
    946c:	a0001c26 	beq	r20,zero,94e0 <__fputwc+0xd0>
    9470:	0023883a 	mov	r17,zero
    9474:	05400284 	movi	r21,10
    9478:	00000906 	br	94a0 <__fputwc+0x90>
    947c:	80800017 	ldw	r2,0(r16)
    9480:	11400005 	stb	r5,0(r2)
    9484:	80c00017 	ldw	r3,0(r16)
    9488:	18c00044 	addi	r3,r3,1
    948c:	80c00015 	stw	r3,0(r16)
    9490:	8c400044 	addi	r17,r17,1
    9494:	dc45883a 	add	r2,sp,r17
    9498:	8d00112e 	bgeu	r17,r20,94e0 <__fputwc+0xd0>
    949c:	11400003 	ldbu	r5,0(r2)
    94a0:	80c00217 	ldw	r3,8(r16)
    94a4:	18ffffc4 	addi	r3,r3,-1
    94a8:	80c00215 	stw	r3,8(r16)
    94ac:	183ff30e 	bge	r3,zero,947c <__fputwc+0x6c>
    94b0:	80800617 	ldw	r2,24(r16)
    94b4:	18801916 	blt	r3,r2,951c <__fputwc+0x10c>
    94b8:	80800017 	ldw	r2,0(r16)
    94bc:	11400005 	stb	r5,0(r2)
    94c0:	80800017 	ldw	r2,0(r16)
    94c4:	10c00003 	ldbu	r3,0(r2)
    94c8:	10800044 	addi	r2,r2,1
    94cc:	1d402326 	beq	r3,r21,955c <__fputwc+0x14c>
    94d0:	80800015 	stw	r2,0(r16)
    94d4:	8c400044 	addi	r17,r17,1
    94d8:	dc45883a 	add	r2,sp,r17
    94dc:	8d3fef36 	bltu	r17,r20,949c <__fputwc+0x8c>
    94e0:	9005883a 	mov	r2,r18
    94e4:	00000406 	br	94f8 <__fputwc+0xe8>
    94e8:	80c0030b 	ldhu	r3,12(r16)
    94ec:	a005883a 	mov	r2,r20
    94f0:	18c01014 	ori	r3,r3,64
    94f4:	80c0030d 	sth	r3,12(r16)
    94f8:	dfc00717 	ldw	ra,28(sp)
    94fc:	dd400617 	ldw	r21,24(sp)
    9500:	dd000517 	ldw	r20,20(sp)
    9504:	dcc00417 	ldw	r19,16(sp)
    9508:	dc800317 	ldw	r18,12(sp)
    950c:	dc400217 	ldw	r17,8(sp)
    9510:	dc000117 	ldw	r16,4(sp)
    9514:	dec00804 	addi	sp,sp,32
    9518:	f800283a 	ret
    951c:	800d883a 	mov	r6,r16
    9520:	29403fcc 	andi	r5,r5,255
    9524:	9809883a 	mov	r4,r19
    9528:	00097880 	call	9788 <__swbuf_r>
    952c:	10bfffe0 	cmpeqi	r2,r2,-1
    9530:	10803fcc 	andi	r2,r2,255
    9534:	103fd626 	beq	r2,zero,9490 <__fputwc+0x80>
    9538:	00bfffc4 	movi	r2,-1
    953c:	003fee06 	br	94f8 <__fputwc+0xe8>
    9540:	90ffffc4 	addi	r3,r18,-1
    9544:	01003f84 	movi	r4,254
    9548:	20ffbf36 	bltu	r4,r3,9448 <__fputwc+0x38>
    954c:	900b883a 	mov	r5,r18
    9550:	dc800005 	stb	r18,0(sp)
    9554:	1029883a 	mov	r20,r2
    9558:	003fc506 	br	9470 <__fputwc+0x60>
    955c:	800d883a 	mov	r6,r16
    9560:	a80b883a 	mov	r5,r21
    9564:	9809883a 	mov	r4,r19
    9568:	00097880 	call	9788 <__swbuf_r>
    956c:	10bfffe0 	cmpeqi	r2,r2,-1
    9570:	003fef06 	br	9530 <__fputwc+0x120>

00009574 <_fputwc_r>:
    9574:	3080030b 	ldhu	r2,12(r6)
    9578:	10c8000c 	andi	r3,r2,8192
    957c:	1800051e 	bne	r3,zero,9594 <_fputwc_r+0x20>
    9580:	30c01917 	ldw	r3,100(r6)
    9584:	10880014 	ori	r2,r2,8192
    9588:	3080030d 	sth	r2,12(r6)
    958c:	18880014 	ori	r2,r3,8192
    9590:	30801915 	stw	r2,100(r6)
    9594:	00094101 	jmpi	9410 <__fputwc>

00009598 <fputwc>:
    9598:	00800074 	movhi	r2,1
    959c:	defffc04 	addi	sp,sp,-16
    95a0:	1084c904 	addi	r2,r2,4900
    95a4:	dc000115 	stw	r16,4(sp)
    95a8:	14000017 	ldw	r16,0(r2)
    95ac:	dc400215 	stw	r17,8(sp)
    95b0:	dfc00315 	stw	ra,12(sp)
    95b4:	2023883a 	mov	r17,r4
    95b8:	80000226 	beq	r16,zero,95c4 <fputwc+0x2c>
    95bc:	80800e17 	ldw	r2,56(r16)
    95c0:	10001026 	beq	r2,zero,9604 <fputwc+0x6c>
    95c4:	2880030b 	ldhu	r2,12(r5)
    95c8:	10c8000c 	andi	r3,r2,8192
    95cc:	1800051e 	bne	r3,zero,95e4 <fputwc+0x4c>
    95d0:	28c01917 	ldw	r3,100(r5)
    95d4:	10880014 	ori	r2,r2,8192
    95d8:	2880030d 	sth	r2,12(r5)
    95dc:	18880014 	ori	r2,r3,8192
    95e0:	28801915 	stw	r2,100(r5)
    95e4:	280d883a 	mov	r6,r5
    95e8:	8009883a 	mov	r4,r16
    95ec:	880b883a 	mov	r5,r17
    95f0:	dfc00317 	ldw	ra,12(sp)
    95f4:	dc400217 	ldw	r17,8(sp)
    95f8:	dc000117 	ldw	r16,4(sp)
    95fc:	dec00404 	addi	sp,sp,16
    9600:	00094101 	jmpi	9410 <__fputwc>
    9604:	8009883a 	mov	r4,r16
    9608:	d9400015 	stw	r5,0(sp)
    960c:	0004a380 	call	4a38 <__sinit>
    9610:	d9400017 	ldw	r5,0(sp)
    9614:	003feb06 	br	95c4 <fputwc+0x2c>

00009618 <_fstat_r>:
    9618:	defffd04 	addi	sp,sp,-12
    961c:	2805883a 	mov	r2,r5
    9620:	dc000015 	stw	r16,0(sp)
    9624:	04000074 	movhi	r16,1
    9628:	dc400115 	stw	r17,4(sp)
    962c:	840b9904 	addi	r16,r16,11876
    9630:	2023883a 	mov	r17,r4
    9634:	300b883a 	mov	r5,r6
    9638:	1009883a 	mov	r4,r2
    963c:	dfc00215 	stw	ra,8(sp)
    9640:	80000015 	stw	zero,0(r16)
    9644:	000cf500 	call	cf50 <fstat>
    9648:	00ffffc4 	movi	r3,-1
    964c:	10c00526 	beq	r2,r3,9664 <_fstat_r+0x4c>
    9650:	dfc00217 	ldw	ra,8(sp)
    9654:	dc400117 	ldw	r17,4(sp)
    9658:	dc000017 	ldw	r16,0(sp)
    965c:	dec00304 	addi	sp,sp,12
    9660:	f800283a 	ret
    9664:	80c00017 	ldw	r3,0(r16)
    9668:	183ff926 	beq	r3,zero,9650 <_fstat_r+0x38>
    966c:	88c00015 	stw	r3,0(r17)
    9670:	003ff706 	br	9650 <_fstat_r+0x38>

00009674 <_isatty_r>:
    9674:	defffd04 	addi	sp,sp,-12
    9678:	dc000015 	stw	r16,0(sp)
    967c:	04000074 	movhi	r16,1
    9680:	dc400115 	stw	r17,4(sp)
    9684:	840b9904 	addi	r16,r16,11876
    9688:	2023883a 	mov	r17,r4
    968c:	2809883a 	mov	r4,r5
    9690:	dfc00215 	stw	ra,8(sp)
    9694:	80000015 	stw	zero,0(r16)
    9698:	000d03c0 	call	d03c <isatty>
    969c:	00ffffc4 	movi	r3,-1
    96a0:	10c00526 	beq	r2,r3,96b8 <_isatty_r+0x44>
    96a4:	dfc00217 	ldw	ra,8(sp)
    96a8:	dc400117 	ldw	r17,4(sp)
    96ac:	dc000017 	ldw	r16,0(sp)
    96b0:	dec00304 	addi	sp,sp,12
    96b4:	f800283a 	ret
    96b8:	80c00017 	ldw	r3,0(r16)
    96bc:	183ff926 	beq	r3,zero,96a4 <_isatty_r+0x30>
    96c0:	88c00015 	stw	r3,0(r17)
    96c4:	003ff706 	br	96a4 <_isatty_r+0x30>

000096c8 <_lseek_r>:
    96c8:	defffd04 	addi	sp,sp,-12
    96cc:	2805883a 	mov	r2,r5
    96d0:	dc000015 	stw	r16,0(sp)
    96d4:	04000074 	movhi	r16,1
    96d8:	dc400115 	stw	r17,4(sp)
    96dc:	300b883a 	mov	r5,r6
    96e0:	840b9904 	addi	r16,r16,11876
    96e4:	2023883a 	mov	r17,r4
    96e8:	380d883a 	mov	r6,r7
    96ec:	1009883a 	mov	r4,r2
    96f0:	dfc00215 	stw	ra,8(sp)
    96f4:	80000015 	stw	zero,0(r16)
    96f8:	000d2080 	call	d208 <lseek>
    96fc:	00ffffc4 	movi	r3,-1
    9700:	10c00526 	beq	r2,r3,9718 <_lseek_r+0x50>
    9704:	dfc00217 	ldw	ra,8(sp)
    9708:	dc400117 	ldw	r17,4(sp)
    970c:	dc000017 	ldw	r16,0(sp)
    9710:	dec00304 	addi	sp,sp,12
    9714:	f800283a 	ret
    9718:	80c00017 	ldw	r3,0(r16)
    971c:	183ff926 	beq	r3,zero,9704 <_lseek_r+0x3c>
    9720:	88c00015 	stw	r3,0(r17)
    9724:	003ff706 	br	9704 <_lseek_r+0x3c>

00009728 <_read_r>:
    9728:	defffd04 	addi	sp,sp,-12
    972c:	2805883a 	mov	r2,r5
    9730:	dc000015 	stw	r16,0(sp)
    9734:	04000074 	movhi	r16,1
    9738:	dc400115 	stw	r17,4(sp)
    973c:	300b883a 	mov	r5,r6
    9740:	840b9904 	addi	r16,r16,11876
    9744:	2023883a 	mov	r17,r4
    9748:	380d883a 	mov	r6,r7
    974c:	1009883a 	mov	r4,r2
    9750:	dfc00215 	stw	ra,8(sp)
    9754:	80000015 	stw	zero,0(r16)
    9758:	000d3dc0 	call	d3dc <read>
    975c:	00ffffc4 	movi	r3,-1
    9760:	10c00526 	beq	r2,r3,9778 <_read_r+0x50>
    9764:	dfc00217 	ldw	ra,8(sp)
    9768:	dc400117 	ldw	r17,4(sp)
    976c:	dc000017 	ldw	r16,0(sp)
    9770:	dec00304 	addi	sp,sp,12
    9774:	f800283a 	ret
    9778:	80c00017 	ldw	r3,0(r16)
    977c:	183ff926 	beq	r3,zero,9764 <_read_r+0x3c>
    9780:	88c00015 	stw	r3,0(r17)
    9784:	003ff706 	br	9764 <_read_r+0x3c>

00009788 <__swbuf_r>:
    9788:	defffb04 	addi	sp,sp,-20
    978c:	dcc00315 	stw	r19,12(sp)
    9790:	dc800215 	stw	r18,8(sp)
    9794:	dc000015 	stw	r16,0(sp)
    9798:	dfc00415 	stw	ra,16(sp)
    979c:	dc400115 	stw	r17,4(sp)
    97a0:	2025883a 	mov	r18,r4
    97a4:	2827883a 	mov	r19,r5
    97a8:	3021883a 	mov	r16,r6
    97ac:	20000226 	beq	r4,zero,97b8 <__swbuf_r+0x30>
    97b0:	20800e17 	ldw	r2,56(r4)
    97b4:	10004226 	beq	r2,zero,98c0 <__swbuf_r+0x138>
    97b8:	80800617 	ldw	r2,24(r16)
    97bc:	8100030b 	ldhu	r4,12(r16)
    97c0:	80800215 	stw	r2,8(r16)
    97c4:	2080020c 	andi	r2,r4,8
    97c8:	10003626 	beq	r2,zero,98a4 <__swbuf_r+0x11c>
    97cc:	80c00417 	ldw	r3,16(r16)
    97d0:	18003426 	beq	r3,zero,98a4 <__swbuf_r+0x11c>
    97d4:	2088000c 	andi	r2,r4,8192
    97d8:	9c403fcc 	andi	r17,r19,255
    97dc:	10001a26 	beq	r2,zero,9848 <__swbuf_r+0xc0>
    97e0:	80800017 	ldw	r2,0(r16)
    97e4:	81000517 	ldw	r4,20(r16)
    97e8:	10c7c83a 	sub	r3,r2,r3
    97ec:	1900200e 	bge	r3,r4,9870 <__swbuf_r+0xe8>
    97f0:	18c00044 	addi	r3,r3,1
    97f4:	81000217 	ldw	r4,8(r16)
    97f8:	11400044 	addi	r5,r2,1
    97fc:	81400015 	stw	r5,0(r16)
    9800:	213fffc4 	addi	r4,r4,-1
    9804:	81000215 	stw	r4,8(r16)
    9808:	14c00005 	stb	r19,0(r2)
    980c:	80800517 	ldw	r2,20(r16)
    9810:	10c01e26 	beq	r2,r3,988c <__swbuf_r+0x104>
    9814:	8080030b 	ldhu	r2,12(r16)
    9818:	1080004c 	andi	r2,r2,1
    981c:	10000226 	beq	r2,zero,9828 <__swbuf_r+0xa0>
    9820:	00800284 	movi	r2,10
    9824:	88801926 	beq	r17,r2,988c <__swbuf_r+0x104>
    9828:	8805883a 	mov	r2,r17
    982c:	dfc00417 	ldw	ra,16(sp)
    9830:	dcc00317 	ldw	r19,12(sp)
    9834:	dc800217 	ldw	r18,8(sp)
    9838:	dc400117 	ldw	r17,4(sp)
    983c:	dc000017 	ldw	r16,0(sp)
    9840:	dec00504 	addi	sp,sp,20
    9844:	f800283a 	ret
    9848:	81401917 	ldw	r5,100(r16)
    984c:	00b7ffc4 	movi	r2,-8193
    9850:	21080014 	ori	r4,r4,8192
    9854:	2884703a 	and	r2,r5,r2
    9858:	80801915 	stw	r2,100(r16)
    985c:	80800017 	ldw	r2,0(r16)
    9860:	8100030d 	sth	r4,12(r16)
    9864:	81000517 	ldw	r4,20(r16)
    9868:	10c7c83a 	sub	r3,r2,r3
    986c:	193fe016 	blt	r3,r4,97f0 <__swbuf_r+0x68>
    9870:	800b883a 	mov	r5,r16
    9874:	9009883a 	mov	r4,r18
    9878:	000465c0 	call	465c <_fflush_r>
    987c:	1000071e 	bne	r2,zero,989c <__swbuf_r+0x114>
    9880:	80800017 	ldw	r2,0(r16)
    9884:	00c00044 	movi	r3,1
    9888:	003fda06 	br	97f4 <__swbuf_r+0x6c>
    988c:	800b883a 	mov	r5,r16
    9890:	9009883a 	mov	r4,r18
    9894:	000465c0 	call	465c <_fflush_r>
    9898:	103fe326 	beq	r2,zero,9828 <__swbuf_r+0xa0>
    989c:	00bfffc4 	movi	r2,-1
    98a0:	003fe206 	br	982c <__swbuf_r+0xa4>
    98a4:	800b883a 	mov	r5,r16
    98a8:	9009883a 	mov	r4,r18
    98ac:	0002a640 	call	2a64 <__swsetup_r>
    98b0:	103ffa1e 	bne	r2,zero,989c <__swbuf_r+0x114>
    98b4:	8100030b 	ldhu	r4,12(r16)
    98b8:	80c00417 	ldw	r3,16(r16)
    98bc:	003fc506 	br	97d4 <__swbuf_r+0x4c>
    98c0:	0004a380 	call	4a38 <__sinit>
    98c4:	003fbc06 	br	97b8 <__swbuf_r+0x30>

000098c8 <__swbuf>:
    98c8:	00800074 	movhi	r2,1
    98cc:	1084c904 	addi	r2,r2,4900
    98d0:	280d883a 	mov	r6,r5
    98d4:	200b883a 	mov	r5,r4
    98d8:	11000017 	ldw	r4,0(r2)
    98dc:	00097881 	jmpi	9788 <__swbuf_r>

000098e0 <_wcrtomb_r>:
    98e0:	defff604 	addi	sp,sp,-40
    98e4:	00800074 	movhi	r2,1
    98e8:	dc800815 	stw	r18,32(sp)
    98ec:	dc400715 	stw	r17,28(sp)
    98f0:	dc000615 	stw	r16,24(sp)
    98f4:	1084cd04 	addi	r2,r2,4916
    98f8:	dfc00915 	stw	ra,36(sp)
    98fc:	2021883a 	mov	r16,r4
    9900:	3823883a 	mov	r17,r7
    9904:	14800017 	ldw	r18,0(r2)
    9908:	28001426 	beq	r5,zero,995c <_wcrtomb_r+0x7c>
    990c:	d9400415 	stw	r5,16(sp)
    9910:	d9800515 	stw	r6,20(sp)
    9914:	000557c0 	call	557c <__locale_charset>
    9918:	d9800517 	ldw	r6,20(sp)
    991c:	d9400417 	ldw	r5,16(sp)
    9920:	100f883a 	mov	r7,r2
    9924:	dc400015 	stw	r17,0(sp)
    9928:	8009883a 	mov	r4,r16
    992c:	903ee83a 	callr	r18
    9930:	00ffffc4 	movi	r3,-1
    9934:	10c0031e 	bne	r2,r3,9944 <_wcrtomb_r+0x64>
    9938:	88000015 	stw	zero,0(r17)
    993c:	00c02284 	movi	r3,138
    9940:	80c00015 	stw	r3,0(r16)
    9944:	dfc00917 	ldw	ra,36(sp)
    9948:	dc800817 	ldw	r18,32(sp)
    994c:	dc400717 	ldw	r17,28(sp)
    9950:	dc000617 	ldw	r16,24(sp)
    9954:	dec00a04 	addi	sp,sp,40
    9958:	f800283a 	ret
    995c:	000557c0 	call	557c <__locale_charset>
    9960:	100f883a 	mov	r7,r2
    9964:	dc400015 	stw	r17,0(sp)
    9968:	000d883a 	mov	r6,zero
    996c:	d9400104 	addi	r5,sp,4
    9970:	8009883a 	mov	r4,r16
    9974:	903ee83a 	callr	r18
    9978:	003fed06 	br	9930 <_wcrtomb_r+0x50>

0000997c <wcrtomb>:
    997c:	defff604 	addi	sp,sp,-40
    9980:	00800074 	movhi	r2,1
    9984:	dc800615 	stw	r18,24(sp)
    9988:	dc400515 	stw	r17,20(sp)
    998c:	1084c904 	addi	r2,r2,4900
    9990:	dfc00915 	stw	ra,36(sp)
    9994:	dd000815 	stw	r20,32(sp)
    9998:	dcc00715 	stw	r19,28(sp)
    999c:	dc000415 	stw	r16,16(sp)
    99a0:	3025883a 	mov	r18,r6
    99a4:	14400017 	ldw	r17,0(r2)
    99a8:	20001926 	beq	r4,zero,9a10 <wcrtomb+0x94>
    99ac:	00800074 	movhi	r2,1
    99b0:	1084cd04 	addi	r2,r2,4916
    99b4:	15000017 	ldw	r20,0(r2)
    99b8:	2021883a 	mov	r16,r4
    99bc:	2827883a 	mov	r19,r5
    99c0:	000557c0 	call	557c <__locale_charset>
    99c4:	100f883a 	mov	r7,r2
    99c8:	dc800015 	stw	r18,0(sp)
    99cc:	980d883a 	mov	r6,r19
    99d0:	800b883a 	mov	r5,r16
    99d4:	8809883a 	mov	r4,r17
    99d8:	a03ee83a 	callr	r20
    99dc:	00ffffc4 	movi	r3,-1
    99e0:	10c0031e 	bne	r2,r3,99f0 <wcrtomb+0x74>
    99e4:	90000015 	stw	zero,0(r18)
    99e8:	00c02284 	movi	r3,138
    99ec:	88c00015 	stw	r3,0(r17)
    99f0:	dfc00917 	ldw	ra,36(sp)
    99f4:	dd000817 	ldw	r20,32(sp)
    99f8:	dcc00717 	ldw	r19,28(sp)
    99fc:	dc800617 	ldw	r18,24(sp)
    9a00:	dc400517 	ldw	r17,20(sp)
    9a04:	dc000417 	ldw	r16,16(sp)
    9a08:	dec00a04 	addi	sp,sp,40
    9a0c:	f800283a 	ret
    9a10:	00800074 	movhi	r2,1
    9a14:	1084cd04 	addi	r2,r2,4916
    9a18:	14000017 	ldw	r16,0(r2)
    9a1c:	000557c0 	call	557c <__locale_charset>
    9a20:	100f883a 	mov	r7,r2
    9a24:	dc800015 	stw	r18,0(sp)
    9a28:	000d883a 	mov	r6,zero
    9a2c:	d9400104 	addi	r5,sp,4
    9a30:	8809883a 	mov	r4,r17
    9a34:	803ee83a 	callr	r16
    9a38:	003fe806 	br	99dc <wcrtomb+0x60>

00009a3c <__ascii_wctomb>:
    9a3c:	28000526 	beq	r5,zero,9a54 <__ascii_wctomb+0x18>
    9a40:	00803fc4 	movi	r2,255
    9a44:	11800536 	bltu	r2,r6,9a5c <__ascii_wctomb+0x20>
    9a48:	29800005 	stb	r6,0(r5)
    9a4c:	00800044 	movi	r2,1
    9a50:	f800283a 	ret
    9a54:	0005883a 	mov	r2,zero
    9a58:	f800283a 	ret
    9a5c:	00802284 	movi	r2,138
    9a60:	20800015 	stw	r2,0(r4)
    9a64:	00bfffc4 	movi	r2,-1
    9a68:	f800283a 	ret

00009a6c <_wctomb_r>:
    9a6c:	00800074 	movhi	r2,1
    9a70:	defff904 	addi	sp,sp,-28
    9a74:	1084cd04 	addi	r2,r2,4916
    9a78:	dfc00615 	stw	ra,24(sp)
    9a7c:	dc400515 	stw	r17,20(sp)
    9a80:	dc000415 	stw	r16,16(sp)
    9a84:	3823883a 	mov	r17,r7
    9a88:	14000017 	ldw	r16,0(r2)
    9a8c:	d9000115 	stw	r4,4(sp)
    9a90:	d9400215 	stw	r5,8(sp)
    9a94:	d9800315 	stw	r6,12(sp)
    9a98:	000557c0 	call	557c <__locale_charset>
    9a9c:	d9800317 	ldw	r6,12(sp)
    9aa0:	d9400217 	ldw	r5,8(sp)
    9aa4:	d9000117 	ldw	r4,4(sp)
    9aa8:	100f883a 	mov	r7,r2
    9aac:	dc400015 	stw	r17,0(sp)
    9ab0:	803ee83a 	callr	r16
    9ab4:	dfc00617 	ldw	ra,24(sp)
    9ab8:	dc400517 	ldw	r17,20(sp)
    9abc:	dc000417 	ldw	r16,16(sp)
    9ac0:	dec00704 	addi	sp,sp,28
    9ac4:	f800283a 	ret

00009ac8 <__udivdi3>:
    9ac8:	defff504 	addi	sp,sp,-44
    9acc:	dcc00415 	stw	r19,16(sp)
    9ad0:	dc000115 	stw	r16,4(sp)
    9ad4:	dfc00a15 	stw	ra,40(sp)
    9ad8:	df000915 	stw	fp,36(sp)
    9adc:	ddc00815 	stw	r23,32(sp)
    9ae0:	dd800715 	stw	r22,28(sp)
    9ae4:	dd400615 	stw	r21,24(sp)
    9ae8:	dd000515 	stw	r20,20(sp)
    9aec:	dc800315 	stw	r18,12(sp)
    9af0:	dc400215 	stw	r17,8(sp)
    9af4:	2027883a 	mov	r19,r4
    9af8:	2821883a 	mov	r16,r5
    9afc:	3800411e 	bne	r7,zero,9c04 <__udivdi3+0x13c>
    9b00:	3023883a 	mov	r17,r6
    9b04:	2025883a 	mov	r18,r4
    9b08:	2980522e 	bgeu	r5,r6,9c54 <__udivdi3+0x18c>
    9b0c:	00bfffd4 	movui	r2,65535
    9b10:	282d883a 	mov	r22,r5
    9b14:	1180a836 	bltu	r2,r6,9db8 <__udivdi3+0x2f0>
    9b18:	00803fc4 	movi	r2,255
    9b1c:	1185803a 	cmpltu	r2,r2,r6
    9b20:	100490fa 	slli	r2,r2,3
    9b24:	3086d83a 	srl	r3,r6,r2
    9b28:	01000074 	movhi	r4,1
    9b2c:	213dd204 	addi	r4,r4,-2232
    9b30:	20c7883a 	add	r3,r4,r3
    9b34:	18c00003 	ldbu	r3,0(r3)
    9b38:	1885883a 	add	r2,r3,r2
    9b3c:	00c00804 	movi	r3,32
    9b40:	1887c83a 	sub	r3,r3,r2
    9b44:	18000526 	beq	r3,zero,9b5c <__udivdi3+0x94>
    9b48:	80e0983a 	sll	r16,r16,r3
    9b4c:	9884d83a 	srl	r2,r19,r2
    9b50:	30e2983a 	sll	r17,r6,r3
    9b54:	98e4983a 	sll	r18,r19,r3
    9b58:	142cb03a 	or	r22,r2,r16
    9b5c:	882ad43a 	srli	r21,r17,16
    9b60:	b009883a 	mov	r4,r22
    9b64:	8d3fffcc 	andi	r20,r17,65535
    9b68:	a80b883a 	mov	r5,r21
    9b6c:	000a6d40 	call	a6d4 <__umodsi3>
    9b70:	b009883a 	mov	r4,r22
    9b74:	a80b883a 	mov	r5,r21
    9b78:	1027883a 	mov	r19,r2
    9b7c:	000a6700 	call	a670 <__udivsi3>
    9b80:	102d883a 	mov	r22,r2
    9b84:	9826943a 	slli	r19,r19,16
    9b88:	9004d43a 	srli	r2,r18,16
    9b8c:	a5a1383a 	mul	r16,r20,r22
    9b90:	14c4b03a 	or	r2,r2,r19
    9b94:	1400052e 	bgeu	r2,r16,9bac <__udivdi3+0xe4>
    9b98:	1445883a 	add	r2,r2,r17
    9b9c:	b0ffffc4 	addi	r3,r22,-1
    9ba0:	14400136 	bltu	r2,r17,9ba8 <__udivdi3+0xe0>
    9ba4:	14012336 	bltu	r2,r16,a034 <__udivdi3+0x56c>
    9ba8:	182d883a 	mov	r22,r3
    9bac:	1421c83a 	sub	r16,r2,r16
    9bb0:	a80b883a 	mov	r5,r21
    9bb4:	8009883a 	mov	r4,r16
    9bb8:	000a6d40 	call	a6d4 <__umodsi3>
    9bbc:	1027883a 	mov	r19,r2
    9bc0:	a80b883a 	mov	r5,r21
    9bc4:	8009883a 	mov	r4,r16
    9bc8:	000a6700 	call	a670 <__udivsi3>
    9bcc:	9826943a 	slli	r19,r19,16
    9bd0:	a0a9383a 	mul	r20,r20,r2
    9bd4:	94bfffcc 	andi	r18,r18,65535
    9bd8:	94e4b03a 	or	r18,r18,r19
    9bdc:	9500052e 	bgeu	r18,r20,9bf4 <__udivdi3+0x12c>
    9be0:	8ca5883a 	add	r18,r17,r18
    9be4:	10ffffc4 	addi	r3,r2,-1
    9be8:	9440f136 	bltu	r18,r17,9fb0 <__udivdi3+0x4e8>
    9bec:	9500f02e 	bgeu	r18,r20,9fb0 <__udivdi3+0x4e8>
    9bf0:	10bfff84 	addi	r2,r2,-2
    9bf4:	b00c943a 	slli	r6,r22,16
    9bf8:	0007883a 	mov	r3,zero
    9bfc:	3084b03a 	or	r2,r6,r2
    9c00:	00005906 	br	9d68 <__udivdi3+0x2a0>
    9c04:	29c05636 	bltu	r5,r7,9d60 <__udivdi3+0x298>
    9c08:	00bfffd4 	movui	r2,65535
    9c0c:	11c0622e 	bgeu	r2,r7,9d98 <__udivdi3+0x2d0>
    9c10:	00804034 	movhi	r2,256
    9c14:	10bfffc4 	addi	r2,r2,-1
    9c18:	11c0ee36 	bltu	r2,r7,9fd4 <__udivdi3+0x50c>
    9c1c:	00800404 	movi	r2,16
    9c20:	3886d83a 	srl	r3,r7,r2
    9c24:	01000074 	movhi	r4,1
    9c28:	213dd204 	addi	r4,r4,-2232
    9c2c:	20c7883a 	add	r3,r4,r3
    9c30:	18c00003 	ldbu	r3,0(r3)
    9c34:	05400804 	movi	r21,32
    9c38:	1885883a 	add	r2,r3,r2
    9c3c:	a8abc83a 	sub	r21,r21,r2
    9c40:	a800621e 	bne	r21,zero,9dcc <__udivdi3+0x304>
    9c44:	3c00e936 	bltu	r7,r16,9fec <__udivdi3+0x524>
    9c48:	9985403a 	cmpgeu	r2,r19,r6
    9c4c:	0007883a 	mov	r3,zero
    9c50:	00004506 	br	9d68 <__udivdi3+0x2a0>
    9c54:	3000041e 	bne	r6,zero,9c68 <__udivdi3+0x1a0>
    9c58:	000b883a 	mov	r5,zero
    9c5c:	01000044 	movi	r4,1
    9c60:	000a6700 	call	a670 <__udivsi3>
    9c64:	1023883a 	mov	r17,r2
    9c68:	00bfffd4 	movui	r2,65535
    9c6c:	14404e2e 	bgeu	r2,r17,9da8 <__udivdi3+0x2e0>
    9c70:	00804034 	movhi	r2,256
    9c74:	10bfffc4 	addi	r2,r2,-1
    9c78:	1440d836 	bltu	r2,r17,9fdc <__udivdi3+0x514>
    9c7c:	00800404 	movi	r2,16
    9c80:	8886d83a 	srl	r3,r17,r2
    9c84:	01000074 	movhi	r4,1
    9c88:	213dd204 	addi	r4,r4,-2232
    9c8c:	20c7883a 	add	r3,r4,r3
    9c90:	18c00003 	ldbu	r3,0(r3)
    9c94:	1885883a 	add	r2,r3,r2
    9c98:	00c00804 	movi	r3,32
    9c9c:	1887c83a 	sub	r3,r3,r2
    9ca0:	18008f1e 	bne	r3,zero,9ee0 <__udivdi3+0x418>
    9ca4:	882ad43a 	srli	r21,r17,16
    9ca8:	8461c83a 	sub	r16,r16,r17
    9cac:	8d3fffcc 	andi	r20,r17,65535
    9cb0:	00c00044 	movi	r3,1
    9cb4:	8009883a 	mov	r4,r16
    9cb8:	a80b883a 	mov	r5,r21
    9cbc:	d8c00015 	stw	r3,0(sp)
    9cc0:	000a6d40 	call	a6d4 <__umodsi3>
    9cc4:	8009883a 	mov	r4,r16
    9cc8:	a80b883a 	mov	r5,r21
    9ccc:	1027883a 	mov	r19,r2
    9cd0:	000a6700 	call	a670 <__udivsi3>
    9cd4:	9826943a 	slli	r19,r19,16
    9cd8:	9008d43a 	srli	r4,r18,16
    9cdc:	1521383a 	mul	r16,r2,r20
    9ce0:	102d883a 	mov	r22,r2
    9ce4:	24c8b03a 	or	r4,r4,r19
    9ce8:	d8c00017 	ldw	r3,0(sp)
    9cec:	2400052e 	bgeu	r4,r16,9d04 <__udivdi3+0x23c>
    9cf0:	2449883a 	add	r4,r4,r17
    9cf4:	b0bfffc4 	addi	r2,r22,-1
    9cf8:	24400136 	bltu	r4,r17,9d00 <__udivdi3+0x238>
    9cfc:	2400ca36 	bltu	r4,r16,a028 <__udivdi3+0x560>
    9d00:	102d883a 	mov	r22,r2
    9d04:	2421c83a 	sub	r16,r4,r16
    9d08:	a80b883a 	mov	r5,r21
    9d0c:	8009883a 	mov	r4,r16
    9d10:	d8c00015 	stw	r3,0(sp)
    9d14:	000a6d40 	call	a6d4 <__umodsi3>
    9d18:	1027883a 	mov	r19,r2
    9d1c:	a80b883a 	mov	r5,r21
    9d20:	8009883a 	mov	r4,r16
    9d24:	000a6700 	call	a670 <__udivsi3>
    9d28:	9826943a 	slli	r19,r19,16
    9d2c:	1529383a 	mul	r20,r2,r20
    9d30:	94bfffcc 	andi	r18,r18,65535
    9d34:	94e4b03a 	or	r18,r18,r19
    9d38:	d8c00017 	ldw	r3,0(sp)
    9d3c:	9500052e 	bgeu	r18,r20,9d54 <__udivdi3+0x28c>
    9d40:	8ca5883a 	add	r18,r17,r18
    9d44:	113fffc4 	addi	r4,r2,-1
    9d48:	94409736 	bltu	r18,r17,9fa8 <__udivdi3+0x4e0>
    9d4c:	9500962e 	bgeu	r18,r20,9fa8 <__udivdi3+0x4e0>
    9d50:	10bfff84 	addi	r2,r2,-2
    9d54:	b00c943a 	slli	r6,r22,16
    9d58:	3084b03a 	or	r2,r6,r2
    9d5c:	00000206 	br	9d68 <__udivdi3+0x2a0>
    9d60:	0007883a 	mov	r3,zero
    9d64:	0005883a 	mov	r2,zero
    9d68:	dfc00a17 	ldw	ra,40(sp)
    9d6c:	df000917 	ldw	fp,36(sp)
    9d70:	ddc00817 	ldw	r23,32(sp)
    9d74:	dd800717 	ldw	r22,28(sp)
    9d78:	dd400617 	ldw	r21,24(sp)
    9d7c:	dd000517 	ldw	r20,20(sp)
    9d80:	dcc00417 	ldw	r19,16(sp)
    9d84:	dc800317 	ldw	r18,12(sp)
    9d88:	dc400217 	ldw	r17,8(sp)
    9d8c:	dc000117 	ldw	r16,4(sp)
    9d90:	dec00b04 	addi	sp,sp,44
    9d94:	f800283a 	ret
    9d98:	00803fc4 	movi	r2,255
    9d9c:	11c5803a 	cmpltu	r2,r2,r7
    9da0:	100490fa 	slli	r2,r2,3
    9da4:	003f9e06 	br	9c20 <__udivdi3+0x158>
    9da8:	00803fc4 	movi	r2,255
    9dac:	1445803a 	cmpltu	r2,r2,r17
    9db0:	100490fa 	slli	r2,r2,3
    9db4:	003fb206 	br	9c80 <__udivdi3+0x1b8>
    9db8:	00804034 	movhi	r2,256
    9dbc:	10bfffc4 	addi	r2,r2,-1
    9dc0:	11808836 	bltu	r2,r6,9fe4 <__udivdi3+0x51c>
    9dc4:	00800404 	movi	r2,16
    9dc8:	003f5606 	br	9b24 <__udivdi3+0x5c>
    9dcc:	30aed83a 	srl	r23,r6,r2
    9dd0:	3d4e983a 	sll	r7,r7,r21
    9dd4:	80acd83a 	srl	r22,r16,r2
    9dd8:	9884d83a 	srl	r2,r19,r2
    9ddc:	3deeb03a 	or	r23,r7,r23
    9de0:	b824d43a 	srli	r18,r23,16
    9de4:	8560983a 	sll	r16,r16,r21
    9de8:	b009883a 	mov	r4,r22
    9dec:	900b883a 	mov	r5,r18
    9df0:	3568983a 	sll	r20,r6,r21
    9df4:	1420b03a 	or	r16,r2,r16
    9df8:	000a6d40 	call	a6d4 <__umodsi3>
    9dfc:	b009883a 	mov	r4,r22
    9e00:	900b883a 	mov	r5,r18
    9e04:	1023883a 	mov	r17,r2
    9e08:	000a6700 	call	a670 <__udivsi3>
    9e0c:	8808943a 	slli	r4,r17,16
    9e10:	bf3fffcc 	andi	fp,r23,65535
    9e14:	8006d43a 	srli	r3,r16,16
    9e18:	e0a3383a 	mul	r17,fp,r2
    9e1c:	100d883a 	mov	r6,r2
    9e20:	1906b03a 	or	r3,r3,r4
    9e24:	1c40042e 	bgeu	r3,r17,9e38 <__udivdi3+0x370>
    9e28:	1dc7883a 	add	r3,r3,r23
    9e2c:	10bfffc4 	addi	r2,r2,-1
    9e30:	1dc0752e 	bgeu	r3,r23,a008 <__udivdi3+0x540>
    9e34:	100d883a 	mov	r6,r2
    9e38:	1c63c83a 	sub	r17,r3,r17
    9e3c:	900b883a 	mov	r5,r18
    9e40:	8809883a 	mov	r4,r17
    9e44:	d9800015 	stw	r6,0(sp)
    9e48:	000a6d40 	call	a6d4 <__umodsi3>
    9e4c:	102d883a 	mov	r22,r2
    9e50:	8809883a 	mov	r4,r17
    9e54:	900b883a 	mov	r5,r18
    9e58:	000a6700 	call	a670 <__udivsi3>
    9e5c:	b02c943a 	slli	r22,r22,16
    9e60:	e089383a 	mul	r4,fp,r2
    9e64:	843fffcc 	andi	r16,r16,65535
    9e68:	85a0b03a 	or	r16,r16,r22
    9e6c:	d9800017 	ldw	r6,0(sp)
    9e70:	8100042e 	bgeu	r16,r4,9e84 <__udivdi3+0x3bc>
    9e74:	85e1883a 	add	r16,r16,r23
    9e78:	10ffffc4 	addi	r3,r2,-1
    9e7c:	85c05e2e 	bgeu	r16,r23,9ff8 <__udivdi3+0x530>
    9e80:	1805883a 	mov	r2,r3
    9e84:	300c943a 	slli	r6,r6,16
    9e88:	a17fffcc 	andi	r5,r20,65535
    9e8c:	a028d43a 	srli	r20,r20,16
    9e90:	3084b03a 	or	r2,r6,r2
    9e94:	10ffffcc 	andi	r3,r2,65535
    9e98:	100cd43a 	srli	r6,r2,16
    9e9c:	194f383a 	mul	r7,r3,r5
    9ea0:	1d07383a 	mul	r3,r3,r20
    9ea4:	314b383a 	mul	r5,r6,r5
    9ea8:	3810d43a 	srli	r8,r7,16
    9eac:	8121c83a 	sub	r16,r16,r4
    9eb0:	1947883a 	add	r3,r3,r5
    9eb4:	40c7883a 	add	r3,r8,r3
    9eb8:	350d383a 	mul	r6,r6,r20
    9ebc:	1940022e 	bgeu	r3,r5,9ec8 <__udivdi3+0x400>
    9ec0:	01000074 	movhi	r4,1
    9ec4:	310d883a 	add	r6,r6,r4
    9ec8:	1828d43a 	srli	r20,r3,16
    9ecc:	a18d883a 	add	r6,r20,r6
    9ed0:	81803e36 	bltu	r16,r6,9fcc <__udivdi3+0x504>
    9ed4:	81803826 	beq	r16,r6,9fb8 <__udivdi3+0x4f0>
    9ed8:	0007883a 	mov	r3,zero
    9edc:	003fa206 	br	9d68 <__udivdi3+0x2a0>
    9ee0:	88e2983a 	sll	r17,r17,r3
    9ee4:	80a8d83a 	srl	r20,r16,r2
    9ee8:	80e0983a 	sll	r16,r16,r3
    9eec:	882ad43a 	srli	r21,r17,16
    9ef0:	9884d83a 	srl	r2,r19,r2
    9ef4:	a009883a 	mov	r4,r20
    9ef8:	a80b883a 	mov	r5,r21
    9efc:	142eb03a 	or	r23,r2,r16
    9f00:	98e4983a 	sll	r18,r19,r3
    9f04:	000a6d40 	call	a6d4 <__umodsi3>
    9f08:	a009883a 	mov	r4,r20
    9f0c:	a80b883a 	mov	r5,r21
    9f10:	1021883a 	mov	r16,r2
    9f14:	000a6700 	call	a670 <__udivsi3>
    9f18:	1039883a 	mov	fp,r2
    9f1c:	8d3fffcc 	andi	r20,r17,65535
    9f20:	8020943a 	slli	r16,r16,16
    9f24:	b804d43a 	srli	r2,r23,16
    9f28:	a72d383a 	mul	r22,r20,fp
    9f2c:	1404b03a 	or	r2,r2,r16
    9f30:	1580062e 	bgeu	r2,r22,9f4c <__udivdi3+0x484>
    9f34:	1445883a 	add	r2,r2,r17
    9f38:	e0ffffc4 	addi	r3,fp,-1
    9f3c:	14403836 	bltu	r2,r17,a020 <__udivdi3+0x558>
    9f40:	1580372e 	bgeu	r2,r22,a020 <__udivdi3+0x558>
    9f44:	e73fff84 	addi	fp,fp,-2
    9f48:	1445883a 	add	r2,r2,r17
    9f4c:	15adc83a 	sub	r22,r2,r22
    9f50:	a80b883a 	mov	r5,r21
    9f54:	b009883a 	mov	r4,r22
    9f58:	000a6d40 	call	a6d4 <__umodsi3>
    9f5c:	1027883a 	mov	r19,r2
    9f60:	b009883a 	mov	r4,r22
    9f64:	a80b883a 	mov	r5,r21
    9f68:	000a6700 	call	a670 <__udivsi3>
    9f6c:	9826943a 	slli	r19,r19,16
    9f70:	a0a1383a 	mul	r16,r20,r2
    9f74:	b93fffcc 	andi	r4,r23,65535
    9f78:	24c8b03a 	or	r4,r4,r19
    9f7c:	2400062e 	bgeu	r4,r16,9f98 <__udivdi3+0x4d0>
    9f80:	2449883a 	add	r4,r4,r17
    9f84:	10ffffc4 	addi	r3,r2,-1
    9f88:	24402336 	bltu	r4,r17,a018 <__udivdi3+0x550>
    9f8c:	2400222e 	bgeu	r4,r16,a018 <__udivdi3+0x550>
    9f90:	10bfff84 	addi	r2,r2,-2
    9f94:	2449883a 	add	r4,r4,r17
    9f98:	e038943a 	slli	fp,fp,16
    9f9c:	2421c83a 	sub	r16,r4,r16
    9fa0:	e086b03a 	or	r3,fp,r2
    9fa4:	003f4306 	br	9cb4 <__udivdi3+0x1ec>
    9fa8:	2005883a 	mov	r2,r4
    9fac:	003f6906 	br	9d54 <__udivdi3+0x28c>
    9fb0:	1805883a 	mov	r2,r3
    9fb4:	003f0f06 	br	9bf4 <__udivdi3+0x12c>
    9fb8:	1806943a 	slli	r3,r3,16
    9fbc:	9d66983a 	sll	r19,r19,r21
    9fc0:	39ffffcc 	andi	r7,r7,65535
    9fc4:	19c7883a 	add	r3,r3,r7
    9fc8:	98ffc32e 	bgeu	r19,r3,9ed8 <__udivdi3+0x410>
    9fcc:	10bfffc4 	addi	r2,r2,-1
    9fd0:	003fc106 	br	9ed8 <__udivdi3+0x410>
    9fd4:	00800604 	movi	r2,24
    9fd8:	003f1106 	br	9c20 <__udivdi3+0x158>
    9fdc:	00800604 	movi	r2,24
    9fe0:	003f2706 	br	9c80 <__udivdi3+0x1b8>
    9fe4:	00800604 	movi	r2,24
    9fe8:	003ece06 	br	9b24 <__udivdi3+0x5c>
    9fec:	0007883a 	mov	r3,zero
    9ff0:	00800044 	movi	r2,1
    9ff4:	003f5c06 	br	9d68 <__udivdi3+0x2a0>
    9ff8:	813fa12e 	bgeu	r16,r4,9e80 <__udivdi3+0x3b8>
    9ffc:	10bfff84 	addi	r2,r2,-2
    a000:	85e1883a 	add	r16,r16,r23
    a004:	003f9f06 	br	9e84 <__udivdi3+0x3bc>
    a008:	1c7f8a2e 	bgeu	r3,r17,9e34 <__udivdi3+0x36c>
    a00c:	31bfff84 	addi	r6,r6,-2
    a010:	1dc7883a 	add	r3,r3,r23
    a014:	003f8806 	br	9e38 <__udivdi3+0x370>
    a018:	1805883a 	mov	r2,r3
    a01c:	003fde06 	br	9f98 <__udivdi3+0x4d0>
    a020:	1839883a 	mov	fp,r3
    a024:	003fc906 	br	9f4c <__udivdi3+0x484>
    a028:	b5bfff84 	addi	r22,r22,-2
    a02c:	2449883a 	add	r4,r4,r17
    a030:	003f3406 	br	9d04 <__udivdi3+0x23c>
    a034:	b5bfff84 	addi	r22,r22,-2
    a038:	1445883a 	add	r2,r2,r17
    a03c:	003edb06 	br	9bac <__udivdi3+0xe4>

0000a040 <__umoddi3>:
    a040:	defff404 	addi	sp,sp,-48
    a044:	df000a15 	stw	fp,40(sp)
    a048:	dc400315 	stw	r17,12(sp)
    a04c:	dc000215 	stw	r16,8(sp)
    a050:	dfc00b15 	stw	ra,44(sp)
    a054:	ddc00915 	stw	r23,36(sp)
    a058:	dd800815 	stw	r22,32(sp)
    a05c:	dd400715 	stw	r21,28(sp)
    a060:	dd000615 	stw	r20,24(sp)
    a064:	dcc00515 	stw	r19,20(sp)
    a068:	dc800415 	stw	r18,16(sp)
    a06c:	2021883a 	mov	r16,r4
    a070:	2823883a 	mov	r17,r5
    a074:	2839883a 	mov	fp,r5
    a078:	38003c1e 	bne	r7,zero,a16c <__umoddi3+0x12c>
    a07c:	3027883a 	mov	r19,r6
    a080:	2029883a 	mov	r20,r4
    a084:	2980512e 	bgeu	r5,r6,a1cc <__umoddi3+0x18c>
    a088:	00bfffd4 	movui	r2,65535
    a08c:	11809a36 	bltu	r2,r6,a2f8 <__umoddi3+0x2b8>
    a090:	01003fc4 	movi	r4,255
    a094:	2189803a 	cmpltu	r4,r4,r6
    a098:	200890fa 	slli	r4,r4,3
    a09c:	3104d83a 	srl	r2,r6,r4
    a0a0:	00c00074 	movhi	r3,1
    a0a4:	18fdd204 	addi	r3,r3,-2232
    a0a8:	1885883a 	add	r2,r3,r2
    a0ac:	10c00003 	ldbu	r3,0(r2)
    a0b0:	00800804 	movi	r2,32
    a0b4:	1909883a 	add	r4,r3,r4
    a0b8:	1125c83a 	sub	r18,r2,r4
    a0bc:	90000526 	beq	r18,zero,a0d4 <__umoddi3+0x94>
    a0c0:	8ca2983a 	sll	r17,r17,r18
    a0c4:	8108d83a 	srl	r4,r16,r4
    a0c8:	34a6983a 	sll	r19,r6,r18
    a0cc:	84a8983a 	sll	r20,r16,r18
    a0d0:	2478b03a 	or	fp,r4,r17
    a0d4:	982ed43a 	srli	r23,r19,16
    a0d8:	e009883a 	mov	r4,fp
    a0dc:	9dbfffcc 	andi	r22,r19,65535
    a0e0:	b80b883a 	mov	r5,r23
    a0e4:	000a6d40 	call	a6d4 <__umodsi3>
    a0e8:	e009883a 	mov	r4,fp
    a0ec:	b80b883a 	mov	r5,r23
    a0f0:	102b883a 	mov	r21,r2
    a0f4:	000a6700 	call	a670 <__udivsi3>
    a0f8:	a806943a 	slli	r3,r21,16
    a0fc:	a008d43a 	srli	r4,r20,16
    a100:	b085383a 	mul	r2,r22,r2
    a104:	20c8b03a 	or	r4,r4,r3
    a108:	2080032e 	bgeu	r4,r2,a118 <__umoddi3+0xd8>
    a10c:	24c9883a 	add	r4,r4,r19
    a110:	24c00136 	bltu	r4,r19,a118 <__umoddi3+0xd8>
    a114:	20811036 	bltu	r4,r2,a558 <__umoddi3+0x518>
    a118:	20abc83a 	sub	r21,r4,r2
    a11c:	b80b883a 	mov	r5,r23
    a120:	a809883a 	mov	r4,r21
    a124:	000a6d40 	call	a6d4 <__umodsi3>
    a128:	1023883a 	mov	r17,r2
    a12c:	b80b883a 	mov	r5,r23
    a130:	a809883a 	mov	r4,r21
    a134:	000a6700 	call	a670 <__udivsi3>
    a138:	8822943a 	slli	r17,r17,16
    a13c:	b085383a 	mul	r2,r22,r2
    a140:	a0ffffcc 	andi	r3,r20,65535
    a144:	1c46b03a 	or	r3,r3,r17
    a148:	1880042e 	bgeu	r3,r2,a15c <__umoddi3+0x11c>
    a14c:	1cc7883a 	add	r3,r3,r19
    a150:	1cc00236 	bltu	r3,r19,a15c <__umoddi3+0x11c>
    a154:	1880012e 	bgeu	r3,r2,a15c <__umoddi3+0x11c>
    a158:	1cc7883a 	add	r3,r3,r19
    a15c:	1885c83a 	sub	r2,r3,r2
    a160:	1484d83a 	srl	r2,r2,r18
    a164:	0007883a 	mov	r3,zero
    a168:	00004f06 	br	a2a8 <__umoddi3+0x268>
    a16c:	29c04c36 	bltu	r5,r7,a2a0 <__umoddi3+0x260>
    a170:	00bfffd4 	movui	r2,65535
    a174:	11c0582e 	bgeu	r2,r7,a2d8 <__umoddi3+0x298>
    a178:	00804034 	movhi	r2,256
    a17c:	10bfffc4 	addi	r2,r2,-1
    a180:	11c0e736 	bltu	r2,r7,a520 <__umoddi3+0x4e0>
    a184:	01000404 	movi	r4,16
    a188:	3904d83a 	srl	r2,r7,r4
    a18c:	00c00074 	movhi	r3,1
    a190:	18fdd204 	addi	r3,r3,-2232
    a194:	1885883a 	add	r2,r3,r2
    a198:	14c00003 	ldbu	r19,0(r2)
    a19c:	00c00804 	movi	r3,32
    a1a0:	9927883a 	add	r19,r19,r4
    a1a4:	1ce9c83a 	sub	r20,r3,r19
    a1a8:	a000581e 	bne	r20,zero,a30c <__umoddi3+0x2cc>
    a1ac:	3c400136 	bltu	r7,r17,a1b4 <__umoddi3+0x174>
    a1b0:	8180eb36 	bltu	r16,r6,a560 <__umoddi3+0x520>
    a1b4:	8185c83a 	sub	r2,r16,r6
    a1b8:	89e3c83a 	sub	r17,r17,r7
    a1bc:	8089803a 	cmpltu	r4,r16,r2
    a1c0:	8939c83a 	sub	fp,r17,r4
    a1c4:	e007883a 	mov	r3,fp
    a1c8:	00003706 	br	a2a8 <__umoddi3+0x268>
    a1cc:	3000041e 	bne	r6,zero,a1e0 <__umoddi3+0x1a0>
    a1d0:	000b883a 	mov	r5,zero
    a1d4:	01000044 	movi	r4,1
    a1d8:	000a6700 	call	a670 <__udivsi3>
    a1dc:	1027883a 	mov	r19,r2
    a1e0:	00bfffd4 	movui	r2,65535
    a1e4:	14c0402e 	bgeu	r2,r19,a2e8 <__umoddi3+0x2a8>
    a1e8:	00804034 	movhi	r2,256
    a1ec:	10bfffc4 	addi	r2,r2,-1
    a1f0:	14c0cd36 	bltu	r2,r19,a528 <__umoddi3+0x4e8>
    a1f4:	00800404 	movi	r2,16
    a1f8:	9886d83a 	srl	r3,r19,r2
    a1fc:	01000074 	movhi	r4,1
    a200:	213dd204 	addi	r4,r4,-2232
    a204:	20c7883a 	add	r3,r4,r3
    a208:	18c00003 	ldbu	r3,0(r3)
    a20c:	1887883a 	add	r3,r3,r2
    a210:	00800804 	movi	r2,32
    a214:	10e5c83a 	sub	r18,r2,r3
    a218:	9000901e 	bne	r18,zero,a45c <__umoddi3+0x41c>
    a21c:	982cd43a 	srli	r22,r19,16
    a220:	8ce3c83a 	sub	r17,r17,r19
    a224:	9d7fffcc 	andi	r21,r19,65535
    a228:	b00b883a 	mov	r5,r22
    a22c:	8809883a 	mov	r4,r17
    a230:	000a6d40 	call	a6d4 <__umodsi3>
    a234:	8809883a 	mov	r4,r17
    a238:	b00b883a 	mov	r5,r22
    a23c:	1021883a 	mov	r16,r2
    a240:	000a6700 	call	a670 <__udivsi3>
    a244:	8006943a 	slli	r3,r16,16
    a248:	a008d43a 	srli	r4,r20,16
    a24c:	1545383a 	mul	r2,r2,r21
    a250:	20c8b03a 	or	r4,r4,r3
    a254:	2080042e 	bgeu	r4,r2,a268 <__umoddi3+0x228>
    a258:	24c9883a 	add	r4,r4,r19
    a25c:	24c00236 	bltu	r4,r19,a268 <__umoddi3+0x228>
    a260:	2080012e 	bgeu	r4,r2,a268 <__umoddi3+0x228>
    a264:	24c9883a 	add	r4,r4,r19
    a268:	20a1c83a 	sub	r16,r4,r2
    a26c:	b00b883a 	mov	r5,r22
    a270:	8009883a 	mov	r4,r16
    a274:	000a6d40 	call	a6d4 <__umodsi3>
    a278:	1023883a 	mov	r17,r2
    a27c:	b00b883a 	mov	r5,r22
    a280:	8009883a 	mov	r4,r16
    a284:	000a6700 	call	a670 <__udivsi3>
    a288:	8822943a 	slli	r17,r17,16
    a28c:	1545383a 	mul	r2,r2,r21
    a290:	a53fffcc 	andi	r20,r20,65535
    a294:	a446b03a 	or	r3,r20,r17
    a298:	18bfb02e 	bgeu	r3,r2,a15c <__umoddi3+0x11c>
    a29c:	003fab06 	br	a14c <__umoddi3+0x10c>
    a2a0:	2005883a 	mov	r2,r4
    a2a4:	2807883a 	mov	r3,r5
    a2a8:	dfc00b17 	ldw	ra,44(sp)
    a2ac:	df000a17 	ldw	fp,40(sp)
    a2b0:	ddc00917 	ldw	r23,36(sp)
    a2b4:	dd800817 	ldw	r22,32(sp)
    a2b8:	dd400717 	ldw	r21,28(sp)
    a2bc:	dd000617 	ldw	r20,24(sp)
    a2c0:	dcc00517 	ldw	r19,20(sp)
    a2c4:	dc800417 	ldw	r18,16(sp)
    a2c8:	dc400317 	ldw	r17,12(sp)
    a2cc:	dc000217 	ldw	r16,8(sp)
    a2d0:	dec00c04 	addi	sp,sp,48
    a2d4:	f800283a 	ret
    a2d8:	04c03fc4 	movi	r19,255
    a2dc:	99c9803a 	cmpltu	r4,r19,r7
    a2e0:	200890fa 	slli	r4,r4,3
    a2e4:	003fa806 	br	a188 <__umoddi3+0x148>
    a2e8:	00803fc4 	movi	r2,255
    a2ec:	14c5803a 	cmpltu	r2,r2,r19
    a2f0:	100490fa 	slli	r2,r2,3
    a2f4:	003fc006 	br	a1f8 <__umoddi3+0x1b8>
    a2f8:	00804034 	movhi	r2,256
    a2fc:	10bfffc4 	addi	r2,r2,-1
    a300:	11808b36 	bltu	r2,r6,a530 <__umoddi3+0x4f0>
    a304:	01000404 	movi	r4,16
    a308:	003f6406 	br	a09c <__umoddi3+0x5c>
    a30c:	34c4d83a 	srl	r2,r6,r19
    a310:	3d0e983a 	sll	r7,r7,r20
    a314:	8cf8d83a 	srl	fp,r17,r19
    a318:	8d10983a 	sll	r8,r17,r20
    a31c:	38aab03a 	or	r21,r7,r2
    a320:	a82cd43a 	srli	r22,r21,16
    a324:	84e2d83a 	srl	r17,r16,r19
    a328:	e009883a 	mov	r4,fp
    a32c:	b00b883a 	mov	r5,r22
    a330:	8a22b03a 	or	r17,r17,r8
    a334:	3524983a 	sll	r18,r6,r20
    a338:	000a6d40 	call	a6d4 <__umodsi3>
    a33c:	e009883a 	mov	r4,fp
    a340:	b00b883a 	mov	r5,r22
    a344:	102f883a 	mov	r23,r2
    a348:	000a6700 	call	a670 <__udivsi3>
    a34c:	100d883a 	mov	r6,r2
    a350:	b808943a 	slli	r4,r23,16
    a354:	aa3fffcc 	andi	r8,r21,65535
    a358:	8804d43a 	srli	r2,r17,16
    a35c:	41af383a 	mul	r23,r8,r6
    a360:	8520983a 	sll	r16,r16,r20
    a364:	1104b03a 	or	r2,r2,r4
    a368:	15c0042e 	bgeu	r2,r23,a37c <__umoddi3+0x33c>
    a36c:	1545883a 	add	r2,r2,r21
    a370:	30ffffc4 	addi	r3,r6,-1
    a374:	1540742e 	bgeu	r2,r21,a548 <__umoddi3+0x508>
    a378:	180d883a 	mov	r6,r3
    a37c:	15efc83a 	sub	r23,r2,r23
    a380:	b00b883a 	mov	r5,r22
    a384:	b809883a 	mov	r4,r23
    a388:	d9800115 	stw	r6,4(sp)
    a38c:	da000015 	stw	r8,0(sp)
    a390:	000a6d40 	call	a6d4 <__umodsi3>
    a394:	b00b883a 	mov	r5,r22
    a398:	b809883a 	mov	r4,r23
    a39c:	1039883a 	mov	fp,r2
    a3a0:	000a6700 	call	a670 <__udivsi3>
    a3a4:	da000017 	ldw	r8,0(sp)
    a3a8:	e038943a 	slli	fp,fp,16
    a3ac:	100b883a 	mov	r5,r2
    a3b0:	4089383a 	mul	r4,r8,r2
    a3b4:	8a3fffcc 	andi	r8,r17,65535
    a3b8:	4710b03a 	or	r8,r8,fp
    a3bc:	d9800117 	ldw	r6,4(sp)
    a3c0:	4100042e 	bgeu	r8,r4,a3d4 <__umoddi3+0x394>
    a3c4:	4551883a 	add	r8,r8,r21
    a3c8:	10bfffc4 	addi	r2,r2,-1
    a3cc:	45405a2e 	bgeu	r8,r21,a538 <__umoddi3+0x4f8>
    a3d0:	100b883a 	mov	r5,r2
    a3d4:	300c943a 	slli	r6,r6,16
    a3d8:	91ffffcc 	andi	r7,r18,65535
    a3dc:	9004d43a 	srli	r2,r18,16
    a3e0:	314cb03a 	or	r6,r6,r5
    a3e4:	317fffcc 	andi	r5,r6,65535
    a3e8:	300cd43a 	srli	r6,r6,16
    a3ec:	29d3383a 	mul	r9,r5,r7
    a3f0:	288b383a 	mul	r5,r5,r2
    a3f4:	31cf383a 	mul	r7,r6,r7
    a3f8:	4806d43a 	srli	r3,r9,16
    a3fc:	4111c83a 	sub	r8,r8,r4
    a400:	29cb883a 	add	r5,r5,r7
    a404:	194b883a 	add	r5,r3,r5
    a408:	3085383a 	mul	r2,r6,r2
    a40c:	29c0022e 	bgeu	r5,r7,a418 <__umoddi3+0x3d8>
    a410:	00c00074 	movhi	r3,1
    a414:	10c5883a 	add	r2,r2,r3
    a418:	2808d43a 	srli	r4,r5,16
    a41c:	280a943a 	slli	r5,r5,16
    a420:	4a7fffcc 	andi	r9,r9,65535
    a424:	2085883a 	add	r2,r4,r2
    a428:	2a4b883a 	add	r5,r5,r9
    a42c:	40803636 	bltu	r8,r2,a508 <__umoddi3+0x4c8>
    a430:	40804d26 	beq	r8,r2,a568 <__umoddi3+0x528>
    a434:	4089c83a 	sub	r4,r8,r2
    a438:	280f883a 	mov	r7,r5
    a43c:	81cfc83a 	sub	r7,r16,r7
    a440:	81c7803a 	cmpltu	r3,r16,r7
    a444:	20c7c83a 	sub	r3,r4,r3
    a448:	1cc4983a 	sll	r2,r3,r19
    a44c:	3d0ed83a 	srl	r7,r7,r20
    a450:	1d06d83a 	srl	r3,r3,r20
    a454:	11c4b03a 	or	r2,r2,r7
    a458:	003f9306 	br	a2a8 <__umoddi3+0x268>
    a45c:	9ca6983a 	sll	r19,r19,r18
    a460:	88e8d83a 	srl	r20,r17,r3
    a464:	80c4d83a 	srl	r2,r16,r3
    a468:	982cd43a 	srli	r22,r19,16
    a46c:	8ca2983a 	sll	r17,r17,r18
    a470:	a009883a 	mov	r4,r20
    a474:	b00b883a 	mov	r5,r22
    a478:	1478b03a 	or	fp,r2,r17
    a47c:	000a6d40 	call	a6d4 <__umodsi3>
    a480:	a009883a 	mov	r4,r20
    a484:	b00b883a 	mov	r5,r22
    a488:	1023883a 	mov	r17,r2
    a48c:	000a6700 	call	a670 <__udivsi3>
    a490:	9d7fffcc 	andi	r21,r19,65535
    a494:	880a943a 	slli	r5,r17,16
    a498:	e008d43a 	srli	r4,fp,16
    a49c:	a885383a 	mul	r2,r21,r2
    a4a0:	84a8983a 	sll	r20,r16,r18
    a4a4:	2148b03a 	or	r4,r4,r5
    a4a8:	2080042e 	bgeu	r4,r2,a4bc <__umoddi3+0x47c>
    a4ac:	24c9883a 	add	r4,r4,r19
    a4b0:	24c00236 	bltu	r4,r19,a4bc <__umoddi3+0x47c>
    a4b4:	2080012e 	bgeu	r4,r2,a4bc <__umoddi3+0x47c>
    a4b8:	24c9883a 	add	r4,r4,r19
    a4bc:	20a3c83a 	sub	r17,r4,r2
    a4c0:	b00b883a 	mov	r5,r22
    a4c4:	8809883a 	mov	r4,r17
    a4c8:	000a6d40 	call	a6d4 <__umodsi3>
    a4cc:	102f883a 	mov	r23,r2
    a4d0:	8809883a 	mov	r4,r17
    a4d4:	b00b883a 	mov	r5,r22
    a4d8:	000a6700 	call	a670 <__udivsi3>
    a4dc:	b82e943a 	slli	r23,r23,16
    a4e0:	a885383a 	mul	r2,r21,r2
    a4e4:	e13fffcc 	andi	r4,fp,65535
    a4e8:	25c8b03a 	or	r4,r4,r23
    a4ec:	2080042e 	bgeu	r4,r2,a500 <__umoddi3+0x4c0>
    a4f0:	24c9883a 	add	r4,r4,r19
    a4f4:	24c00236 	bltu	r4,r19,a500 <__umoddi3+0x4c0>
    a4f8:	2080012e 	bgeu	r4,r2,a500 <__umoddi3+0x4c0>
    a4fc:	24c9883a 	add	r4,r4,r19
    a500:	20a3c83a 	sub	r17,r4,r2
    a504:	003f4806 	br	a228 <__umoddi3+0x1e8>
    a508:	2c8fc83a 	sub	r7,r5,r18
    a50c:	1545c83a 	sub	r2,r2,r21
    a510:	29cb803a 	cmpltu	r5,r5,r7
    a514:	1145c83a 	sub	r2,r2,r5
    a518:	4089c83a 	sub	r4,r8,r2
    a51c:	003fc706 	br	a43c <__umoddi3+0x3fc>
    a520:	01000604 	movi	r4,24
    a524:	003f1806 	br	a188 <__umoddi3+0x148>
    a528:	00800604 	movi	r2,24
    a52c:	003f3206 	br	a1f8 <__umoddi3+0x1b8>
    a530:	01000604 	movi	r4,24
    a534:	003ed906 	br	a09c <__umoddi3+0x5c>
    a538:	413fa52e 	bgeu	r8,r4,a3d0 <__umoddi3+0x390>
    a53c:	297fff84 	addi	r5,r5,-2
    a540:	4551883a 	add	r8,r8,r21
    a544:	003fa306 	br	a3d4 <__umoddi3+0x394>
    a548:	15ff8b2e 	bgeu	r2,r23,a378 <__umoddi3+0x338>
    a54c:	31bfff84 	addi	r6,r6,-2
    a550:	1545883a 	add	r2,r2,r21
    a554:	003f8906 	br	a37c <__umoddi3+0x33c>
    a558:	24c9883a 	add	r4,r4,r19
    a55c:	003eee06 	br	a118 <__umoddi3+0xd8>
    a560:	8005883a 	mov	r2,r16
    a564:	003f1706 	br	a1c4 <__umoddi3+0x184>
    a568:	817fe736 	bltu	r16,r5,a508 <__umoddi3+0x4c8>
    a56c:	280f883a 	mov	r7,r5
    a570:	0009883a 	mov	r4,zero
    a574:	003fb106 	br	a43c <__umoddi3+0x3fc>

0000a578 <__divsi3>:
    a578:	20001b16 	blt	r4,zero,a5e8 <__divsi3+0x70>
    a57c:	000f883a 	mov	r7,zero
    a580:	28001616 	blt	r5,zero,a5dc <__divsi3+0x64>
    a584:	200d883a 	mov	r6,r4
    a588:	29001a2e 	bgeu	r5,r4,a5f4 <__divsi3+0x7c>
    a58c:	00800804 	movi	r2,32
    a590:	00c00044 	movi	r3,1
    a594:	00000106 	br	a59c <__divsi3+0x24>
    a598:	10000d26 	beq	r2,zero,a5d0 <__divsi3+0x58>
    a59c:	294b883a 	add	r5,r5,r5
    a5a0:	10bfffc4 	addi	r2,r2,-1
    a5a4:	18c7883a 	add	r3,r3,r3
    a5a8:	293ffb36 	bltu	r5,r4,a598 <__divsi3+0x20>
    a5ac:	0005883a 	mov	r2,zero
    a5b0:	18000726 	beq	r3,zero,a5d0 <__divsi3+0x58>
    a5b4:	0005883a 	mov	r2,zero
    a5b8:	31400236 	bltu	r6,r5,a5c4 <__divsi3+0x4c>
    a5bc:	314dc83a 	sub	r6,r6,r5
    a5c0:	10c4b03a 	or	r2,r2,r3
    a5c4:	1806d07a 	srli	r3,r3,1
    a5c8:	280ad07a 	srli	r5,r5,1
    a5cc:	183ffa1e 	bne	r3,zero,a5b8 <__divsi3+0x40>
    a5d0:	38000126 	beq	r7,zero,a5d8 <__divsi3+0x60>
    a5d4:	0085c83a 	sub	r2,zero,r2
    a5d8:	f800283a 	ret
    a5dc:	014bc83a 	sub	r5,zero,r5
    a5e0:	39c0005c 	xori	r7,r7,1
    a5e4:	003fe706 	br	a584 <__divsi3+0xc>
    a5e8:	0109c83a 	sub	r4,zero,r4
    a5ec:	01c00044 	movi	r7,1
    a5f0:	003fe306 	br	a580 <__divsi3+0x8>
    a5f4:	00c00044 	movi	r3,1
    a5f8:	003fee06 	br	a5b4 <__divsi3+0x3c>

0000a5fc <__modsi3>:
    a5fc:	20001716 	blt	r4,zero,a65c <__modsi3+0x60>
    a600:	000f883a 	mov	r7,zero
    a604:	2005883a 	mov	r2,r4
    a608:	28001216 	blt	r5,zero,a654 <__modsi3+0x58>
    a60c:	2900162e 	bgeu	r5,r4,a668 <__modsi3+0x6c>
    a610:	01800804 	movi	r6,32
    a614:	00c00044 	movi	r3,1
    a618:	00000106 	br	a620 <__modsi3+0x24>
    a61c:	30000a26 	beq	r6,zero,a648 <__modsi3+0x4c>
    a620:	294b883a 	add	r5,r5,r5
    a624:	31bfffc4 	addi	r6,r6,-1
    a628:	18c7883a 	add	r3,r3,r3
    a62c:	293ffb36 	bltu	r5,r4,a61c <__modsi3+0x20>
    a630:	18000526 	beq	r3,zero,a648 <__modsi3+0x4c>
    a634:	1806d07a 	srli	r3,r3,1
    a638:	11400136 	bltu	r2,r5,a640 <__modsi3+0x44>
    a63c:	1145c83a 	sub	r2,r2,r5
    a640:	280ad07a 	srli	r5,r5,1
    a644:	183ffb1e 	bne	r3,zero,a634 <__modsi3+0x38>
    a648:	38000126 	beq	r7,zero,a650 <__modsi3+0x54>
    a64c:	0085c83a 	sub	r2,zero,r2
    a650:	f800283a 	ret
    a654:	014bc83a 	sub	r5,zero,r5
    a658:	003fec06 	br	a60c <__modsi3+0x10>
    a65c:	0109c83a 	sub	r4,zero,r4
    a660:	01c00044 	movi	r7,1
    a664:	003fe706 	br	a604 <__modsi3+0x8>
    a668:	00c00044 	movi	r3,1
    a66c:	003ff106 	br	a634 <__modsi3+0x38>

0000a670 <__udivsi3>:
    a670:	200d883a 	mov	r6,r4
    a674:	2900152e 	bgeu	r5,r4,a6cc <__udivsi3+0x5c>
    a678:	28001416 	blt	r5,zero,a6cc <__udivsi3+0x5c>
    a67c:	00800804 	movi	r2,32
    a680:	00c00044 	movi	r3,1
    a684:	00000206 	br	a690 <__udivsi3+0x20>
    a688:	10000e26 	beq	r2,zero,a6c4 <__udivsi3+0x54>
    a68c:	28000516 	blt	r5,zero,a6a4 <__udivsi3+0x34>
    a690:	294b883a 	add	r5,r5,r5
    a694:	10bfffc4 	addi	r2,r2,-1
    a698:	18c7883a 	add	r3,r3,r3
    a69c:	293ffa36 	bltu	r5,r4,a688 <__udivsi3+0x18>
    a6a0:	18000826 	beq	r3,zero,a6c4 <__udivsi3+0x54>
    a6a4:	0005883a 	mov	r2,zero
    a6a8:	31400236 	bltu	r6,r5,a6b4 <__udivsi3+0x44>
    a6ac:	314dc83a 	sub	r6,r6,r5
    a6b0:	10c4b03a 	or	r2,r2,r3
    a6b4:	1806d07a 	srli	r3,r3,1
    a6b8:	280ad07a 	srli	r5,r5,1
    a6bc:	183ffa1e 	bne	r3,zero,a6a8 <__udivsi3+0x38>
    a6c0:	f800283a 	ret
    a6c4:	0005883a 	mov	r2,zero
    a6c8:	f800283a 	ret
    a6cc:	00c00044 	movi	r3,1
    a6d0:	003ff406 	br	a6a4 <__udivsi3+0x34>

0000a6d4 <__umodsi3>:
    a6d4:	2005883a 	mov	r2,r4
    a6d8:	2900122e 	bgeu	r5,r4,a724 <__umodsi3+0x50>
    a6dc:	28001116 	blt	r5,zero,a724 <__umodsi3+0x50>
    a6e0:	01800804 	movi	r6,32
    a6e4:	00c00044 	movi	r3,1
    a6e8:	00000206 	br	a6f4 <__umodsi3+0x20>
    a6ec:	30000c26 	beq	r6,zero,a720 <__umodsi3+0x4c>
    a6f0:	28000516 	blt	r5,zero,a708 <__umodsi3+0x34>
    a6f4:	294b883a 	add	r5,r5,r5
    a6f8:	31bfffc4 	addi	r6,r6,-1
    a6fc:	18c7883a 	add	r3,r3,r3
    a700:	293ffa36 	bltu	r5,r4,a6ec <__umodsi3+0x18>
    a704:	18000626 	beq	r3,zero,a720 <__umodsi3+0x4c>
    a708:	1806d07a 	srli	r3,r3,1
    a70c:	11400136 	bltu	r2,r5,a714 <__umodsi3+0x40>
    a710:	1145c83a 	sub	r2,r2,r5
    a714:	280ad07a 	srli	r5,r5,1
    a718:	183ffb1e 	bne	r3,zero,a708 <__umodsi3+0x34>
    a71c:	f800283a 	ret
    a720:	f800283a 	ret
    a724:	00c00044 	movi	r3,1
    a728:	003ff706 	br	a708 <__umodsi3+0x34>

0000a72c <__adddf3>:
    a72c:	02c00434 	movhi	r11,16
    a730:	5affffc4 	addi	r11,r11,-1
    a734:	2806d7fa 	srli	r3,r5,31
    a738:	2ad4703a 	and	r10,r5,r11
    a73c:	3ad2703a 	and	r9,r7,r11
    a740:	3804d53a 	srli	r2,r7,20
    a744:	3018d77a 	srli	r12,r6,29
    a748:	280ad53a 	srli	r5,r5,20
    a74c:	501490fa 	slli	r10,r10,3
    a750:	2010d77a 	srli	r8,r4,29
    a754:	481290fa 	slli	r9,r9,3
    a758:	380ed7fa 	srli	r7,r7,31
    a75c:	defffb04 	addi	sp,sp,-20
    a760:	dc800215 	stw	r18,8(sp)
    a764:	dc400115 	stw	r17,4(sp)
    a768:	dc000015 	stw	r16,0(sp)
    a76c:	dfc00415 	stw	ra,16(sp)
    a770:	dcc00315 	stw	r19,12(sp)
    a774:	1c803fcc 	andi	r18,r3,255
    a778:	2c01ffcc 	andi	r16,r5,2047
    a77c:	5210b03a 	or	r8,r10,r8
    a780:	202290fa 	slli	r17,r4,3
    a784:	1081ffcc 	andi	r2,r2,2047
    a788:	4b12b03a 	or	r9,r9,r12
    a78c:	300c90fa 	slli	r6,r6,3
    a790:	91c07526 	beq	r18,r7,a968 <__adddf3+0x23c>
    a794:	8087c83a 	sub	r3,r16,r2
    a798:	00c0ab0e 	bge	zero,r3,aa48 <__adddf3+0x31c>
    a79c:	10002a1e 	bne	r2,zero,a848 <__adddf3+0x11c>
    a7a0:	4984b03a 	or	r2,r9,r6
    a7a4:	1000961e 	bne	r2,zero,aa00 <__adddf3+0x2d4>
    a7a8:	888001cc 	andi	r2,r17,7
    a7ac:	10000726 	beq	r2,zero,a7cc <__adddf3+0xa0>
    a7b0:	888003cc 	andi	r2,r17,15
    a7b4:	00c00104 	movi	r3,4
    a7b8:	10c00426 	beq	r2,r3,a7cc <__adddf3+0xa0>
    a7bc:	88c7883a 	add	r3,r17,r3
    a7c0:	1c63803a 	cmpltu	r17,r3,r17
    a7c4:	4451883a 	add	r8,r8,r17
    a7c8:	1823883a 	mov	r17,r3
    a7cc:	4080202c 	andhi	r2,r8,128
    a7d0:	10005926 	beq	r2,zero,a938 <__adddf3+0x20c>
    a7d4:	84000044 	addi	r16,r16,1
    a7d8:	0081ffc4 	movi	r2,2047
    a7dc:	8080ba26 	beq	r16,r2,aac8 <__adddf3+0x39c>
    a7e0:	00bfe034 	movhi	r2,65408
    a7e4:	10bfffc4 	addi	r2,r2,-1
    a7e8:	4090703a 	and	r8,r8,r2
    a7ec:	4004977a 	slli	r2,r8,29
    a7f0:	4010927a 	slli	r8,r8,9
    a7f4:	8822d0fa 	srli	r17,r17,3
    a7f8:	8401ffcc 	andi	r16,r16,2047
    a7fc:	4010d33a 	srli	r8,r8,12
    a800:	9007883a 	mov	r3,r18
    a804:	1444b03a 	or	r2,r2,r17
    a808:	8401ffcc 	andi	r16,r16,2047
    a80c:	8020953a 	slli	r16,r16,20
    a810:	18c03fcc 	andi	r3,r3,255
    a814:	01000434 	movhi	r4,16
    a818:	213fffc4 	addi	r4,r4,-1
    a81c:	180697fa 	slli	r3,r3,31
    a820:	4110703a 	and	r8,r8,r4
    a824:	4410b03a 	or	r8,r8,r16
    a828:	40c6b03a 	or	r3,r8,r3
    a82c:	dfc00417 	ldw	ra,16(sp)
    a830:	dcc00317 	ldw	r19,12(sp)
    a834:	dc800217 	ldw	r18,8(sp)
    a838:	dc400117 	ldw	r17,4(sp)
    a83c:	dc000017 	ldw	r16,0(sp)
    a840:	dec00504 	addi	sp,sp,20
    a844:	f800283a 	ret
    a848:	0081ffc4 	movi	r2,2047
    a84c:	80bfd626 	beq	r16,r2,a7a8 <__adddf3+0x7c>
    a850:	4a402034 	orhi	r9,r9,128
    a854:	00800e04 	movi	r2,56
    a858:	10c09f16 	blt	r2,r3,aad8 <__adddf3+0x3ac>
    a85c:	008007c4 	movi	r2,31
    a860:	10c0c216 	blt	r2,r3,ab6c <__adddf3+0x440>
    a864:	00800804 	movi	r2,32
    a868:	10c5c83a 	sub	r2,r2,r3
    a86c:	488a983a 	sll	r5,r9,r2
    a870:	30c8d83a 	srl	r4,r6,r3
    a874:	3084983a 	sll	r2,r6,r2
    a878:	48c6d83a 	srl	r3,r9,r3
    a87c:	290cb03a 	or	r6,r5,r4
    a880:	1004c03a 	cmpne	r2,r2,zero
    a884:	308cb03a 	or	r6,r6,r2
    a888:	898dc83a 	sub	r6,r17,r6
    a88c:	89a3803a 	cmpltu	r17,r17,r6
    a890:	40d1c83a 	sub	r8,r8,r3
    a894:	4451c83a 	sub	r8,r8,r17
    a898:	3023883a 	mov	r17,r6
    a89c:	4080202c 	andhi	r2,r8,128
    a8a0:	10002326 	beq	r2,zero,a930 <__adddf3+0x204>
    a8a4:	04c02034 	movhi	r19,128
    a8a8:	9cffffc4 	addi	r19,r19,-1
    a8ac:	44e6703a 	and	r19,r8,r19
    a8b0:	98007626 	beq	r19,zero,aa8c <__adddf3+0x360>
    a8b4:	9809883a 	mov	r4,r19
    a8b8:	000cd300 	call	cd30 <__clzsi2>
    a8bc:	10fffe04 	addi	r3,r2,-8
    a8c0:	010007c4 	movi	r4,31
    a8c4:	20c07716 	blt	r4,r3,aaa4 <__adddf3+0x378>
    a8c8:	00800804 	movi	r2,32
    a8cc:	10c5c83a 	sub	r2,r2,r3
    a8d0:	8884d83a 	srl	r2,r17,r2
    a8d4:	98d0983a 	sll	r8,r19,r3
    a8d8:	88e2983a 	sll	r17,r17,r3
    a8dc:	1204b03a 	or	r2,r2,r8
    a8e0:	1c007416 	blt	r3,r16,aab4 <__adddf3+0x388>
    a8e4:	1c21c83a 	sub	r16,r3,r16
    a8e8:	82000044 	addi	r8,r16,1
    a8ec:	00c007c4 	movi	r3,31
    a8f0:	1a009116 	blt	r3,r8,ab38 <__adddf3+0x40c>
    a8f4:	00c00804 	movi	r3,32
    a8f8:	1a07c83a 	sub	r3,r3,r8
    a8fc:	8a08d83a 	srl	r4,r17,r8
    a900:	88e2983a 	sll	r17,r17,r3
    a904:	10c6983a 	sll	r3,r2,r3
    a908:	1210d83a 	srl	r8,r2,r8
    a90c:	8804c03a 	cmpne	r2,r17,zero
    a910:	1906b03a 	or	r3,r3,r4
    a914:	18a2b03a 	or	r17,r3,r2
    a918:	0021883a 	mov	r16,zero
    a91c:	003fa206 	br	a7a8 <__adddf3+0x7c>
    a920:	1890b03a 	or	r8,r3,r2
    a924:	40017d26 	beq	r8,zero,af1c <__adddf3+0x7f0>
    a928:	1011883a 	mov	r8,r2
    a92c:	1823883a 	mov	r17,r3
    a930:	888001cc 	andi	r2,r17,7
    a934:	103f9e1e 	bne	r2,zero,a7b0 <__adddf3+0x84>
    a938:	4004977a 	slli	r2,r8,29
    a93c:	8822d0fa 	srli	r17,r17,3
    a940:	4010d0fa 	srli	r8,r8,3
    a944:	9007883a 	mov	r3,r18
    a948:	1444b03a 	or	r2,r2,r17
    a94c:	0101ffc4 	movi	r4,2047
    a950:	81002426 	beq	r16,r4,a9e4 <__adddf3+0x2b8>
    a954:	8120703a 	and	r16,r16,r4
    a958:	01000434 	movhi	r4,16
    a95c:	213fffc4 	addi	r4,r4,-1
    a960:	4110703a 	and	r8,r8,r4
    a964:	003fa806 	br	a808 <__adddf3+0xdc>
    a968:	8089c83a 	sub	r4,r16,r2
    a96c:	01005e0e 	bge	zero,r4,aae8 <__adddf3+0x3bc>
    a970:	10002b26 	beq	r2,zero,aa20 <__adddf3+0x2f4>
    a974:	0081ffc4 	movi	r2,2047
    a978:	80bf8b26 	beq	r16,r2,a7a8 <__adddf3+0x7c>
    a97c:	4a402034 	orhi	r9,r9,128
    a980:	00800e04 	movi	r2,56
    a984:	1100a40e 	bge	r2,r4,ac18 <__adddf3+0x4ec>
    a988:	498cb03a 	or	r6,r9,r6
    a98c:	300ac03a 	cmpne	r5,r6,zero
    a990:	0013883a 	mov	r9,zero
    a994:	2c4b883a 	add	r5,r5,r17
    a998:	2c63803a 	cmpltu	r17,r5,r17
    a99c:	4a11883a 	add	r8,r9,r8
    a9a0:	8a11883a 	add	r8,r17,r8
    a9a4:	2823883a 	mov	r17,r5
    a9a8:	4080202c 	andhi	r2,r8,128
    a9ac:	103fe026 	beq	r2,zero,a930 <__adddf3+0x204>
    a9b0:	84000044 	addi	r16,r16,1
    a9b4:	0081ffc4 	movi	r2,2047
    a9b8:	8080d226 	beq	r16,r2,ad04 <__adddf3+0x5d8>
    a9bc:	00bfe034 	movhi	r2,65408
    a9c0:	10bfffc4 	addi	r2,r2,-1
    a9c4:	4090703a 	and	r8,r8,r2
    a9c8:	880ad07a 	srli	r5,r17,1
    a9cc:	400897fa 	slli	r4,r8,31
    a9d0:	88c0004c 	andi	r3,r17,1
    a9d4:	28e2b03a 	or	r17,r5,r3
    a9d8:	4010d07a 	srli	r8,r8,1
    a9dc:	2462b03a 	or	r17,r4,r17
    a9e0:	003f7106 	br	a7a8 <__adddf3+0x7c>
    a9e4:	4088b03a 	or	r4,r8,r2
    a9e8:	20014526 	beq	r4,zero,af00 <__adddf3+0x7d4>
    a9ec:	01000434 	movhi	r4,16
    a9f0:	42000234 	orhi	r8,r8,8
    a9f4:	213fffc4 	addi	r4,r4,-1
    a9f8:	4110703a 	and	r8,r8,r4
    a9fc:	003f8206 	br	a808 <__adddf3+0xdc>
    aa00:	18ffffc4 	addi	r3,r3,-1
    aa04:	1800491e 	bne	r3,zero,ab2c <__adddf3+0x400>
    aa08:	898bc83a 	sub	r5,r17,r6
    aa0c:	8963803a 	cmpltu	r17,r17,r5
    aa10:	4251c83a 	sub	r8,r8,r9
    aa14:	4451c83a 	sub	r8,r8,r17
    aa18:	2823883a 	mov	r17,r5
    aa1c:	003f9f06 	br	a89c <__adddf3+0x170>
    aa20:	4984b03a 	or	r2,r9,r6
    aa24:	103f6026 	beq	r2,zero,a7a8 <__adddf3+0x7c>
    aa28:	213fffc4 	addi	r4,r4,-1
    aa2c:	2000931e 	bne	r4,zero,ac7c <__adddf3+0x550>
    aa30:	898d883a 	add	r6,r17,r6
    aa34:	3463803a 	cmpltu	r17,r6,r17
    aa38:	4251883a 	add	r8,r8,r9
    aa3c:	8a11883a 	add	r8,r17,r8
    aa40:	3023883a 	mov	r17,r6
    aa44:	003fd806 	br	a9a8 <__adddf3+0x27c>
    aa48:	1800541e 	bne	r3,zero,ab9c <__adddf3+0x470>
    aa4c:	80800044 	addi	r2,r16,1
    aa50:	1081ffcc 	andi	r2,r2,2047
    aa54:	00c00044 	movi	r3,1
    aa58:	1880a00e 	bge	r3,r2,acdc <__adddf3+0x5b0>
    aa5c:	8989c83a 	sub	r4,r17,r6
    aa60:	8905803a 	cmpltu	r2,r17,r4
    aa64:	4267c83a 	sub	r19,r8,r9
    aa68:	98a7c83a 	sub	r19,r19,r2
    aa6c:	9880202c 	andhi	r2,r19,128
    aa70:	10006326 	beq	r2,zero,ac00 <__adddf3+0x4d4>
    aa74:	3463c83a 	sub	r17,r6,r17
    aa78:	4a07c83a 	sub	r3,r9,r8
    aa7c:	344d803a 	cmpltu	r6,r6,r17
    aa80:	19a7c83a 	sub	r19,r3,r6
    aa84:	3825883a 	mov	r18,r7
    aa88:	983f8a1e 	bne	r19,zero,a8b4 <__adddf3+0x188>
    aa8c:	8809883a 	mov	r4,r17
    aa90:	000cd300 	call	cd30 <__clzsi2>
    aa94:	10800804 	addi	r2,r2,32
    aa98:	10fffe04 	addi	r3,r2,-8
    aa9c:	010007c4 	movi	r4,31
    aaa0:	20ff890e 	bge	r4,r3,a8c8 <__adddf3+0x19c>
    aaa4:	10bff604 	addi	r2,r2,-40
    aaa8:	8884983a 	sll	r2,r17,r2
    aaac:	0023883a 	mov	r17,zero
    aab0:	1c3f8c0e 	bge	r3,r16,a8e4 <__adddf3+0x1b8>
    aab4:	023fe034 	movhi	r8,65408
    aab8:	423fffc4 	addi	r8,r8,-1
    aabc:	80e1c83a 	sub	r16,r16,r3
    aac0:	1210703a 	and	r8,r2,r8
    aac4:	003f3806 	br	a7a8 <__adddf3+0x7c>
    aac8:	9007883a 	mov	r3,r18
    aacc:	0011883a 	mov	r8,zero
    aad0:	0005883a 	mov	r2,zero
    aad4:	003f4c06 	br	a808 <__adddf3+0xdc>
    aad8:	498cb03a 	or	r6,r9,r6
    aadc:	300cc03a 	cmpne	r6,r6,zero
    aae0:	0007883a 	mov	r3,zero
    aae4:	003f6806 	br	a888 <__adddf3+0x15c>
    aae8:	20009c1e 	bne	r4,zero,ad5c <__adddf3+0x630>
    aaec:	80800044 	addi	r2,r16,1
    aaf0:	1141ffcc 	andi	r5,r2,2047
    aaf4:	01000044 	movi	r4,1
    aaf8:	2140670e 	bge	r4,r5,ac98 <__adddf3+0x56c>
    aafc:	0101ffc4 	movi	r4,2047
    ab00:	11007f26 	beq	r2,r4,ad00 <__adddf3+0x5d4>
    ab04:	898d883a 	add	r6,r17,r6
    ab08:	4247883a 	add	r3,r8,r9
    ab0c:	3451803a 	cmpltu	r8,r6,r17
    ab10:	40d1883a 	add	r8,r8,r3
    ab14:	402297fa 	slli	r17,r8,31
    ab18:	300cd07a 	srli	r6,r6,1
    ab1c:	4010d07a 	srli	r8,r8,1
    ab20:	1021883a 	mov	r16,r2
    ab24:	89a2b03a 	or	r17,r17,r6
    ab28:	003f1f06 	br	a7a8 <__adddf3+0x7c>
    ab2c:	0081ffc4 	movi	r2,2047
    ab30:	80bf481e 	bne	r16,r2,a854 <__adddf3+0x128>
    ab34:	003f1c06 	br	a7a8 <__adddf3+0x7c>
    ab38:	843ff844 	addi	r16,r16,-31
    ab3c:	01000804 	movi	r4,32
    ab40:	1406d83a 	srl	r3,r2,r16
    ab44:	41005026 	beq	r8,r4,ac88 <__adddf3+0x55c>
    ab48:	01001004 	movi	r4,64
    ab4c:	2211c83a 	sub	r8,r4,r8
    ab50:	1204983a 	sll	r2,r2,r8
    ab54:	88a2b03a 	or	r17,r17,r2
    ab58:	8822c03a 	cmpne	r17,r17,zero
    ab5c:	1c62b03a 	or	r17,r3,r17
    ab60:	0011883a 	mov	r8,zero
    ab64:	0021883a 	mov	r16,zero
    ab68:	003f7106 	br	a930 <__adddf3+0x204>
    ab6c:	193ff804 	addi	r4,r3,-32
    ab70:	00800804 	movi	r2,32
    ab74:	4908d83a 	srl	r4,r9,r4
    ab78:	18804526 	beq	r3,r2,ac90 <__adddf3+0x564>
    ab7c:	00801004 	movi	r2,64
    ab80:	10c5c83a 	sub	r2,r2,r3
    ab84:	4886983a 	sll	r3,r9,r2
    ab88:	198cb03a 	or	r6,r3,r6
    ab8c:	300cc03a 	cmpne	r6,r6,zero
    ab90:	218cb03a 	or	r6,r4,r6
    ab94:	0007883a 	mov	r3,zero
    ab98:	003f3b06 	br	a888 <__adddf3+0x15c>
    ab9c:	80002a26 	beq	r16,zero,ac48 <__adddf3+0x51c>
    aba0:	0101ffc4 	movi	r4,2047
    aba4:	11006826 	beq	r2,r4,ad48 <__adddf3+0x61c>
    aba8:	00c7c83a 	sub	r3,zero,r3
    abac:	42002034 	orhi	r8,r8,128
    abb0:	01000e04 	movi	r4,56
    abb4:	20c07c16 	blt	r4,r3,ada8 <__adddf3+0x67c>
    abb8:	010007c4 	movi	r4,31
    abbc:	20c0da16 	blt	r4,r3,af28 <__adddf3+0x7fc>
    abc0:	01000804 	movi	r4,32
    abc4:	20c9c83a 	sub	r4,r4,r3
    abc8:	4114983a 	sll	r10,r8,r4
    abcc:	88cad83a 	srl	r5,r17,r3
    abd0:	8908983a 	sll	r4,r17,r4
    abd4:	40c6d83a 	srl	r3,r8,r3
    abd8:	5162b03a 	or	r17,r10,r5
    abdc:	2008c03a 	cmpne	r4,r4,zero
    abe0:	8922b03a 	or	r17,r17,r4
    abe4:	3463c83a 	sub	r17,r6,r17
    abe8:	48c7c83a 	sub	r3,r9,r3
    abec:	344d803a 	cmpltu	r6,r6,r17
    abf0:	1991c83a 	sub	r8,r3,r6
    abf4:	1021883a 	mov	r16,r2
    abf8:	3825883a 	mov	r18,r7
    abfc:	003f2706 	br	a89c <__adddf3+0x170>
    ac00:	24d0b03a 	or	r8,r4,r19
    ac04:	40001b1e 	bne	r8,zero,ac74 <__adddf3+0x548>
    ac08:	0005883a 	mov	r2,zero
    ac0c:	0007883a 	mov	r3,zero
    ac10:	0021883a 	mov	r16,zero
    ac14:	003f4d06 	br	a94c <__adddf3+0x220>
    ac18:	008007c4 	movi	r2,31
    ac1c:	11003c16 	blt	r2,r4,ad10 <__adddf3+0x5e4>
    ac20:	00800804 	movi	r2,32
    ac24:	1105c83a 	sub	r2,r2,r4
    ac28:	488e983a 	sll	r7,r9,r2
    ac2c:	310ad83a 	srl	r5,r6,r4
    ac30:	3084983a 	sll	r2,r6,r2
    ac34:	4912d83a 	srl	r9,r9,r4
    ac38:	394ab03a 	or	r5,r7,r5
    ac3c:	1004c03a 	cmpne	r2,r2,zero
    ac40:	288ab03a 	or	r5,r5,r2
    ac44:	003f5306 	br	a994 <__adddf3+0x268>
    ac48:	4448b03a 	or	r4,r8,r17
    ac4c:	20003e26 	beq	r4,zero,ad48 <__adddf3+0x61c>
    ac50:	00c6303a 	nor	r3,zero,r3
    ac54:	18003a1e 	bne	r3,zero,ad40 <__adddf3+0x614>
    ac58:	3463c83a 	sub	r17,r6,r17
    ac5c:	4a07c83a 	sub	r3,r9,r8
    ac60:	344d803a 	cmpltu	r6,r6,r17
    ac64:	1991c83a 	sub	r8,r3,r6
    ac68:	1021883a 	mov	r16,r2
    ac6c:	3825883a 	mov	r18,r7
    ac70:	003f0a06 	br	a89c <__adddf3+0x170>
    ac74:	2023883a 	mov	r17,r4
    ac78:	003f0d06 	br	a8b0 <__adddf3+0x184>
    ac7c:	0081ffc4 	movi	r2,2047
    ac80:	80bf3f1e 	bne	r16,r2,a980 <__adddf3+0x254>
    ac84:	003ec806 	br	a7a8 <__adddf3+0x7c>
    ac88:	0005883a 	mov	r2,zero
    ac8c:	003fb106 	br	ab54 <__adddf3+0x428>
    ac90:	0007883a 	mov	r3,zero
    ac94:	003fbc06 	br	ab88 <__adddf3+0x45c>
    ac98:	4444b03a 	or	r2,r8,r17
    ac9c:	8000871e 	bne	r16,zero,aebc <__adddf3+0x790>
    aca0:	1000ba26 	beq	r2,zero,af8c <__adddf3+0x860>
    aca4:	4984b03a 	or	r2,r9,r6
    aca8:	103ebf26 	beq	r2,zero,a7a8 <__adddf3+0x7c>
    acac:	8985883a 	add	r2,r17,r6
    acb0:	4247883a 	add	r3,r8,r9
    acb4:	1451803a 	cmpltu	r8,r2,r17
    acb8:	40d1883a 	add	r8,r8,r3
    acbc:	40c0202c 	andhi	r3,r8,128
    acc0:	1023883a 	mov	r17,r2
    acc4:	183f1a26 	beq	r3,zero,a930 <__adddf3+0x204>
    acc8:	00bfe034 	movhi	r2,65408
    accc:	10bfffc4 	addi	r2,r2,-1
    acd0:	2021883a 	mov	r16,r4
    acd4:	4090703a 	and	r8,r8,r2
    acd8:	003eb306 	br	a7a8 <__adddf3+0x7c>
    acdc:	4444b03a 	or	r2,r8,r17
    ace0:	8000291e 	bne	r16,zero,ad88 <__adddf3+0x65c>
    ace4:	10004b1e 	bne	r2,zero,ae14 <__adddf3+0x6e8>
    ace8:	4990b03a 	or	r8,r9,r6
    acec:	40008b26 	beq	r8,zero,af1c <__adddf3+0x7f0>
    acf0:	4811883a 	mov	r8,r9
    acf4:	3023883a 	mov	r17,r6
    acf8:	3825883a 	mov	r18,r7
    acfc:	003eaa06 	br	a7a8 <__adddf3+0x7c>
    ad00:	1021883a 	mov	r16,r2
    ad04:	0011883a 	mov	r8,zero
    ad08:	0005883a 	mov	r2,zero
    ad0c:	003f0f06 	br	a94c <__adddf3+0x220>
    ad10:	217ff804 	addi	r5,r4,-32
    ad14:	00800804 	movi	r2,32
    ad18:	494ad83a 	srl	r5,r9,r5
    ad1c:	20807d26 	beq	r4,r2,af14 <__adddf3+0x7e8>
    ad20:	00801004 	movi	r2,64
    ad24:	1109c83a 	sub	r4,r2,r4
    ad28:	4912983a 	sll	r9,r9,r4
    ad2c:	498cb03a 	or	r6,r9,r6
    ad30:	300cc03a 	cmpne	r6,r6,zero
    ad34:	298ab03a 	or	r5,r5,r6
    ad38:	0013883a 	mov	r9,zero
    ad3c:	003f1506 	br	a994 <__adddf3+0x268>
    ad40:	0101ffc4 	movi	r4,2047
    ad44:	113f9a1e 	bne	r2,r4,abb0 <__adddf3+0x484>
    ad48:	4811883a 	mov	r8,r9
    ad4c:	3023883a 	mov	r17,r6
    ad50:	1021883a 	mov	r16,r2
    ad54:	3825883a 	mov	r18,r7
    ad58:	003e9306 	br	a7a8 <__adddf3+0x7c>
    ad5c:	8000161e 	bne	r16,zero,adb8 <__adddf3+0x68c>
    ad60:	444ab03a 	or	r5,r8,r17
    ad64:	28005126 	beq	r5,zero,aeac <__adddf3+0x780>
    ad68:	0108303a 	nor	r4,zero,r4
    ad6c:	20004d1e 	bne	r4,zero,aea4 <__adddf3+0x778>
    ad70:	89a3883a 	add	r17,r17,r6
    ad74:	4253883a 	add	r9,r8,r9
    ad78:	898d803a 	cmpltu	r6,r17,r6
    ad7c:	3251883a 	add	r8,r6,r9
    ad80:	1021883a 	mov	r16,r2
    ad84:	003f0806 	br	a9a8 <__adddf3+0x27c>
    ad88:	1000301e 	bne	r2,zero,ae4c <__adddf3+0x720>
    ad8c:	4984b03a 	or	r2,r9,r6
    ad90:	10007126 	beq	r2,zero,af58 <__adddf3+0x82c>
    ad94:	4811883a 	mov	r8,r9
    ad98:	3023883a 	mov	r17,r6
    ad9c:	3825883a 	mov	r18,r7
    ada0:	0401ffc4 	movi	r16,2047
    ada4:	003e8006 	br	a7a8 <__adddf3+0x7c>
    ada8:	4462b03a 	or	r17,r8,r17
    adac:	8822c03a 	cmpne	r17,r17,zero
    adb0:	0007883a 	mov	r3,zero
    adb4:	003f8b06 	br	abe4 <__adddf3+0x4b8>
    adb8:	0141ffc4 	movi	r5,2047
    adbc:	11403b26 	beq	r2,r5,aeac <__adddf3+0x780>
    adc0:	0109c83a 	sub	r4,zero,r4
    adc4:	42002034 	orhi	r8,r8,128
    adc8:	01400e04 	movi	r5,56
    adcc:	29006716 	blt	r5,r4,af6c <__adddf3+0x840>
    add0:	014007c4 	movi	r5,31
    add4:	29007016 	blt	r5,r4,af98 <__adddf3+0x86c>
    add8:	01400804 	movi	r5,32
    addc:	290bc83a 	sub	r5,r5,r4
    ade0:	4154983a 	sll	r10,r8,r5
    ade4:	890ed83a 	srl	r7,r17,r4
    ade8:	894a983a 	sll	r5,r17,r5
    adec:	4108d83a 	srl	r4,r8,r4
    adf0:	51e2b03a 	or	r17,r10,r7
    adf4:	280ac03a 	cmpne	r5,r5,zero
    adf8:	8962b03a 	or	r17,r17,r5
    adfc:	89a3883a 	add	r17,r17,r6
    ae00:	2253883a 	add	r9,r4,r9
    ae04:	898d803a 	cmpltu	r6,r17,r6
    ae08:	3251883a 	add	r8,r6,r9
    ae0c:	1021883a 	mov	r16,r2
    ae10:	003ee506 	br	a9a8 <__adddf3+0x27c>
    ae14:	4984b03a 	or	r2,r9,r6
    ae18:	103e6326 	beq	r2,zero,a7a8 <__adddf3+0x7c>
    ae1c:	8987c83a 	sub	r3,r17,r6
    ae20:	88c9803a 	cmpltu	r4,r17,r3
    ae24:	4245c83a 	sub	r2,r8,r9
    ae28:	1105c83a 	sub	r2,r2,r4
    ae2c:	1100202c 	andhi	r4,r2,128
    ae30:	203ebb26 	beq	r4,zero,a920 <__adddf3+0x1f4>
    ae34:	3463c83a 	sub	r17,r6,r17
    ae38:	4a07c83a 	sub	r3,r9,r8
    ae3c:	344d803a 	cmpltu	r6,r6,r17
    ae40:	1991c83a 	sub	r8,r3,r6
    ae44:	3825883a 	mov	r18,r7
    ae48:	003e5706 	br	a7a8 <__adddf3+0x7c>
    ae4c:	4984b03a 	or	r2,r9,r6
    ae50:	10002e26 	beq	r2,zero,af0c <__adddf3+0x7e0>
    ae54:	4004d0fa 	srli	r2,r8,3
    ae58:	8822d0fa 	srli	r17,r17,3
    ae5c:	4010977a 	slli	r8,r8,29
    ae60:	10c0022c 	andhi	r3,r2,8
    ae64:	4462b03a 	or	r17,r8,r17
    ae68:	18000826 	beq	r3,zero,ae8c <__adddf3+0x760>
    ae6c:	4808d0fa 	srli	r4,r9,3
    ae70:	20c0022c 	andhi	r3,r4,8
    ae74:	1800051e 	bne	r3,zero,ae8c <__adddf3+0x760>
    ae78:	300cd0fa 	srli	r6,r6,3
    ae7c:	4806977a 	slli	r3,r9,29
    ae80:	2005883a 	mov	r2,r4
    ae84:	3825883a 	mov	r18,r7
    ae88:	19a2b03a 	or	r17,r3,r6
    ae8c:	8810d77a 	srli	r8,r17,29
    ae90:	100490fa 	slli	r2,r2,3
    ae94:	882290fa 	slli	r17,r17,3
    ae98:	0401ffc4 	movi	r16,2047
    ae9c:	4090b03a 	or	r8,r8,r2
    aea0:	003e4106 	br	a7a8 <__adddf3+0x7c>
    aea4:	0141ffc4 	movi	r5,2047
    aea8:	117fc71e 	bne	r2,r5,adc8 <__adddf3+0x69c>
    aeac:	4811883a 	mov	r8,r9
    aeb0:	3023883a 	mov	r17,r6
    aeb4:	1021883a 	mov	r16,r2
    aeb8:	003e3b06 	br	a7a8 <__adddf3+0x7c>
    aebc:	10002f26 	beq	r2,zero,af7c <__adddf3+0x850>
    aec0:	4984b03a 	or	r2,r9,r6
    aec4:	10001126 	beq	r2,zero,af0c <__adddf3+0x7e0>
    aec8:	4004d0fa 	srli	r2,r8,3
    aecc:	8822d0fa 	srli	r17,r17,3
    aed0:	4010977a 	slli	r8,r8,29
    aed4:	10c0022c 	andhi	r3,r2,8
    aed8:	4462b03a 	or	r17,r8,r17
    aedc:	183feb26 	beq	r3,zero,ae8c <__adddf3+0x760>
    aee0:	4808d0fa 	srli	r4,r9,3
    aee4:	20c0022c 	andhi	r3,r4,8
    aee8:	183fe81e 	bne	r3,zero,ae8c <__adddf3+0x760>
    aeec:	300cd0fa 	srli	r6,r6,3
    aef0:	4806977a 	slli	r3,r9,29
    aef4:	2005883a 	mov	r2,r4
    aef8:	19a2b03a 	or	r17,r3,r6
    aefc:	003fe306 	br	ae8c <__adddf3+0x760>
    af00:	0011883a 	mov	r8,zero
    af04:	0005883a 	mov	r2,zero
    af08:	003e3f06 	br	a808 <__adddf3+0xdc>
    af0c:	0401ffc4 	movi	r16,2047
    af10:	003e2506 	br	a7a8 <__adddf3+0x7c>
    af14:	0013883a 	mov	r9,zero
    af18:	003f8406 	br	ad2c <__adddf3+0x600>
    af1c:	0005883a 	mov	r2,zero
    af20:	0007883a 	mov	r3,zero
    af24:	003e8906 	br	a94c <__adddf3+0x220>
    af28:	197ff804 	addi	r5,r3,-32
    af2c:	01000804 	movi	r4,32
    af30:	414ad83a 	srl	r5,r8,r5
    af34:	19002426 	beq	r3,r4,afc8 <__adddf3+0x89c>
    af38:	01001004 	movi	r4,64
    af3c:	20c7c83a 	sub	r3,r4,r3
    af40:	40c6983a 	sll	r3,r8,r3
    af44:	1c46b03a 	or	r3,r3,r17
    af48:	1806c03a 	cmpne	r3,r3,zero
    af4c:	28e2b03a 	or	r17,r5,r3
    af50:	0007883a 	mov	r3,zero
    af54:	003f2306 	br	abe4 <__adddf3+0x4b8>
    af58:	0007883a 	mov	r3,zero
    af5c:	5811883a 	mov	r8,r11
    af60:	00bfffc4 	movi	r2,-1
    af64:	0401ffc4 	movi	r16,2047
    af68:	003e7806 	br	a94c <__adddf3+0x220>
    af6c:	4462b03a 	or	r17,r8,r17
    af70:	8822c03a 	cmpne	r17,r17,zero
    af74:	0009883a 	mov	r4,zero
    af78:	003fa006 	br	adfc <__adddf3+0x6d0>
    af7c:	4811883a 	mov	r8,r9
    af80:	3023883a 	mov	r17,r6
    af84:	0401ffc4 	movi	r16,2047
    af88:	003e0706 	br	a7a8 <__adddf3+0x7c>
    af8c:	4811883a 	mov	r8,r9
    af90:	3023883a 	mov	r17,r6
    af94:	003e0406 	br	a7a8 <__adddf3+0x7c>
    af98:	21fff804 	addi	r7,r4,-32
    af9c:	01400804 	movi	r5,32
    afa0:	41ced83a 	srl	r7,r8,r7
    afa4:	21400a26 	beq	r4,r5,afd0 <__adddf3+0x8a4>
    afa8:	01401004 	movi	r5,64
    afac:	2909c83a 	sub	r4,r5,r4
    afb0:	4108983a 	sll	r4,r8,r4
    afb4:	2448b03a 	or	r4,r4,r17
    afb8:	2008c03a 	cmpne	r4,r4,zero
    afbc:	3922b03a 	or	r17,r7,r4
    afc0:	0009883a 	mov	r4,zero
    afc4:	003f8d06 	br	adfc <__adddf3+0x6d0>
    afc8:	0007883a 	mov	r3,zero
    afcc:	003fdd06 	br	af44 <__adddf3+0x818>
    afd0:	0009883a 	mov	r4,zero
    afd4:	003ff706 	br	afb4 <__adddf3+0x888>

0000afd8 <__divdf3>:
    afd8:	defff204 	addi	sp,sp,-56
    afdc:	dd400915 	stw	r21,36(sp)
    afe0:	282ad53a 	srli	r21,r5,20
    afe4:	dd000815 	stw	r20,32(sp)
    afe8:	2828d7fa 	srli	r20,r5,31
    afec:	dc000415 	stw	r16,16(sp)
    aff0:	04000434 	movhi	r16,16
    aff4:	df000c15 	stw	fp,48(sp)
    aff8:	843fffc4 	addi	r16,r16,-1
    affc:	dfc00d15 	stw	ra,52(sp)
    b000:	ddc00b15 	stw	r23,44(sp)
    b004:	dd800a15 	stw	r22,40(sp)
    b008:	dcc00715 	stw	r19,28(sp)
    b00c:	dc800615 	stw	r18,24(sp)
    b010:	dc400515 	stw	r17,20(sp)
    b014:	ad41ffcc 	andi	r21,r21,2047
    b018:	2c20703a 	and	r16,r5,r16
    b01c:	a7003fcc 	andi	fp,r20,255
    b020:	a8006126 	beq	r21,zero,b1a8 <__divdf3+0x1d0>
    b024:	0081ffc4 	movi	r2,2047
    b028:	2025883a 	mov	r18,r4
    b02c:	a8803726 	beq	r21,r2,b10c <__divdf3+0x134>
    b030:	80800434 	orhi	r2,r16,16
    b034:	100490fa 	slli	r2,r2,3
    b038:	2020d77a 	srli	r16,r4,29
    b03c:	202490fa 	slli	r18,r4,3
    b040:	ad7f0044 	addi	r21,r21,-1023
    b044:	80a0b03a 	or	r16,r16,r2
    b048:	0027883a 	mov	r19,zero
    b04c:	0013883a 	mov	r9,zero
    b050:	3804d53a 	srli	r2,r7,20
    b054:	382cd7fa 	srli	r22,r7,31
    b058:	04400434 	movhi	r17,16
    b05c:	8c7fffc4 	addi	r17,r17,-1
    b060:	1081ffcc 	andi	r2,r2,2047
    b064:	3011883a 	mov	r8,r6
    b068:	3c62703a 	and	r17,r7,r17
    b06c:	b5c03fcc 	andi	r23,r22,255
    b070:	10006c26 	beq	r2,zero,b224 <__divdf3+0x24c>
    b074:	00c1ffc4 	movi	r3,2047
    b078:	10c06426 	beq	r2,r3,b20c <__divdf3+0x234>
    b07c:	88c00434 	orhi	r3,r17,16
    b080:	180690fa 	slli	r3,r3,3
    b084:	3022d77a 	srli	r17,r6,29
    b088:	301090fa 	slli	r8,r6,3
    b08c:	10bf0044 	addi	r2,r2,-1023
    b090:	88e2b03a 	or	r17,r17,r3
    b094:	000f883a 	mov	r7,zero
    b098:	a58cf03a 	xor	r6,r20,r22
    b09c:	3cc8b03a 	or	r4,r7,r19
    b0a0:	a8abc83a 	sub	r21,r21,r2
    b0a4:	008003c4 	movi	r2,15
    b0a8:	3007883a 	mov	r3,r6
    b0ac:	34c03fcc 	andi	r19,r6,255
    b0b0:	11009036 	bltu	r2,r4,b2f4 <__divdf3+0x31c>
    b0b4:	200890ba 	slli	r4,r4,2
    b0b8:	00800074 	movhi	r2,1
    b0bc:	10ac3304 	addi	r2,r2,-20276
    b0c0:	2089883a 	add	r4,r4,r2
    b0c4:	20800017 	ldw	r2,0(r4)
    b0c8:	1000683a 	jmp	r2
    b0cc:	0000b2f4 	movhi	zero,715
    b0d0:	0000b144 	movi	zero,709
    b0d4:	0000b2e4 	muli	zero,zero,715
    b0d8:	0000b138 	rdprs	zero,zero,708
    b0dc:	0000b2e4 	muli	zero,zero,715
    b0e0:	0000b2b8 	rdprs	zero,zero,714
    b0e4:	0000b2e4 	muli	zero,zero,715
    b0e8:	0000b138 	rdprs	zero,zero,708
    b0ec:	0000b144 	movi	zero,709
    b0f0:	0000b144 	movi	zero,709
    b0f4:	0000b2b8 	rdprs	zero,zero,714
    b0f8:	0000b138 	rdprs	zero,zero,708
    b0fc:	0000b128 	cmpgeui	zero,zero,708
    b100:	0000b128 	cmpgeui	zero,zero,708
    b104:	0000b128 	cmpgeui	zero,zero,708
    b108:	0000b5d8 	cmpnei	zero,zero,727
    b10c:	2404b03a 	or	r2,r4,r16
    b110:	1000661e 	bne	r2,zero,b2ac <__divdf3+0x2d4>
    b114:	04c00204 	movi	r19,8
    b118:	0021883a 	mov	r16,zero
    b11c:	0025883a 	mov	r18,zero
    b120:	02400084 	movi	r9,2
    b124:	003fca06 	br	b050 <__divdf3+0x78>
    b128:	8023883a 	mov	r17,r16
    b12c:	9011883a 	mov	r8,r18
    b130:	e02f883a 	mov	r23,fp
    b134:	480f883a 	mov	r7,r9
    b138:	00800084 	movi	r2,2
    b13c:	3881311e 	bne	r7,r2,b604 <__divdf3+0x62c>
    b140:	b827883a 	mov	r19,r23
    b144:	98c0004c 	andi	r3,r19,1
    b148:	0081ffc4 	movi	r2,2047
    b14c:	000b883a 	mov	r5,zero
    b150:	0025883a 	mov	r18,zero
    b154:	1004953a 	slli	r2,r2,20
    b158:	18c03fcc 	andi	r3,r3,255
    b15c:	04400434 	movhi	r17,16
    b160:	8c7fffc4 	addi	r17,r17,-1
    b164:	180697fa 	slli	r3,r3,31
    b168:	2c4a703a 	and	r5,r5,r17
    b16c:	288ab03a 	or	r5,r5,r2
    b170:	28c6b03a 	or	r3,r5,r3
    b174:	9005883a 	mov	r2,r18
    b178:	dfc00d17 	ldw	ra,52(sp)
    b17c:	df000c17 	ldw	fp,48(sp)
    b180:	ddc00b17 	ldw	r23,44(sp)
    b184:	dd800a17 	ldw	r22,40(sp)
    b188:	dd400917 	ldw	r21,36(sp)
    b18c:	dd000817 	ldw	r20,32(sp)
    b190:	dcc00717 	ldw	r19,28(sp)
    b194:	dc800617 	ldw	r18,24(sp)
    b198:	dc400517 	ldw	r17,20(sp)
    b19c:	dc000417 	ldw	r16,16(sp)
    b1a0:	dec00e04 	addi	sp,sp,56
    b1a4:	f800283a 	ret
    b1a8:	2404b03a 	or	r2,r4,r16
    b1ac:	2027883a 	mov	r19,r4
    b1b0:	10003926 	beq	r2,zero,b298 <__divdf3+0x2c0>
    b1b4:	80012e26 	beq	r16,zero,b670 <__divdf3+0x698>
    b1b8:	8009883a 	mov	r4,r16
    b1bc:	d9800315 	stw	r6,12(sp)
    b1c0:	d9c00215 	stw	r7,8(sp)
    b1c4:	000cd300 	call	cd30 <__clzsi2>
    b1c8:	d9800317 	ldw	r6,12(sp)
    b1cc:	d9c00217 	ldw	r7,8(sp)
    b1d0:	113ffd44 	addi	r4,r2,-11
    b1d4:	00c00704 	movi	r3,28
    b1d8:	19012116 	blt	r3,r4,b660 <__divdf3+0x688>
    b1dc:	00c00744 	movi	r3,29
    b1e0:	147ffe04 	addi	r17,r2,-8
    b1e4:	1907c83a 	sub	r3,r3,r4
    b1e8:	8460983a 	sll	r16,r16,r17
    b1ec:	98c6d83a 	srl	r3,r19,r3
    b1f0:	9c64983a 	sll	r18,r19,r17
    b1f4:	1c20b03a 	or	r16,r3,r16
    b1f8:	1080fcc4 	addi	r2,r2,1011
    b1fc:	00abc83a 	sub	r21,zero,r2
    b200:	0027883a 	mov	r19,zero
    b204:	0013883a 	mov	r9,zero
    b208:	003f9106 	br	b050 <__divdf3+0x78>
    b20c:	3446b03a 	or	r3,r6,r17
    b210:	18001f1e 	bne	r3,zero,b290 <__divdf3+0x2b8>
    b214:	0023883a 	mov	r17,zero
    b218:	0011883a 	mov	r8,zero
    b21c:	01c00084 	movi	r7,2
    b220:	003f9d06 	br	b098 <__divdf3+0xc0>
    b224:	3446b03a 	or	r3,r6,r17
    b228:	18001526 	beq	r3,zero,b280 <__divdf3+0x2a8>
    b22c:	88011b26 	beq	r17,zero,b69c <__divdf3+0x6c4>
    b230:	8809883a 	mov	r4,r17
    b234:	d9800315 	stw	r6,12(sp)
    b238:	da400115 	stw	r9,4(sp)
    b23c:	000cd300 	call	cd30 <__clzsi2>
    b240:	d9800317 	ldw	r6,12(sp)
    b244:	da400117 	ldw	r9,4(sp)
    b248:	113ffd44 	addi	r4,r2,-11
    b24c:	00c00704 	movi	r3,28
    b250:	19010e16 	blt	r3,r4,b68c <__divdf3+0x6b4>
    b254:	00c00744 	movi	r3,29
    b258:	123ffe04 	addi	r8,r2,-8
    b25c:	1907c83a 	sub	r3,r3,r4
    b260:	8a22983a 	sll	r17,r17,r8
    b264:	30c6d83a 	srl	r3,r6,r3
    b268:	3210983a 	sll	r8,r6,r8
    b26c:	1c62b03a 	or	r17,r3,r17
    b270:	1080fcc4 	addi	r2,r2,1011
    b274:	0085c83a 	sub	r2,zero,r2
    b278:	000f883a 	mov	r7,zero
    b27c:	003f8606 	br	b098 <__divdf3+0xc0>
    b280:	0023883a 	mov	r17,zero
    b284:	0011883a 	mov	r8,zero
    b288:	01c00044 	movi	r7,1
    b28c:	003f8206 	br	b098 <__divdf3+0xc0>
    b290:	01c000c4 	movi	r7,3
    b294:	003f8006 	br	b098 <__divdf3+0xc0>
    b298:	04c00104 	movi	r19,4
    b29c:	0021883a 	mov	r16,zero
    b2a0:	0025883a 	mov	r18,zero
    b2a4:	02400044 	movi	r9,1
    b2a8:	003f6906 	br	b050 <__divdf3+0x78>
    b2ac:	04c00304 	movi	r19,12
    b2b0:	024000c4 	movi	r9,3
    b2b4:	003f6606 	br	b050 <__divdf3+0x78>
    b2b8:	01400434 	movhi	r5,16
    b2bc:	0007883a 	mov	r3,zero
    b2c0:	297fffc4 	addi	r5,r5,-1
    b2c4:	04bfffc4 	movi	r18,-1
    b2c8:	0081ffc4 	movi	r2,2047
    b2cc:	003fa106 	br	b154 <__divdf3+0x17c>
    b2d0:	00c00044 	movi	r3,1
    b2d4:	1887c83a 	sub	r3,r3,r2
    b2d8:	01000e04 	movi	r4,56
    b2dc:	20c1210e 	bge	r4,r3,b764 <__divdf3+0x78c>
    b2e0:	98c0004c 	andi	r3,r19,1
    b2e4:	0005883a 	mov	r2,zero
    b2e8:	000b883a 	mov	r5,zero
    b2ec:	0025883a 	mov	r18,zero
    b2f0:	003f9806 	br	b154 <__divdf3+0x17c>
    b2f4:	8c00fd36 	bltu	r17,r16,b6ec <__divdf3+0x714>
    b2f8:	8440fb26 	beq	r16,r17,b6e8 <__divdf3+0x710>
    b2fc:	8007883a 	mov	r3,r16
    b300:	ad7fffc4 	addi	r21,r21,-1
    b304:	0021883a 	mov	r16,zero
    b308:	4004d63a 	srli	r2,r8,24
    b30c:	8822923a 	slli	r17,r17,8
    b310:	1809883a 	mov	r4,r3
    b314:	402c923a 	slli	r22,r8,8
    b318:	88b8b03a 	or	fp,r17,r2
    b31c:	e028d43a 	srli	r20,fp,16
    b320:	d8c00015 	stw	r3,0(sp)
    b324:	e5ffffcc 	andi	r23,fp,65535
    b328:	a00b883a 	mov	r5,r20
    b32c:	000a6700 	call	a670 <__udivsi3>
    b330:	d8c00017 	ldw	r3,0(sp)
    b334:	a00b883a 	mov	r5,r20
    b338:	d8800315 	stw	r2,12(sp)
    b33c:	1809883a 	mov	r4,r3
    b340:	000a6d40 	call	a6d4 <__umodsi3>
    b344:	d9800317 	ldw	r6,12(sp)
    b348:	1006943a 	slli	r3,r2,16
    b34c:	9004d43a 	srli	r2,r18,16
    b350:	b9a3383a 	mul	r17,r23,r6
    b354:	10c4b03a 	or	r2,r2,r3
    b358:	1440062e 	bgeu	r2,r17,b374 <__divdf3+0x39c>
    b35c:	1705883a 	add	r2,r2,fp
    b360:	30ffffc4 	addi	r3,r6,-1
    b364:	1700ee36 	bltu	r2,fp,b720 <__divdf3+0x748>
    b368:	1440ed2e 	bgeu	r2,r17,b720 <__divdf3+0x748>
    b36c:	31bfff84 	addi	r6,r6,-2
    b370:	1705883a 	add	r2,r2,fp
    b374:	1463c83a 	sub	r17,r2,r17
    b378:	a00b883a 	mov	r5,r20
    b37c:	8809883a 	mov	r4,r17
    b380:	d9800315 	stw	r6,12(sp)
    b384:	000a6700 	call	a670 <__udivsi3>
    b388:	a00b883a 	mov	r5,r20
    b38c:	8809883a 	mov	r4,r17
    b390:	d8800215 	stw	r2,8(sp)
    b394:	000a6d40 	call	a6d4 <__umodsi3>
    b398:	d9c00217 	ldw	r7,8(sp)
    b39c:	1004943a 	slli	r2,r2,16
    b3a0:	94bfffcc 	andi	r18,r18,65535
    b3a4:	b9d1383a 	mul	r8,r23,r7
    b3a8:	90a4b03a 	or	r18,r18,r2
    b3ac:	d9800317 	ldw	r6,12(sp)
    b3b0:	9200062e 	bgeu	r18,r8,b3cc <__divdf3+0x3f4>
    b3b4:	9725883a 	add	r18,r18,fp
    b3b8:	38bfffc4 	addi	r2,r7,-1
    b3bc:	9700d636 	bltu	r18,fp,b718 <__divdf3+0x740>
    b3c0:	9200d52e 	bgeu	r18,r8,b718 <__divdf3+0x740>
    b3c4:	39ffff84 	addi	r7,r7,-2
    b3c8:	9725883a 	add	r18,r18,fp
    b3cc:	3004943a 	slli	r2,r6,16
    b3d0:	b012d43a 	srli	r9,r22,16
    b3d4:	b1bfffcc 	andi	r6,r22,65535
    b3d8:	11e2b03a 	or	r17,r2,r7
    b3dc:	8806d43a 	srli	r3,r17,16
    b3e0:	893fffcc 	andi	r4,r17,65535
    b3e4:	218b383a 	mul	r5,r4,r6
    b3e8:	30c5383a 	mul	r2,r6,r3
    b3ec:	2249383a 	mul	r4,r4,r9
    b3f0:	280ed43a 	srli	r7,r5,16
    b3f4:	9225c83a 	sub	r18,r18,r8
    b3f8:	2089883a 	add	r4,r4,r2
    b3fc:	3909883a 	add	r4,r7,r4
    b400:	1a47383a 	mul	r3,r3,r9
    b404:	2080022e 	bgeu	r4,r2,b410 <__divdf3+0x438>
    b408:	00800074 	movhi	r2,1
    b40c:	1887883a 	add	r3,r3,r2
    b410:	2004d43a 	srli	r2,r4,16
    b414:	2008943a 	slli	r4,r4,16
    b418:	297fffcc 	andi	r5,r5,65535
    b41c:	10c7883a 	add	r3,r2,r3
    b420:	2149883a 	add	r4,r4,r5
    b424:	90c0a536 	bltu	r18,r3,b6bc <__divdf3+0x6e4>
    b428:	90c0bf26 	beq	r18,r3,b728 <__divdf3+0x750>
    b42c:	90c7c83a 	sub	r3,r18,r3
    b430:	810fc83a 	sub	r7,r16,r4
    b434:	81e5803a 	cmpltu	r18,r16,r7
    b438:	1ca5c83a 	sub	r18,r3,r18
    b43c:	e480c126 	beq	fp,r18,b744 <__divdf3+0x76c>
    b440:	a00b883a 	mov	r5,r20
    b444:	9009883a 	mov	r4,r18
    b448:	d9800315 	stw	r6,12(sp)
    b44c:	d9c00215 	stw	r7,8(sp)
    b450:	da400115 	stw	r9,4(sp)
    b454:	000a6700 	call	a670 <__udivsi3>
    b458:	a00b883a 	mov	r5,r20
    b45c:	9009883a 	mov	r4,r18
    b460:	d8800015 	stw	r2,0(sp)
    b464:	000a6d40 	call	a6d4 <__umodsi3>
    b468:	d9c00217 	ldw	r7,8(sp)
    b46c:	da000017 	ldw	r8,0(sp)
    b470:	1006943a 	slli	r3,r2,16
    b474:	3804d43a 	srli	r2,r7,16
    b478:	ba21383a 	mul	r16,r23,r8
    b47c:	d9800317 	ldw	r6,12(sp)
    b480:	10c4b03a 	or	r2,r2,r3
    b484:	da400117 	ldw	r9,4(sp)
    b488:	1400062e 	bgeu	r2,r16,b4a4 <__divdf3+0x4cc>
    b48c:	1705883a 	add	r2,r2,fp
    b490:	40ffffc4 	addi	r3,r8,-1
    b494:	1700ad36 	bltu	r2,fp,b74c <__divdf3+0x774>
    b498:	1400ac2e 	bgeu	r2,r16,b74c <__divdf3+0x774>
    b49c:	423fff84 	addi	r8,r8,-2
    b4a0:	1705883a 	add	r2,r2,fp
    b4a4:	1421c83a 	sub	r16,r2,r16
    b4a8:	a00b883a 	mov	r5,r20
    b4ac:	8009883a 	mov	r4,r16
    b4b0:	d9800315 	stw	r6,12(sp)
    b4b4:	d9c00215 	stw	r7,8(sp)
    b4b8:	da000015 	stw	r8,0(sp)
    b4bc:	da400115 	stw	r9,4(sp)
    b4c0:	000a6700 	call	a670 <__udivsi3>
    b4c4:	8009883a 	mov	r4,r16
    b4c8:	a00b883a 	mov	r5,r20
    b4cc:	1025883a 	mov	r18,r2
    b4d0:	000a6d40 	call	a6d4 <__umodsi3>
    b4d4:	d9c00217 	ldw	r7,8(sp)
    b4d8:	1004943a 	slli	r2,r2,16
    b4dc:	bcaf383a 	mul	r23,r23,r18
    b4e0:	393fffcc 	andi	r4,r7,65535
    b4e4:	2088b03a 	or	r4,r4,r2
    b4e8:	d9800317 	ldw	r6,12(sp)
    b4ec:	da000017 	ldw	r8,0(sp)
    b4f0:	da400117 	ldw	r9,4(sp)
    b4f4:	25c0062e 	bgeu	r4,r23,b510 <__divdf3+0x538>
    b4f8:	2709883a 	add	r4,r4,fp
    b4fc:	90bfffc4 	addi	r2,r18,-1
    b500:	27009436 	bltu	r4,fp,b754 <__divdf3+0x77c>
    b504:	25c0932e 	bgeu	r4,r23,b754 <__divdf3+0x77c>
    b508:	94bfff84 	addi	r18,r18,-2
    b50c:	2709883a 	add	r4,r4,fp
    b510:	4004943a 	slli	r2,r8,16
    b514:	25efc83a 	sub	r23,r4,r23
    b518:	1490b03a 	or	r8,r2,r18
    b51c:	4008d43a 	srli	r4,r8,16
    b520:	40ffffcc 	andi	r3,r8,65535
    b524:	30c5383a 	mul	r2,r6,r3
    b528:	1a47383a 	mul	r3,r3,r9
    b52c:	310d383a 	mul	r6,r6,r4
    b530:	100ad43a 	srli	r5,r2,16
    b534:	4913383a 	mul	r9,r9,r4
    b538:	1987883a 	add	r3,r3,r6
    b53c:	28c7883a 	add	r3,r5,r3
    b540:	1980022e 	bgeu	r3,r6,b54c <__divdf3+0x574>
    b544:	01000074 	movhi	r4,1
    b548:	4913883a 	add	r9,r9,r4
    b54c:	1808d43a 	srli	r4,r3,16
    b550:	1806943a 	slli	r3,r3,16
    b554:	10bfffcc 	andi	r2,r2,65535
    b558:	2253883a 	add	r9,r4,r9
    b55c:	1887883a 	add	r3,r3,r2
    b560:	ba403836 	bltu	r23,r9,b644 <__divdf3+0x66c>
    b564:	ba403626 	beq	r23,r9,b640 <__divdf3+0x668>
    b568:	42000054 	ori	r8,r8,1
    b56c:	a880ffc4 	addi	r2,r21,1023
    b570:	00bf570e 	bge	zero,r2,b2d0 <__divdf3+0x2f8>
    b574:	40c001cc 	andi	r3,r8,7
    b578:	18000726 	beq	r3,zero,b598 <__divdf3+0x5c0>
    b57c:	40c003cc 	andi	r3,r8,15
    b580:	01000104 	movi	r4,4
    b584:	19000426 	beq	r3,r4,b598 <__divdf3+0x5c0>
    b588:	4107883a 	add	r3,r8,r4
    b58c:	1a11803a 	cmpltu	r8,r3,r8
    b590:	8a23883a 	add	r17,r17,r8
    b594:	1811883a 	mov	r8,r3
    b598:	88c0402c 	andhi	r3,r17,256
    b59c:	18000426 	beq	r3,zero,b5b0 <__divdf3+0x5d8>
    b5a0:	00ffc034 	movhi	r3,65280
    b5a4:	18ffffc4 	addi	r3,r3,-1
    b5a8:	a8810004 	addi	r2,r21,1024
    b5ac:	88e2703a 	and	r17,r17,r3
    b5b0:	00c1ff84 	movi	r3,2046
    b5b4:	18bee316 	blt	r3,r2,b144 <__divdf3+0x16c>
    b5b8:	8824977a 	slli	r18,r17,29
    b5bc:	4010d0fa 	srli	r8,r8,3
    b5c0:	8822927a 	slli	r17,r17,9
    b5c4:	1081ffcc 	andi	r2,r2,2047
    b5c8:	9224b03a 	or	r18,r18,r8
    b5cc:	880ad33a 	srli	r5,r17,12
    b5d0:	98c0004c 	andi	r3,r19,1
    b5d4:	003edf06 	br	b154 <__divdf3+0x17c>
    b5d8:	8080022c 	andhi	r2,r16,8
    b5dc:	10001226 	beq	r2,zero,b628 <__divdf3+0x650>
    b5e0:	8880022c 	andhi	r2,r17,8
    b5e4:	1000101e 	bne	r2,zero,b628 <__divdf3+0x650>
    b5e8:	00800434 	movhi	r2,16
    b5ec:	89400234 	orhi	r5,r17,8
    b5f0:	10bfffc4 	addi	r2,r2,-1
    b5f4:	b007883a 	mov	r3,r22
    b5f8:	288a703a 	and	r5,r5,r2
    b5fc:	4025883a 	mov	r18,r8
    b600:	003f3106 	br	b2c8 <__divdf3+0x2f0>
    b604:	008000c4 	movi	r2,3
    b608:	3880a626 	beq	r7,r2,b8a4 <__divdf3+0x8cc>
    b60c:	00800044 	movi	r2,1
    b610:	3880521e 	bne	r7,r2,b75c <__divdf3+0x784>
    b614:	b807883a 	mov	r3,r23
    b618:	0005883a 	mov	r2,zero
    b61c:	000b883a 	mov	r5,zero
    b620:	0025883a 	mov	r18,zero
    b624:	003ecb06 	br	b154 <__divdf3+0x17c>
    b628:	00800434 	movhi	r2,16
    b62c:	81400234 	orhi	r5,r16,8
    b630:	10bfffc4 	addi	r2,r2,-1
    b634:	a007883a 	mov	r3,r20
    b638:	288a703a 	and	r5,r5,r2
    b63c:	003f2206 	br	b2c8 <__divdf3+0x2f0>
    b640:	183fca26 	beq	r3,zero,b56c <__divdf3+0x594>
    b644:	e5ef883a 	add	r23,fp,r23
    b648:	40bfffc4 	addi	r2,r8,-1
    b64c:	bf00392e 	bgeu	r23,fp,b734 <__divdf3+0x75c>
    b650:	1011883a 	mov	r8,r2
    b654:	ba7fc41e 	bne	r23,r9,b568 <__divdf3+0x590>
    b658:	b0ffc31e 	bne	r22,r3,b568 <__divdf3+0x590>
    b65c:	003fc306 	br	b56c <__divdf3+0x594>
    b660:	143ff604 	addi	r16,r2,-40
    b664:	9c20983a 	sll	r16,r19,r16
    b668:	0025883a 	mov	r18,zero
    b66c:	003ee206 	br	b1f8 <__divdf3+0x220>
    b670:	d9800315 	stw	r6,12(sp)
    b674:	d9c00215 	stw	r7,8(sp)
    b678:	000cd300 	call	cd30 <__clzsi2>
    b67c:	10800804 	addi	r2,r2,32
    b680:	d9c00217 	ldw	r7,8(sp)
    b684:	d9800317 	ldw	r6,12(sp)
    b688:	003ed106 	br	b1d0 <__divdf3+0x1f8>
    b68c:	147ff604 	addi	r17,r2,-40
    b690:	3462983a 	sll	r17,r6,r17
    b694:	0011883a 	mov	r8,zero
    b698:	003ef506 	br	b270 <__divdf3+0x298>
    b69c:	3009883a 	mov	r4,r6
    b6a0:	d9800315 	stw	r6,12(sp)
    b6a4:	da400115 	stw	r9,4(sp)
    b6a8:	000cd300 	call	cd30 <__clzsi2>
    b6ac:	10800804 	addi	r2,r2,32
    b6b0:	da400117 	ldw	r9,4(sp)
    b6b4:	d9800317 	ldw	r6,12(sp)
    b6b8:	003ee306 	br	b248 <__divdf3+0x270>
    b6bc:	85a1883a 	add	r16,r16,r22
    b6c0:	8585803a 	cmpltu	r2,r16,r22
    b6c4:	1705883a 	add	r2,r2,fp
    b6c8:	14a5883a 	add	r18,r2,r18
    b6cc:	88bfffc4 	addi	r2,r17,-1
    b6d0:	e4800c2e 	bgeu	fp,r18,b704 <__divdf3+0x72c>
    b6d4:	90c03e36 	bltu	r18,r3,b7d0 <__divdf3+0x7f8>
    b6d8:	1c806926 	beq	r3,r18,b880 <__divdf3+0x8a8>
    b6dc:	90c7c83a 	sub	r3,r18,r3
    b6e0:	1023883a 	mov	r17,r2
    b6e4:	003f5206 	br	b430 <__divdf3+0x458>
    b6e8:	923f0436 	bltu	r18,r8,b2fc <__divdf3+0x324>
    b6ec:	800897fa 	slli	r4,r16,31
    b6f0:	9004d07a 	srli	r2,r18,1
    b6f4:	8006d07a 	srli	r3,r16,1
    b6f8:	902097fa 	slli	r16,r18,31
    b6fc:	20a4b03a 	or	r18,r4,r2
    b700:	003f0106 	br	b308 <__divdf3+0x330>
    b704:	e4bff51e 	bne	fp,r18,b6dc <__divdf3+0x704>
    b708:	85bff22e 	bgeu	r16,r22,b6d4 <__divdf3+0x6fc>
    b70c:	e0c7c83a 	sub	r3,fp,r3
    b710:	1023883a 	mov	r17,r2
    b714:	003f4606 	br	b430 <__divdf3+0x458>
    b718:	100f883a 	mov	r7,r2
    b71c:	003f2b06 	br	b3cc <__divdf3+0x3f4>
    b720:	180d883a 	mov	r6,r3
    b724:	003f1306 	br	b374 <__divdf3+0x39c>
    b728:	813fe436 	bltu	r16,r4,b6bc <__divdf3+0x6e4>
    b72c:	0007883a 	mov	r3,zero
    b730:	003f3f06 	br	b430 <__divdf3+0x458>
    b734:	ba402c36 	bltu	r23,r9,b7e8 <__divdf3+0x810>
    b738:	4dc05426 	beq	r9,r23,b88c <__divdf3+0x8b4>
    b73c:	1011883a 	mov	r8,r2
    b740:	003f8906 	br	b568 <__divdf3+0x590>
    b744:	023fffc4 	movi	r8,-1
    b748:	003f8806 	br	b56c <__divdf3+0x594>
    b74c:	1811883a 	mov	r8,r3
    b750:	003f5406 	br	b4a4 <__divdf3+0x4cc>
    b754:	1025883a 	mov	r18,r2
    b758:	003f6d06 	br	b510 <__divdf3+0x538>
    b75c:	b827883a 	mov	r19,r23
    b760:	003f8206 	br	b56c <__divdf3+0x594>
    b764:	010007c4 	movi	r4,31
    b768:	20c02616 	blt	r4,r3,b804 <__divdf3+0x82c>
    b76c:	00800804 	movi	r2,32
    b770:	10c5c83a 	sub	r2,r2,r3
    b774:	888a983a 	sll	r5,r17,r2
    b778:	40c8d83a 	srl	r4,r8,r3
    b77c:	4084983a 	sll	r2,r8,r2
    b780:	88e2d83a 	srl	r17,r17,r3
    b784:	2906b03a 	or	r3,r5,r4
    b788:	1004c03a 	cmpne	r2,r2,zero
    b78c:	1886b03a 	or	r3,r3,r2
    b790:	188001cc 	andi	r2,r3,7
    b794:	10000726 	beq	r2,zero,b7b4 <__divdf3+0x7dc>
    b798:	188003cc 	andi	r2,r3,15
    b79c:	01000104 	movi	r4,4
    b7a0:	11000426 	beq	r2,r4,b7b4 <__divdf3+0x7dc>
    b7a4:	1805883a 	mov	r2,r3
    b7a8:	10c00104 	addi	r3,r2,4
    b7ac:	1885803a 	cmpltu	r2,r3,r2
    b7b0:	88a3883a 	add	r17,r17,r2
    b7b4:	8880202c 	andhi	r2,r17,128
    b7b8:	10002726 	beq	r2,zero,b858 <__divdf3+0x880>
    b7bc:	98c0004c 	andi	r3,r19,1
    b7c0:	00800044 	movi	r2,1
    b7c4:	000b883a 	mov	r5,zero
    b7c8:	0025883a 	mov	r18,zero
    b7cc:	003e6106 	br	b154 <__divdf3+0x17c>
    b7d0:	85a1883a 	add	r16,r16,r22
    b7d4:	8585803a 	cmpltu	r2,r16,r22
    b7d8:	1705883a 	add	r2,r2,fp
    b7dc:	14a5883a 	add	r18,r2,r18
    b7e0:	8c7fff84 	addi	r17,r17,-2
    b7e4:	003f1106 	br	b42c <__divdf3+0x454>
    b7e8:	b589883a 	add	r4,r22,r22
    b7ec:	25ad803a 	cmpltu	r22,r4,r22
    b7f0:	b739883a 	add	fp,r22,fp
    b7f4:	40bfff84 	addi	r2,r8,-2
    b7f8:	bf2f883a 	add	r23,r23,fp
    b7fc:	202d883a 	mov	r22,r4
    b800:	003f9306 	br	b650 <__divdf3+0x678>
    b804:	013ff844 	movi	r4,-31
    b808:	2085c83a 	sub	r2,r4,r2
    b80c:	8888d83a 	srl	r4,r17,r2
    b810:	00800804 	movi	r2,32
    b814:	18802126 	beq	r3,r2,b89c <__divdf3+0x8c4>
    b818:	00801004 	movi	r2,64
    b81c:	10c5c83a 	sub	r2,r2,r3
    b820:	8884983a 	sll	r2,r17,r2
    b824:	1204b03a 	or	r2,r2,r8
    b828:	1004c03a 	cmpne	r2,r2,zero
    b82c:	2084b03a 	or	r2,r4,r2
    b830:	144001cc 	andi	r17,r2,7
    b834:	88000d1e 	bne	r17,zero,b86c <__divdf3+0x894>
    b838:	000b883a 	mov	r5,zero
    b83c:	1024d0fa 	srli	r18,r2,3
    b840:	98c0004c 	andi	r3,r19,1
    b844:	0005883a 	mov	r2,zero
    b848:	9464b03a 	or	r18,r18,r17
    b84c:	003e4106 	br	b154 <__divdf3+0x17c>
    b850:	1007883a 	mov	r3,r2
    b854:	0023883a 	mov	r17,zero
    b858:	880a927a 	slli	r5,r17,9
    b85c:	1805883a 	mov	r2,r3
    b860:	8822977a 	slli	r17,r17,29
    b864:	280ad33a 	srli	r5,r5,12
    b868:	003ff406 	br	b83c <__divdf3+0x864>
    b86c:	10c003cc 	andi	r3,r2,15
    b870:	01000104 	movi	r4,4
    b874:	193ff626 	beq	r3,r4,b850 <__divdf3+0x878>
    b878:	0023883a 	mov	r17,zero
    b87c:	003fca06 	br	b7a8 <__divdf3+0x7d0>
    b880:	813fd336 	bltu	r16,r4,b7d0 <__divdf3+0x7f8>
    b884:	1023883a 	mov	r17,r2
    b888:	003fa806 	br	b72c <__divdf3+0x754>
    b88c:	b0ffd636 	bltu	r22,r3,b7e8 <__divdf3+0x810>
    b890:	1011883a 	mov	r8,r2
    b894:	b0ff341e 	bne	r22,r3,b568 <__divdf3+0x590>
    b898:	003f3406 	br	b56c <__divdf3+0x594>
    b89c:	0005883a 	mov	r2,zero
    b8a0:	003fe006 	br	b824 <__divdf3+0x84c>
    b8a4:	00800434 	movhi	r2,16
    b8a8:	89400234 	orhi	r5,r17,8
    b8ac:	10bfffc4 	addi	r2,r2,-1
    b8b0:	b807883a 	mov	r3,r23
    b8b4:	288a703a 	and	r5,r5,r2
    b8b8:	4025883a 	mov	r18,r8
    b8bc:	003e8206 	br	b2c8 <__divdf3+0x2f0>

0000b8c0 <__eqdf2>:
    b8c0:	2804d53a 	srli	r2,r5,20
    b8c4:	3806d53a 	srli	r3,r7,20
    b8c8:	02000434 	movhi	r8,16
    b8cc:	423fffc4 	addi	r8,r8,-1
    b8d0:	1081ffcc 	andi	r2,r2,2047
    b8d4:	0281ffc4 	movi	r10,2047
    b8d8:	2a12703a 	and	r9,r5,r8
    b8dc:	18c1ffcc 	andi	r3,r3,2047
    b8e0:	3a10703a 	and	r8,r7,r8
    b8e4:	280ad7fa 	srli	r5,r5,31
    b8e8:	380ed7fa 	srli	r7,r7,31
    b8ec:	12801026 	beq	r2,r10,b930 <__eqdf2+0x70>
    b8f0:	0281ffc4 	movi	r10,2047
    b8f4:	1a800a26 	beq	r3,r10,b920 <__eqdf2+0x60>
    b8f8:	10c00226 	beq	r2,r3,b904 <__eqdf2+0x44>
    b8fc:	00800044 	movi	r2,1
    b900:	f800283a 	ret
    b904:	4a3ffd1e 	bne	r9,r8,b8fc <__eqdf2+0x3c>
    b908:	21bffc1e 	bne	r4,r6,b8fc <__eqdf2+0x3c>
    b90c:	29c00c26 	beq	r5,r7,b940 <__eqdf2+0x80>
    b910:	103ffa1e 	bne	r2,zero,b8fc <__eqdf2+0x3c>
    b914:	2244b03a 	or	r2,r4,r9
    b918:	1004c03a 	cmpne	r2,r2,zero
    b91c:	f800283a 	ret
    b920:	3214b03a 	or	r10,r6,r8
    b924:	503ff426 	beq	r10,zero,b8f8 <__eqdf2+0x38>
    b928:	00800044 	movi	r2,1
    b92c:	f800283a 	ret
    b930:	2254b03a 	or	r10,r4,r9
    b934:	503fee26 	beq	r10,zero,b8f0 <__eqdf2+0x30>
    b938:	00800044 	movi	r2,1
    b93c:	f800283a 	ret
    b940:	0005883a 	mov	r2,zero
    b944:	f800283a 	ret

0000b948 <__gedf2>:
    b948:	2804d53a 	srli	r2,r5,20
    b94c:	3806d53a 	srli	r3,r7,20
    b950:	02000434 	movhi	r8,16
    b954:	423fffc4 	addi	r8,r8,-1
    b958:	1081ffcc 	andi	r2,r2,2047
    b95c:	0241ffc4 	movi	r9,2047
    b960:	2a14703a 	and	r10,r5,r8
    b964:	18c1ffcc 	andi	r3,r3,2047
    b968:	3a10703a 	and	r8,r7,r8
    b96c:	280ad7fa 	srli	r5,r5,31
    b970:	380ed7fa 	srli	r7,r7,31
    b974:	12401d26 	beq	r2,r9,b9ec <__gedf2+0xa4>
    b978:	0241ffc4 	movi	r9,2047
    b97c:	1a401226 	beq	r3,r9,b9c8 <__gedf2+0x80>
    b980:	1000081e 	bne	r2,zero,b9a4 <__gedf2+0x5c>
    b984:	2296b03a 	or	r11,r4,r10
    b988:	5813003a 	cmpeq	r9,r11,zero
    b98c:	1800091e 	bne	r3,zero,b9b4 <__gedf2+0x6c>
    b990:	3218b03a 	or	r12,r6,r8
    b994:	6000071e 	bne	r12,zero,b9b4 <__gedf2+0x6c>
    b998:	0005883a 	mov	r2,zero
    b99c:	5800101e 	bne	r11,zero,b9e0 <__gedf2+0x98>
    b9a0:	f800283a 	ret
    b9a4:	18000c1e 	bne	r3,zero,b9d8 <__gedf2+0x90>
    b9a8:	3212b03a 	or	r9,r6,r8
    b9ac:	48000c26 	beq	r9,zero,b9e0 <__gedf2+0x98>
    b9b0:	0013883a 	mov	r9,zero
    b9b4:	39c03fcc 	andi	r7,r7,255
    b9b8:	48000826 	beq	r9,zero,b9dc <__gedf2+0x94>
    b9bc:	38000926 	beq	r7,zero,b9e4 <__gedf2+0x9c>
    b9c0:	00800044 	movi	r2,1
    b9c4:	f800283a 	ret
    b9c8:	3212b03a 	or	r9,r6,r8
    b9cc:	483fec26 	beq	r9,zero,b980 <__gedf2+0x38>
    b9d0:	00bfff84 	movi	r2,-2
    b9d4:	f800283a 	ret
    b9d8:	39c03fcc 	andi	r7,r7,255
    b9dc:	29c00626 	beq	r5,r7,b9f8 <__gedf2+0xb0>
    b9e0:	283ff726 	beq	r5,zero,b9c0 <__gedf2+0x78>
    b9e4:	00bfffc4 	movi	r2,-1
    b9e8:	f800283a 	ret
    b9ec:	2292b03a 	or	r9,r4,r10
    b9f0:	483fe126 	beq	r9,zero,b978 <__gedf2+0x30>
    b9f4:	003ff606 	br	b9d0 <__gedf2+0x88>
    b9f8:	18bff916 	blt	r3,r2,b9e0 <__gedf2+0x98>
    b9fc:	10c00316 	blt	r2,r3,ba0c <__gedf2+0xc4>
    ba00:	42bff736 	bltu	r8,r10,b9e0 <__gedf2+0x98>
    ba04:	52000326 	beq	r10,r8,ba14 <__gedf2+0xcc>
    ba08:	5200042e 	bgeu	r10,r8,ba1c <__gedf2+0xd4>
    ba0c:	283fec1e 	bne	r5,zero,b9c0 <__gedf2+0x78>
    ba10:	003ff406 	br	b9e4 <__gedf2+0x9c>
    ba14:	313ff236 	bltu	r6,r4,b9e0 <__gedf2+0x98>
    ba18:	21bffc36 	bltu	r4,r6,ba0c <__gedf2+0xc4>
    ba1c:	0005883a 	mov	r2,zero
    ba20:	f800283a 	ret

0000ba24 <__ledf2>:
    ba24:	2804d53a 	srli	r2,r5,20
    ba28:	3810d53a 	srli	r8,r7,20
    ba2c:	00c00434 	movhi	r3,16
    ba30:	18ffffc4 	addi	r3,r3,-1
    ba34:	1081ffcc 	andi	r2,r2,2047
    ba38:	0241ffc4 	movi	r9,2047
    ba3c:	28d4703a 	and	r10,r5,r3
    ba40:	4201ffcc 	andi	r8,r8,2047
    ba44:	38c6703a 	and	r3,r7,r3
    ba48:	280ad7fa 	srli	r5,r5,31
    ba4c:	380ed7fa 	srli	r7,r7,31
    ba50:	12401f26 	beq	r2,r9,bad0 <__ledf2+0xac>
    ba54:	0241ffc4 	movi	r9,2047
    ba58:	42401426 	beq	r8,r9,baac <__ledf2+0x88>
    ba5c:	1000091e 	bne	r2,zero,ba84 <__ledf2+0x60>
    ba60:	2296b03a 	or	r11,r4,r10
    ba64:	5813003a 	cmpeq	r9,r11,zero
    ba68:	29403fcc 	andi	r5,r5,255
    ba6c:	40000a1e 	bne	r8,zero,ba98 <__ledf2+0x74>
    ba70:	30d8b03a 	or	r12,r6,r3
    ba74:	6000081e 	bne	r12,zero,ba98 <__ledf2+0x74>
    ba78:	0005883a 	mov	r2,zero
    ba7c:	5800111e 	bne	r11,zero,bac4 <__ledf2+0xa0>
    ba80:	f800283a 	ret
    ba84:	29403fcc 	andi	r5,r5,255
    ba88:	40000c1e 	bne	r8,zero,babc <__ledf2+0x98>
    ba8c:	30d2b03a 	or	r9,r6,r3
    ba90:	48000c26 	beq	r9,zero,bac4 <__ledf2+0xa0>
    ba94:	0013883a 	mov	r9,zero
    ba98:	39c03fcc 	andi	r7,r7,255
    ba9c:	48000826 	beq	r9,zero,bac0 <__ledf2+0x9c>
    baa0:	38001126 	beq	r7,zero,bae8 <__ledf2+0xc4>
    baa4:	00800044 	movi	r2,1
    baa8:	f800283a 	ret
    baac:	30d2b03a 	or	r9,r6,r3
    bab0:	483fea26 	beq	r9,zero,ba5c <__ledf2+0x38>
    bab4:	00800084 	movi	r2,2
    bab8:	f800283a 	ret
    babc:	39c03fcc 	andi	r7,r7,255
    bac0:	39400726 	beq	r7,r5,bae0 <__ledf2+0xbc>
    bac4:	2800081e 	bne	r5,zero,bae8 <__ledf2+0xc4>
    bac8:	00800044 	movi	r2,1
    bacc:	f800283a 	ret
    bad0:	2292b03a 	or	r9,r4,r10
    bad4:	483fdf26 	beq	r9,zero,ba54 <__ledf2+0x30>
    bad8:	00800084 	movi	r2,2
    badc:	f800283a 	ret
    bae0:	4080030e 	bge	r8,r2,baf0 <__ledf2+0xcc>
    bae4:	383fef26 	beq	r7,zero,baa4 <__ledf2+0x80>
    bae8:	00bfffc4 	movi	r2,-1
    baec:	f800283a 	ret
    baf0:	123feb16 	blt	r2,r8,baa0 <__ledf2+0x7c>
    baf4:	1abff336 	bltu	r3,r10,bac4 <__ledf2+0xa0>
    baf8:	50c00326 	beq	r10,r3,bb08 <__ledf2+0xe4>
    bafc:	50c0042e 	bgeu	r10,r3,bb10 <__ledf2+0xec>
    bb00:	283fe81e 	bne	r5,zero,baa4 <__ledf2+0x80>
    bb04:	003ff806 	br	bae8 <__ledf2+0xc4>
    bb08:	313fee36 	bltu	r6,r4,bac4 <__ledf2+0xa0>
    bb0c:	21bffc36 	bltu	r4,r6,bb00 <__ledf2+0xdc>
    bb10:	0005883a 	mov	r2,zero
    bb14:	f800283a 	ret

0000bb18 <__muldf3>:
    bb18:	defff304 	addi	sp,sp,-52
    bb1c:	2804d53a 	srli	r2,r5,20
    bb20:	dd800915 	stw	r22,36(sp)
    bb24:	282cd7fa 	srli	r22,r5,31
    bb28:	dc000315 	stw	r16,12(sp)
    bb2c:	04000434 	movhi	r16,16
    bb30:	dd400815 	stw	r21,32(sp)
    bb34:	dc800515 	stw	r18,20(sp)
    bb38:	843fffc4 	addi	r16,r16,-1
    bb3c:	dfc00c15 	stw	ra,48(sp)
    bb40:	df000b15 	stw	fp,44(sp)
    bb44:	ddc00a15 	stw	r23,40(sp)
    bb48:	dd000715 	stw	r20,28(sp)
    bb4c:	dcc00615 	stw	r19,24(sp)
    bb50:	dc400415 	stw	r17,16(sp)
    bb54:	1481ffcc 	andi	r18,r2,2047
    bb58:	2c20703a 	and	r16,r5,r16
    bb5c:	b02b883a 	mov	r21,r22
    bb60:	b2403fcc 	andi	r9,r22,255
    bb64:	90006026 	beq	r18,zero,bce8 <__muldf3+0x1d0>
    bb68:	0081ffc4 	movi	r2,2047
    bb6c:	2029883a 	mov	r20,r4
    bb70:	90803626 	beq	r18,r2,bc4c <__muldf3+0x134>
    bb74:	80800434 	orhi	r2,r16,16
    bb78:	100490fa 	slli	r2,r2,3
    bb7c:	2020d77a 	srli	r16,r4,29
    bb80:	202890fa 	slli	r20,r4,3
    bb84:	94bf0044 	addi	r18,r18,-1023
    bb88:	80a0b03a 	or	r16,r16,r2
    bb8c:	0027883a 	mov	r19,zero
    bb90:	0039883a 	mov	fp,zero
    bb94:	3804d53a 	srli	r2,r7,20
    bb98:	382ed7fa 	srli	r23,r7,31
    bb9c:	04400434 	movhi	r17,16
    bba0:	8c7fffc4 	addi	r17,r17,-1
    bba4:	1081ffcc 	andi	r2,r2,2047
    bba8:	3011883a 	mov	r8,r6
    bbac:	3c62703a 	and	r17,r7,r17
    bbb0:	ba803fcc 	andi	r10,r23,255
    bbb4:	10006d26 	beq	r2,zero,bd6c <__muldf3+0x254>
    bbb8:	00c1ffc4 	movi	r3,2047
    bbbc:	10c06526 	beq	r2,r3,bd54 <__muldf3+0x23c>
    bbc0:	88c00434 	orhi	r3,r17,16
    bbc4:	180690fa 	slli	r3,r3,3
    bbc8:	3022d77a 	srli	r17,r6,29
    bbcc:	301090fa 	slli	r8,r6,3
    bbd0:	10bf0044 	addi	r2,r2,-1023
    bbd4:	88e2b03a 	or	r17,r17,r3
    bbd8:	000b883a 	mov	r5,zero
    bbdc:	9085883a 	add	r2,r18,r2
    bbe0:	2cc8b03a 	or	r4,r5,r19
    bbe4:	00c003c4 	movi	r3,15
    bbe8:	bdacf03a 	xor	r22,r23,r22
    bbec:	12c00044 	addi	r11,r2,1
    bbf0:	19009936 	bltu	r3,r4,be58 <__muldf3+0x340>
    bbf4:	200890ba 	slli	r4,r4,2
    bbf8:	00c00074 	movhi	r3,1
    bbfc:	18ef0304 	addi	r3,r3,-17396
    bc00:	20c9883a 	add	r4,r4,r3
    bc04:	20c00017 	ldw	r3,0(r4)
    bc08:	1800683a 	jmp	r3
    bc0c:	0000be58 	cmpnei	zero,zero,761
    bc10:	0000bc6c 	andhi	zero,zero,753
    bc14:	0000bc6c 	andhi	zero,zero,753
    bc18:	0000bc68 	cmpgeui	zero,zero,753
    bc1c:	0000be34 	movhi	zero,760
    bc20:	0000be34 	movhi	zero,760
    bc24:	0000be1c 	xori	zero,zero,760
    bc28:	0000bc68 	cmpgeui	zero,zero,753
    bc2c:	0000be34 	movhi	zero,760
    bc30:	0000be1c 	xori	zero,zero,760
    bc34:	0000be34 	movhi	zero,760
    bc38:	0000bc68 	cmpgeui	zero,zero,753
    bc3c:	0000be44 	movi	zero,761
    bc40:	0000be44 	movi	zero,761
    bc44:	0000be44 	movi	zero,761
    bc48:	0000c060 	cmpeqi	zero,zero,769
    bc4c:	2404b03a 	or	r2,r4,r16
    bc50:	10006f1e 	bne	r2,zero,be10 <__muldf3+0x2f8>
    bc54:	04c00204 	movi	r19,8
    bc58:	0021883a 	mov	r16,zero
    bc5c:	0029883a 	mov	r20,zero
    bc60:	07000084 	movi	fp,2
    bc64:	003fcb06 	br	bb94 <__muldf3+0x7c>
    bc68:	502d883a 	mov	r22,r10
    bc6c:	00800084 	movi	r2,2
    bc70:	28805726 	beq	r5,r2,bdd0 <__muldf3+0x2b8>
    bc74:	008000c4 	movi	r2,3
    bc78:	28816626 	beq	r5,r2,c214 <__muldf3+0x6fc>
    bc7c:	00800044 	movi	r2,1
    bc80:	2881411e 	bne	r5,r2,c188 <__muldf3+0x670>
    bc84:	b02b883a 	mov	r21,r22
    bc88:	0005883a 	mov	r2,zero
    bc8c:	000b883a 	mov	r5,zero
    bc90:	0029883a 	mov	r20,zero
    bc94:	1004953a 	slli	r2,r2,20
    bc98:	a8c03fcc 	andi	r3,r21,255
    bc9c:	04400434 	movhi	r17,16
    bca0:	8c7fffc4 	addi	r17,r17,-1
    bca4:	180697fa 	slli	r3,r3,31
    bca8:	2c4a703a 	and	r5,r5,r17
    bcac:	288ab03a 	or	r5,r5,r2
    bcb0:	28c6b03a 	or	r3,r5,r3
    bcb4:	a005883a 	mov	r2,r20
    bcb8:	dfc00c17 	ldw	ra,48(sp)
    bcbc:	df000b17 	ldw	fp,44(sp)
    bcc0:	ddc00a17 	ldw	r23,40(sp)
    bcc4:	dd800917 	ldw	r22,36(sp)
    bcc8:	dd400817 	ldw	r21,32(sp)
    bccc:	dd000717 	ldw	r20,28(sp)
    bcd0:	dcc00617 	ldw	r19,24(sp)
    bcd4:	dc800517 	ldw	r18,20(sp)
    bcd8:	dc400417 	ldw	r17,16(sp)
    bcdc:	dc000317 	ldw	r16,12(sp)
    bce0:	dec00d04 	addi	sp,sp,52
    bce4:	f800283a 	ret
    bce8:	2404b03a 	or	r2,r4,r16
    bcec:	2027883a 	mov	r19,r4
    bcf0:	10004226 	beq	r2,zero,bdfc <__muldf3+0x2e4>
    bcf4:	8000fc26 	beq	r16,zero,c0e8 <__muldf3+0x5d0>
    bcf8:	8009883a 	mov	r4,r16
    bcfc:	d9800215 	stw	r6,8(sp)
    bd00:	d9c00015 	stw	r7,0(sp)
    bd04:	da400115 	stw	r9,4(sp)
    bd08:	000cd300 	call	cd30 <__clzsi2>
    bd0c:	d9800217 	ldw	r6,8(sp)
    bd10:	d9c00017 	ldw	r7,0(sp)
    bd14:	da400117 	ldw	r9,4(sp)
    bd18:	113ffd44 	addi	r4,r2,-11
    bd1c:	00c00704 	movi	r3,28
    bd20:	1900ed16 	blt	r3,r4,c0d8 <__muldf3+0x5c0>
    bd24:	00c00744 	movi	r3,29
    bd28:	147ffe04 	addi	r17,r2,-8
    bd2c:	1907c83a 	sub	r3,r3,r4
    bd30:	8460983a 	sll	r16,r16,r17
    bd34:	98c6d83a 	srl	r3,r19,r3
    bd38:	9c68983a 	sll	r20,r19,r17
    bd3c:	1c20b03a 	or	r16,r3,r16
    bd40:	1080fcc4 	addi	r2,r2,1011
    bd44:	00a5c83a 	sub	r18,zero,r2
    bd48:	0027883a 	mov	r19,zero
    bd4c:	0039883a 	mov	fp,zero
    bd50:	003f9006 	br	bb94 <__muldf3+0x7c>
    bd54:	3446b03a 	or	r3,r6,r17
    bd58:	1800261e 	bne	r3,zero,bdf4 <__muldf3+0x2dc>
    bd5c:	0023883a 	mov	r17,zero
    bd60:	0011883a 	mov	r8,zero
    bd64:	01400084 	movi	r5,2
    bd68:	003f9c06 	br	bbdc <__muldf3+0xc4>
    bd6c:	3446b03a 	or	r3,r6,r17
    bd70:	18001c26 	beq	r3,zero,bde4 <__muldf3+0x2cc>
    bd74:	8800ce26 	beq	r17,zero,c0b0 <__muldf3+0x598>
    bd78:	8809883a 	mov	r4,r17
    bd7c:	d9800215 	stw	r6,8(sp)
    bd80:	da400115 	stw	r9,4(sp)
    bd84:	da800015 	stw	r10,0(sp)
    bd88:	000cd300 	call	cd30 <__clzsi2>
    bd8c:	d9800217 	ldw	r6,8(sp)
    bd90:	da400117 	ldw	r9,4(sp)
    bd94:	da800017 	ldw	r10,0(sp)
    bd98:	113ffd44 	addi	r4,r2,-11
    bd9c:	00c00704 	movi	r3,28
    bda0:	1900bf16 	blt	r3,r4,c0a0 <__muldf3+0x588>
    bda4:	00c00744 	movi	r3,29
    bda8:	123ffe04 	addi	r8,r2,-8
    bdac:	1907c83a 	sub	r3,r3,r4
    bdb0:	8a22983a 	sll	r17,r17,r8
    bdb4:	30c6d83a 	srl	r3,r6,r3
    bdb8:	3210983a 	sll	r8,r6,r8
    bdbc:	1c62b03a 	or	r17,r3,r17
    bdc0:	1080fcc4 	addi	r2,r2,1011
    bdc4:	0085c83a 	sub	r2,zero,r2
    bdc8:	000b883a 	mov	r5,zero
    bdcc:	003f8306 	br	bbdc <__muldf3+0xc4>
    bdd0:	b02b883a 	mov	r21,r22
    bdd4:	0081ffc4 	movi	r2,2047
    bdd8:	000b883a 	mov	r5,zero
    bddc:	0029883a 	mov	r20,zero
    bde0:	003fac06 	br	bc94 <__muldf3+0x17c>
    bde4:	0023883a 	mov	r17,zero
    bde8:	0011883a 	mov	r8,zero
    bdec:	01400044 	movi	r5,1
    bdf0:	003f7a06 	br	bbdc <__muldf3+0xc4>
    bdf4:	014000c4 	movi	r5,3
    bdf8:	003f7806 	br	bbdc <__muldf3+0xc4>
    bdfc:	04c00104 	movi	r19,4
    be00:	0021883a 	mov	r16,zero
    be04:	0029883a 	mov	r20,zero
    be08:	07000044 	movi	fp,1
    be0c:	003f6106 	br	bb94 <__muldf3+0x7c>
    be10:	04c00304 	movi	r19,12
    be14:	070000c4 	movi	fp,3
    be18:	003f5e06 	br	bb94 <__muldf3+0x7c>
    be1c:	01400434 	movhi	r5,16
    be20:	002b883a 	mov	r21,zero
    be24:	297fffc4 	addi	r5,r5,-1
    be28:	053fffc4 	movi	r20,-1
    be2c:	0081ffc4 	movi	r2,2047
    be30:	003f9806 	br	bc94 <__muldf3+0x17c>
    be34:	8023883a 	mov	r17,r16
    be38:	a011883a 	mov	r8,r20
    be3c:	e00b883a 	mov	r5,fp
    be40:	003f8a06 	br	bc6c <__muldf3+0x154>
    be44:	8023883a 	mov	r17,r16
    be48:	a011883a 	mov	r8,r20
    be4c:	482d883a 	mov	r22,r9
    be50:	e00b883a 	mov	r5,fp
    be54:	003f8506 	br	bc6c <__muldf3+0x154>
    be58:	a00ad43a 	srli	r5,r20,16
    be5c:	401ad43a 	srli	r13,r8,16
    be60:	a53fffcc 	andi	r20,r20,65535
    be64:	423fffcc 	andi	r8,r8,65535
    be68:	4519383a 	mul	r12,r8,r20
    be6c:	4147383a 	mul	r3,r8,r5
    be70:	6d09383a 	mul	r4,r13,r20
    be74:	600cd43a 	srli	r6,r12,16
    be78:	2b5d383a 	mul	r14,r5,r13
    be7c:	20c9883a 	add	r4,r4,r3
    be80:	310d883a 	add	r6,r6,r4
    be84:	30c0022e 	bgeu	r6,r3,be90 <__muldf3+0x378>
    be88:	00c00074 	movhi	r3,1
    be8c:	70dd883a 	add	r14,r14,r3
    be90:	8826d43a 	srli	r19,r17,16
    be94:	8bffffcc 	andi	r15,r17,65535
    be98:	7d23383a 	mul	r17,r15,r20
    be9c:	7949383a 	mul	r4,r15,r5
    bea0:	9d29383a 	mul	r20,r19,r20
    bea4:	8814d43a 	srli	r10,r17,16
    bea8:	3012943a 	slli	r9,r6,16
    beac:	a129883a 	add	r20,r20,r4
    beb0:	633fffcc 	andi	r12,r12,65535
    beb4:	5515883a 	add	r10,r10,r20
    beb8:	3006d43a 	srli	r3,r6,16
    bebc:	4b13883a 	add	r9,r9,r12
    bec0:	2ccb383a 	mul	r5,r5,r19
    bec4:	5100022e 	bgeu	r10,r4,bed0 <__muldf3+0x3b8>
    bec8:	01000074 	movhi	r4,1
    becc:	290b883a 	add	r5,r5,r4
    bed0:	802ad43a 	srli	r21,r16,16
    bed4:	843fffcc 	andi	r16,r16,65535
    bed8:	440d383a 	mul	r6,r8,r16
    bedc:	4565383a 	mul	r18,r8,r21
    bee0:	8349383a 	mul	r4,r16,r13
    bee4:	500e943a 	slli	r7,r10,16
    bee8:	3010d43a 	srli	r8,r6,16
    beec:	5028d43a 	srli	r20,r10,16
    bef0:	2489883a 	add	r4,r4,r18
    bef4:	8abfffcc 	andi	r10,r17,65535
    bef8:	3a95883a 	add	r10,r7,r10
    befc:	4119883a 	add	r12,r8,r4
    bf00:	a169883a 	add	r20,r20,r5
    bf04:	1a87883a 	add	r3,r3,r10
    bf08:	6d5b383a 	mul	r13,r13,r21
    bf0c:	6480022e 	bgeu	r12,r18,bf18 <__muldf3+0x400>
    bf10:	01000074 	movhi	r4,1
    bf14:	691b883a 	add	r13,r13,r4
    bf18:	7c25383a 	mul	r18,r15,r16
    bf1c:	7d4b383a 	mul	r5,r15,r21
    bf20:	84cf383a 	mul	r7,r16,r19
    bf24:	901ed43a 	srli	r15,r18,16
    bf28:	6008d43a 	srli	r4,r12,16
    bf2c:	6010943a 	slli	r8,r12,16
    bf30:	394f883a 	add	r7,r7,r5
    bf34:	333fffcc 	andi	r12,r6,65535
    bf38:	79df883a 	add	r15,r15,r7
    bf3c:	235b883a 	add	r13,r4,r13
    bf40:	9d63383a 	mul	r17,r19,r21
    bf44:	4309883a 	add	r4,r8,r12
    bf48:	7940022e 	bgeu	r15,r5,bf54 <__muldf3+0x43c>
    bf4c:	01400074 	movhi	r5,1
    bf50:	8963883a 	add	r17,r17,r5
    bf54:	780a943a 	slli	r5,r15,16
    bf58:	91bfffcc 	andi	r6,r18,65535
    bf5c:	70c7883a 	add	r3,r14,r3
    bf60:	298d883a 	add	r6,r5,r6
    bf64:	1a8f803a 	cmpltu	r7,r3,r10
    bf68:	350b883a 	add	r5,r6,r20
    bf6c:	20c7883a 	add	r3,r4,r3
    bf70:	3955883a 	add	r10,r7,r5
    bf74:	1909803a 	cmpltu	r4,r3,r4
    bf78:	6a91883a 	add	r8,r13,r10
    bf7c:	780cd43a 	srli	r6,r15,16
    bf80:	2219883a 	add	r12,r4,r8
    bf84:	2d0b803a 	cmpltu	r5,r5,r20
    bf88:	51cf803a 	cmpltu	r7,r10,r7
    bf8c:	29ceb03a 	or	r7,r5,r7
    bf90:	4351803a 	cmpltu	r8,r8,r13
    bf94:	610b803a 	cmpltu	r5,r12,r4
    bf98:	4148b03a 	or	r4,r8,r5
    bf9c:	398f883a 	add	r7,r7,r6
    bfa0:	3909883a 	add	r4,r7,r4
    bfa4:	1810927a 	slli	r8,r3,9
    bfa8:	2449883a 	add	r4,r4,r17
    bfac:	2008927a 	slli	r4,r4,9
    bfb0:	6022d5fa 	srli	r17,r12,23
    bfb4:	1806d5fa 	srli	r3,r3,23
    bfb8:	4252b03a 	or	r9,r8,r9
    bfbc:	600a927a 	slli	r5,r12,9
    bfc0:	4810c03a 	cmpne	r8,r9,zero
    bfc4:	2462b03a 	or	r17,r4,r17
    bfc8:	40c6b03a 	or	r3,r8,r3
    bfcc:	8900402c 	andhi	r4,r17,256
    bfd0:	1950b03a 	or	r8,r3,r5
    bfd4:	20000726 	beq	r4,zero,bff4 <__muldf3+0x4dc>
    bfd8:	4006d07a 	srli	r3,r8,1
    bfdc:	880497fa 	slli	r2,r17,31
    bfe0:	4200004c 	andi	r8,r8,1
    bfe4:	8822d07a 	srli	r17,r17,1
    bfe8:	1a10b03a 	or	r8,r3,r8
    bfec:	1210b03a 	or	r8,r2,r8
    bff0:	5805883a 	mov	r2,r11
    bff4:	1140ffc4 	addi	r5,r2,1023
    bff8:	0140440e 	bge	zero,r5,c10c <__muldf3+0x5f4>
    bffc:	40c001cc 	andi	r3,r8,7
    c000:	18000726 	beq	r3,zero,c020 <__muldf3+0x508>
    c004:	40c003cc 	andi	r3,r8,15
    c008:	01000104 	movi	r4,4
    c00c:	19000426 	beq	r3,r4,c020 <__muldf3+0x508>
    c010:	4107883a 	add	r3,r8,r4
    c014:	1a11803a 	cmpltu	r8,r3,r8
    c018:	8a23883a 	add	r17,r17,r8
    c01c:	1811883a 	mov	r8,r3
    c020:	88c0402c 	andhi	r3,r17,256
    c024:	18000426 	beq	r3,zero,c038 <__muldf3+0x520>
    c028:	11410004 	addi	r5,r2,1024
    c02c:	00bfc034 	movhi	r2,65280
    c030:	10bfffc4 	addi	r2,r2,-1
    c034:	88a2703a 	and	r17,r17,r2
    c038:	0081ff84 	movi	r2,2046
    c03c:	117f6416 	blt	r2,r5,bdd0 <__muldf3+0x2b8>
    c040:	8828977a 	slli	r20,r17,29
    c044:	4010d0fa 	srli	r8,r8,3
    c048:	8822927a 	slli	r17,r17,9
    c04c:	2881ffcc 	andi	r2,r5,2047
    c050:	a228b03a 	or	r20,r20,r8
    c054:	880ad33a 	srli	r5,r17,12
    c058:	b02b883a 	mov	r21,r22
    c05c:	003f0d06 	br	bc94 <__muldf3+0x17c>
    c060:	8080022c 	andhi	r2,r16,8
    c064:	10000926 	beq	r2,zero,c08c <__muldf3+0x574>
    c068:	8880022c 	andhi	r2,r17,8
    c06c:	1000071e 	bne	r2,zero,c08c <__muldf3+0x574>
    c070:	00800434 	movhi	r2,16
    c074:	89400234 	orhi	r5,r17,8
    c078:	10bfffc4 	addi	r2,r2,-1
    c07c:	b82b883a 	mov	r21,r23
    c080:	288a703a 	and	r5,r5,r2
    c084:	4029883a 	mov	r20,r8
    c088:	003f6806 	br	be2c <__muldf3+0x314>
    c08c:	00800434 	movhi	r2,16
    c090:	81400234 	orhi	r5,r16,8
    c094:	10bfffc4 	addi	r2,r2,-1
    c098:	288a703a 	and	r5,r5,r2
    c09c:	003f6306 	br	be2c <__muldf3+0x314>
    c0a0:	147ff604 	addi	r17,r2,-40
    c0a4:	3462983a 	sll	r17,r6,r17
    c0a8:	0011883a 	mov	r8,zero
    c0ac:	003f4406 	br	bdc0 <__muldf3+0x2a8>
    c0b0:	3009883a 	mov	r4,r6
    c0b4:	d9800215 	stw	r6,8(sp)
    c0b8:	da400115 	stw	r9,4(sp)
    c0bc:	da800015 	stw	r10,0(sp)
    c0c0:	000cd300 	call	cd30 <__clzsi2>
    c0c4:	10800804 	addi	r2,r2,32
    c0c8:	da800017 	ldw	r10,0(sp)
    c0cc:	da400117 	ldw	r9,4(sp)
    c0d0:	d9800217 	ldw	r6,8(sp)
    c0d4:	003f3006 	br	bd98 <__muldf3+0x280>
    c0d8:	143ff604 	addi	r16,r2,-40
    c0dc:	9c20983a 	sll	r16,r19,r16
    c0e0:	0029883a 	mov	r20,zero
    c0e4:	003f1606 	br	bd40 <__muldf3+0x228>
    c0e8:	d9800215 	stw	r6,8(sp)
    c0ec:	d9c00015 	stw	r7,0(sp)
    c0f0:	da400115 	stw	r9,4(sp)
    c0f4:	000cd300 	call	cd30 <__clzsi2>
    c0f8:	10800804 	addi	r2,r2,32
    c0fc:	da400117 	ldw	r9,4(sp)
    c100:	d9c00017 	ldw	r7,0(sp)
    c104:	d9800217 	ldw	r6,8(sp)
    c108:	003f0306 	br	bd18 <__muldf3+0x200>
    c10c:	00c00044 	movi	r3,1
    c110:	1947c83a 	sub	r3,r3,r5
    c114:	00800e04 	movi	r2,56
    c118:	10feda16 	blt	r2,r3,bc84 <__muldf3+0x16c>
    c11c:	008007c4 	movi	r2,31
    c120:	10c01b16 	blt	r2,r3,c190 <__muldf3+0x678>
    c124:	00800804 	movi	r2,32
    c128:	10c5c83a 	sub	r2,r2,r3
    c12c:	888a983a 	sll	r5,r17,r2
    c130:	40c8d83a 	srl	r4,r8,r3
    c134:	4084983a 	sll	r2,r8,r2
    c138:	88e2d83a 	srl	r17,r17,r3
    c13c:	2906b03a 	or	r3,r5,r4
    c140:	1004c03a 	cmpne	r2,r2,zero
    c144:	1886b03a 	or	r3,r3,r2
    c148:	188001cc 	andi	r2,r3,7
    c14c:	10000726 	beq	r2,zero,c16c <__muldf3+0x654>
    c150:	188003cc 	andi	r2,r3,15
    c154:	01000104 	movi	r4,4
    c158:	11000426 	beq	r2,r4,c16c <__muldf3+0x654>
    c15c:	1805883a 	mov	r2,r3
    c160:	10c00104 	addi	r3,r2,4
    c164:	1885803a 	cmpltu	r2,r3,r2
    c168:	88a3883a 	add	r17,r17,r2
    c16c:	8880202c 	andhi	r2,r17,128
    c170:	10001c26 	beq	r2,zero,c1e4 <__muldf3+0x6cc>
    c174:	b02b883a 	mov	r21,r22
    c178:	00800044 	movi	r2,1
    c17c:	000b883a 	mov	r5,zero
    c180:	0029883a 	mov	r20,zero
    c184:	003ec306 	br	bc94 <__muldf3+0x17c>
    c188:	5805883a 	mov	r2,r11
    c18c:	003f9906 	br	bff4 <__muldf3+0x4dc>
    c190:	00bff844 	movi	r2,-31
    c194:	1145c83a 	sub	r2,r2,r5
    c198:	8888d83a 	srl	r4,r17,r2
    c19c:	00800804 	movi	r2,32
    c1a0:	18801a26 	beq	r3,r2,c20c <__muldf3+0x6f4>
    c1a4:	00801004 	movi	r2,64
    c1a8:	10c5c83a 	sub	r2,r2,r3
    c1ac:	8884983a 	sll	r2,r17,r2
    c1b0:	1204b03a 	or	r2,r2,r8
    c1b4:	1004c03a 	cmpne	r2,r2,zero
    c1b8:	2084b03a 	or	r2,r4,r2
    c1bc:	144001cc 	andi	r17,r2,7
    c1c0:	88000d1e 	bne	r17,zero,c1f8 <__muldf3+0x6e0>
    c1c4:	000b883a 	mov	r5,zero
    c1c8:	1028d0fa 	srli	r20,r2,3
    c1cc:	b02b883a 	mov	r21,r22
    c1d0:	0005883a 	mov	r2,zero
    c1d4:	a468b03a 	or	r20,r20,r17
    c1d8:	003eae06 	br	bc94 <__muldf3+0x17c>
    c1dc:	1007883a 	mov	r3,r2
    c1e0:	0023883a 	mov	r17,zero
    c1e4:	880a927a 	slli	r5,r17,9
    c1e8:	1805883a 	mov	r2,r3
    c1ec:	8822977a 	slli	r17,r17,29
    c1f0:	280ad33a 	srli	r5,r5,12
    c1f4:	003ff406 	br	c1c8 <__muldf3+0x6b0>
    c1f8:	10c003cc 	andi	r3,r2,15
    c1fc:	01000104 	movi	r4,4
    c200:	193ff626 	beq	r3,r4,c1dc <__muldf3+0x6c4>
    c204:	0023883a 	mov	r17,zero
    c208:	003fd506 	br	c160 <__muldf3+0x648>
    c20c:	0005883a 	mov	r2,zero
    c210:	003fe706 	br	c1b0 <__muldf3+0x698>
    c214:	00800434 	movhi	r2,16
    c218:	89400234 	orhi	r5,r17,8
    c21c:	10bfffc4 	addi	r2,r2,-1
    c220:	b02b883a 	mov	r21,r22
    c224:	288a703a 	and	r5,r5,r2
    c228:	4029883a 	mov	r20,r8
    c22c:	003eff06 	br	be2c <__muldf3+0x314>

0000c230 <__subdf3>:
    c230:	02000434 	movhi	r8,16
    c234:	423fffc4 	addi	r8,r8,-1
    c238:	defffb04 	addi	sp,sp,-20
    c23c:	2a14703a 	and	r10,r5,r8
    c240:	3812d53a 	srli	r9,r7,20
    c244:	3a10703a 	and	r8,r7,r8
    c248:	2006d77a 	srli	r3,r4,29
    c24c:	3004d77a 	srli	r2,r6,29
    c250:	dc000015 	stw	r16,0(sp)
    c254:	501490fa 	slli	r10,r10,3
    c258:	2820d53a 	srli	r16,r5,20
    c25c:	401090fa 	slli	r8,r8,3
    c260:	dc800215 	stw	r18,8(sp)
    c264:	dc400115 	stw	r17,4(sp)
    c268:	dfc00415 	stw	ra,16(sp)
    c26c:	202290fa 	slli	r17,r4,3
    c270:	dcc00315 	stw	r19,12(sp)
    c274:	4a41ffcc 	andi	r9,r9,2047
    c278:	0101ffc4 	movi	r4,2047
    c27c:	2824d7fa 	srli	r18,r5,31
    c280:	8401ffcc 	andi	r16,r16,2047
    c284:	50c6b03a 	or	r3,r10,r3
    c288:	380ed7fa 	srli	r7,r7,31
    c28c:	408ab03a 	or	r5,r8,r2
    c290:	300c90fa 	slli	r6,r6,3
    c294:	49009626 	beq	r9,r4,c4f0 <__subdf3+0x2c0>
    c298:	39c0005c 	xori	r7,r7,1
    c29c:	8245c83a 	sub	r2,r16,r9
    c2a0:	3c807426 	beq	r7,r18,c474 <__subdf3+0x244>
    c2a4:	0080af0e 	bge	zero,r2,c564 <__subdf3+0x334>
    c2a8:	48002a1e 	bne	r9,zero,c354 <__subdf3+0x124>
    c2ac:	2988b03a 	or	r4,r5,r6
    c2b0:	20009a1e 	bne	r4,zero,c51c <__subdf3+0x2ec>
    c2b4:	888001cc 	andi	r2,r17,7
    c2b8:	10000726 	beq	r2,zero,c2d8 <__subdf3+0xa8>
    c2bc:	888003cc 	andi	r2,r17,15
    c2c0:	01000104 	movi	r4,4
    c2c4:	11000426 	beq	r2,r4,c2d8 <__subdf3+0xa8>
    c2c8:	890b883a 	add	r5,r17,r4
    c2cc:	2c63803a 	cmpltu	r17,r5,r17
    c2d0:	1c47883a 	add	r3,r3,r17
    c2d4:	2823883a 	mov	r17,r5
    c2d8:	1880202c 	andhi	r2,r3,128
    c2dc:	10005926 	beq	r2,zero,c444 <__subdf3+0x214>
    c2e0:	84000044 	addi	r16,r16,1
    c2e4:	0081ffc4 	movi	r2,2047
    c2e8:	8080be26 	beq	r16,r2,c5e4 <__subdf3+0x3b4>
    c2ec:	017fe034 	movhi	r5,65408
    c2f0:	297fffc4 	addi	r5,r5,-1
    c2f4:	1946703a 	and	r3,r3,r5
    c2f8:	1804977a 	slli	r2,r3,29
    c2fc:	1806927a 	slli	r3,r3,9
    c300:	8822d0fa 	srli	r17,r17,3
    c304:	8401ffcc 	andi	r16,r16,2047
    c308:	180ad33a 	srli	r5,r3,12
    c30c:	9100004c 	andi	r4,r18,1
    c310:	1444b03a 	or	r2,r2,r17
    c314:	80c1ffcc 	andi	r3,r16,2047
    c318:	1820953a 	slli	r16,r3,20
    c31c:	20c03fcc 	andi	r3,r4,255
    c320:	180897fa 	slli	r4,r3,31
    c324:	00c00434 	movhi	r3,16
    c328:	18ffffc4 	addi	r3,r3,-1
    c32c:	28c6703a 	and	r3,r5,r3
    c330:	1c06b03a 	or	r3,r3,r16
    c334:	1906b03a 	or	r3,r3,r4
    c338:	dfc00417 	ldw	ra,16(sp)
    c33c:	dcc00317 	ldw	r19,12(sp)
    c340:	dc800217 	ldw	r18,8(sp)
    c344:	dc400117 	ldw	r17,4(sp)
    c348:	dc000017 	ldw	r16,0(sp)
    c34c:	dec00504 	addi	sp,sp,20
    c350:	f800283a 	ret
    c354:	0101ffc4 	movi	r4,2047
    c358:	813fd626 	beq	r16,r4,c2b4 <__subdf3+0x84>
    c35c:	29402034 	orhi	r5,r5,128
    c360:	01000e04 	movi	r4,56
    c364:	2080a316 	blt	r4,r2,c5f4 <__subdf3+0x3c4>
    c368:	010007c4 	movi	r4,31
    c36c:	2080c616 	blt	r4,r2,c688 <__subdf3+0x458>
    c370:	01000804 	movi	r4,32
    c374:	2089c83a 	sub	r4,r4,r2
    c378:	2910983a 	sll	r8,r5,r4
    c37c:	308ed83a 	srl	r7,r6,r2
    c380:	3108983a 	sll	r4,r6,r4
    c384:	2884d83a 	srl	r2,r5,r2
    c388:	41ccb03a 	or	r6,r8,r7
    c38c:	2008c03a 	cmpne	r4,r4,zero
    c390:	310cb03a 	or	r6,r6,r4
    c394:	898dc83a 	sub	r6,r17,r6
    c398:	89a3803a 	cmpltu	r17,r17,r6
    c39c:	1887c83a 	sub	r3,r3,r2
    c3a0:	1c47c83a 	sub	r3,r3,r17
    c3a4:	3023883a 	mov	r17,r6
    c3a8:	1880202c 	andhi	r2,r3,128
    c3ac:	10002326 	beq	r2,zero,c43c <__subdf3+0x20c>
    c3b0:	04c02034 	movhi	r19,128
    c3b4:	9cffffc4 	addi	r19,r19,-1
    c3b8:	1ce6703a 	and	r19,r3,r19
    c3bc:	98007a26 	beq	r19,zero,c5a8 <__subdf3+0x378>
    c3c0:	9809883a 	mov	r4,r19
    c3c4:	000cd300 	call	cd30 <__clzsi2>
    c3c8:	113ffe04 	addi	r4,r2,-8
    c3cc:	00c007c4 	movi	r3,31
    c3d0:	19007b16 	blt	r3,r4,c5c0 <__subdf3+0x390>
    c3d4:	00800804 	movi	r2,32
    c3d8:	1105c83a 	sub	r2,r2,r4
    c3dc:	8884d83a 	srl	r2,r17,r2
    c3e0:	9906983a 	sll	r3,r19,r4
    c3e4:	8922983a 	sll	r17,r17,r4
    c3e8:	10c4b03a 	or	r2,r2,r3
    c3ec:	24007816 	blt	r4,r16,c5d0 <__subdf3+0x3a0>
    c3f0:	2421c83a 	sub	r16,r4,r16
    c3f4:	80c00044 	addi	r3,r16,1
    c3f8:	010007c4 	movi	r4,31
    c3fc:	20c09516 	blt	r4,r3,c654 <__subdf3+0x424>
    c400:	01400804 	movi	r5,32
    c404:	28cbc83a 	sub	r5,r5,r3
    c408:	88c8d83a 	srl	r4,r17,r3
    c40c:	8962983a 	sll	r17,r17,r5
    c410:	114a983a 	sll	r5,r2,r5
    c414:	10c6d83a 	srl	r3,r2,r3
    c418:	8804c03a 	cmpne	r2,r17,zero
    c41c:	290ab03a 	or	r5,r5,r4
    c420:	28a2b03a 	or	r17,r5,r2
    c424:	0021883a 	mov	r16,zero
    c428:	003fa206 	br	c2b4 <__subdf3+0x84>
    c42c:	2090b03a 	or	r8,r4,r2
    c430:	40018e26 	beq	r8,zero,ca6c <__subdf3+0x83c>
    c434:	1007883a 	mov	r3,r2
    c438:	2023883a 	mov	r17,r4
    c43c:	888001cc 	andi	r2,r17,7
    c440:	103f9e1e 	bne	r2,zero,c2bc <__subdf3+0x8c>
    c444:	1804977a 	slli	r2,r3,29
    c448:	8822d0fa 	srli	r17,r17,3
    c44c:	1810d0fa 	srli	r8,r3,3
    c450:	9100004c 	andi	r4,r18,1
    c454:	1444b03a 	or	r2,r2,r17
    c458:	00c1ffc4 	movi	r3,2047
    c45c:	80c02826 	beq	r16,r3,c500 <__subdf3+0x2d0>
    c460:	01400434 	movhi	r5,16
    c464:	297fffc4 	addi	r5,r5,-1
    c468:	80e0703a 	and	r16,r16,r3
    c46c:	414a703a 	and	r5,r8,r5
    c470:	003fa806 	br	c314 <__subdf3+0xe4>
    c474:	0080630e 	bge	zero,r2,c604 <__subdf3+0x3d4>
    c478:	48003026 	beq	r9,zero,c53c <__subdf3+0x30c>
    c47c:	0101ffc4 	movi	r4,2047
    c480:	813f8c26 	beq	r16,r4,c2b4 <__subdf3+0x84>
    c484:	29402034 	orhi	r5,r5,128
    c488:	01000e04 	movi	r4,56
    c48c:	2080a90e 	bge	r4,r2,c734 <__subdf3+0x504>
    c490:	298cb03a 	or	r6,r5,r6
    c494:	3012c03a 	cmpne	r9,r6,zero
    c498:	0005883a 	mov	r2,zero
    c49c:	4c53883a 	add	r9,r9,r17
    c4a0:	4c63803a 	cmpltu	r17,r9,r17
    c4a4:	10c7883a 	add	r3,r2,r3
    c4a8:	88c7883a 	add	r3,r17,r3
    c4ac:	4823883a 	mov	r17,r9
    c4b0:	1880202c 	andhi	r2,r3,128
    c4b4:	1000d026 	beq	r2,zero,c7f8 <__subdf3+0x5c8>
    c4b8:	84000044 	addi	r16,r16,1
    c4bc:	0081ffc4 	movi	r2,2047
    c4c0:	8080fe26 	beq	r16,r2,c8bc <__subdf3+0x68c>
    c4c4:	00bfe034 	movhi	r2,65408
    c4c8:	10bfffc4 	addi	r2,r2,-1
    c4cc:	1886703a 	and	r3,r3,r2
    c4d0:	880ad07a 	srli	r5,r17,1
    c4d4:	180497fa 	slli	r2,r3,31
    c4d8:	8900004c 	andi	r4,r17,1
    c4dc:	2922b03a 	or	r17,r5,r4
    c4e0:	1806d07a 	srli	r3,r3,1
    c4e4:	1462b03a 	or	r17,r2,r17
    c4e8:	3825883a 	mov	r18,r7
    c4ec:	003f7106 	br	c2b4 <__subdf3+0x84>
    c4f0:	2984b03a 	or	r2,r5,r6
    c4f4:	103f6826 	beq	r2,zero,c298 <__subdf3+0x68>
    c4f8:	39c03fcc 	andi	r7,r7,255
    c4fc:	003f6706 	br	c29c <__subdf3+0x6c>
    c500:	4086b03a 	or	r3,r8,r2
    c504:	18015226 	beq	r3,zero,ca50 <__subdf3+0x820>
    c508:	00c00434 	movhi	r3,16
    c50c:	41400234 	orhi	r5,r8,8
    c510:	18ffffc4 	addi	r3,r3,-1
    c514:	28ca703a 	and	r5,r5,r3
    c518:	003f7e06 	br	c314 <__subdf3+0xe4>
    c51c:	10bfffc4 	addi	r2,r2,-1
    c520:	1000491e 	bne	r2,zero,c648 <__subdf3+0x418>
    c524:	898fc83a 	sub	r7,r17,r6
    c528:	89e3803a 	cmpltu	r17,r17,r7
    c52c:	1947c83a 	sub	r3,r3,r5
    c530:	1c47c83a 	sub	r3,r3,r17
    c534:	3823883a 	mov	r17,r7
    c538:	003f9b06 	br	c3a8 <__subdf3+0x178>
    c53c:	2988b03a 	or	r4,r5,r6
    c540:	203f5c26 	beq	r4,zero,c2b4 <__subdf3+0x84>
    c544:	10bfffc4 	addi	r2,r2,-1
    c548:	1000931e 	bne	r2,zero,c798 <__subdf3+0x568>
    c54c:	898d883a 	add	r6,r17,r6
    c550:	3463803a 	cmpltu	r17,r6,r17
    c554:	1947883a 	add	r3,r3,r5
    c558:	88c7883a 	add	r3,r17,r3
    c55c:	3023883a 	mov	r17,r6
    c560:	003fd306 	br	c4b0 <__subdf3+0x280>
    c564:	1000541e 	bne	r2,zero,c6b8 <__subdf3+0x488>
    c568:	80800044 	addi	r2,r16,1
    c56c:	1081ffcc 	andi	r2,r2,2047
    c570:	01000044 	movi	r4,1
    c574:	2080a20e 	bge	r4,r2,c800 <__subdf3+0x5d0>
    c578:	8989c83a 	sub	r4,r17,r6
    c57c:	8905803a 	cmpltu	r2,r17,r4
    c580:	1967c83a 	sub	r19,r3,r5
    c584:	98a7c83a 	sub	r19,r19,r2
    c588:	9880202c 	andhi	r2,r19,128
    c58c:	10006326 	beq	r2,zero,c71c <__subdf3+0x4ec>
    c590:	3463c83a 	sub	r17,r6,r17
    c594:	28c7c83a 	sub	r3,r5,r3
    c598:	344d803a 	cmpltu	r6,r6,r17
    c59c:	19a7c83a 	sub	r19,r3,r6
    c5a0:	3825883a 	mov	r18,r7
    c5a4:	983f861e 	bne	r19,zero,c3c0 <__subdf3+0x190>
    c5a8:	8809883a 	mov	r4,r17
    c5ac:	000cd300 	call	cd30 <__clzsi2>
    c5b0:	10800804 	addi	r2,r2,32
    c5b4:	113ffe04 	addi	r4,r2,-8
    c5b8:	00c007c4 	movi	r3,31
    c5bc:	193f850e 	bge	r3,r4,c3d4 <__subdf3+0x1a4>
    c5c0:	10bff604 	addi	r2,r2,-40
    c5c4:	8884983a 	sll	r2,r17,r2
    c5c8:	0023883a 	mov	r17,zero
    c5cc:	243f880e 	bge	r4,r16,c3f0 <__subdf3+0x1c0>
    c5d0:	00ffe034 	movhi	r3,65408
    c5d4:	18ffffc4 	addi	r3,r3,-1
    c5d8:	8121c83a 	sub	r16,r16,r4
    c5dc:	10c6703a 	and	r3,r2,r3
    c5e0:	003f3406 	br	c2b4 <__subdf3+0x84>
    c5e4:	9100004c 	andi	r4,r18,1
    c5e8:	000b883a 	mov	r5,zero
    c5ec:	0005883a 	mov	r2,zero
    c5f0:	003f4806 	br	c314 <__subdf3+0xe4>
    c5f4:	298cb03a 	or	r6,r5,r6
    c5f8:	300cc03a 	cmpne	r6,r6,zero
    c5fc:	0005883a 	mov	r2,zero
    c600:	003f6406 	br	c394 <__subdf3+0x164>
    c604:	10009a1e 	bne	r2,zero,c870 <__subdf3+0x640>
    c608:	82400044 	addi	r9,r16,1
    c60c:	4881ffcc 	andi	r2,r9,2047
    c610:	02800044 	movi	r10,1
    c614:	5080670e 	bge	r10,r2,c7b4 <__subdf3+0x584>
    c618:	0081ffc4 	movi	r2,2047
    c61c:	4880af26 	beq	r9,r2,c8dc <__subdf3+0x6ac>
    c620:	898d883a 	add	r6,r17,r6
    c624:	1945883a 	add	r2,r3,r5
    c628:	3447803a 	cmpltu	r3,r6,r17
    c62c:	1887883a 	add	r3,r3,r2
    c630:	182297fa 	slli	r17,r3,31
    c634:	300cd07a 	srli	r6,r6,1
    c638:	1806d07a 	srli	r3,r3,1
    c63c:	4821883a 	mov	r16,r9
    c640:	89a2b03a 	or	r17,r17,r6
    c644:	003f1b06 	br	c2b4 <__subdf3+0x84>
    c648:	0101ffc4 	movi	r4,2047
    c64c:	813f441e 	bne	r16,r4,c360 <__subdf3+0x130>
    c650:	003f1806 	br	c2b4 <__subdf3+0x84>
    c654:	843ff844 	addi	r16,r16,-31
    c658:	01400804 	movi	r5,32
    c65c:	1408d83a 	srl	r4,r2,r16
    c660:	19405026 	beq	r3,r5,c7a4 <__subdf3+0x574>
    c664:	01401004 	movi	r5,64
    c668:	28c7c83a 	sub	r3,r5,r3
    c66c:	10c4983a 	sll	r2,r2,r3
    c670:	88a2b03a 	or	r17,r17,r2
    c674:	8822c03a 	cmpne	r17,r17,zero
    c678:	2462b03a 	or	r17,r4,r17
    c67c:	0007883a 	mov	r3,zero
    c680:	0021883a 	mov	r16,zero
    c684:	003f6d06 	br	c43c <__subdf3+0x20c>
    c688:	11fff804 	addi	r7,r2,-32
    c68c:	01000804 	movi	r4,32
    c690:	29ced83a 	srl	r7,r5,r7
    c694:	11004526 	beq	r2,r4,c7ac <__subdf3+0x57c>
    c698:	01001004 	movi	r4,64
    c69c:	2089c83a 	sub	r4,r4,r2
    c6a0:	2904983a 	sll	r2,r5,r4
    c6a4:	118cb03a 	or	r6,r2,r6
    c6a8:	300cc03a 	cmpne	r6,r6,zero
    c6ac:	398cb03a 	or	r6,r7,r6
    c6b0:	0005883a 	mov	r2,zero
    c6b4:	003f3706 	br	c394 <__subdf3+0x164>
    c6b8:	80002a26 	beq	r16,zero,c764 <__subdf3+0x534>
    c6bc:	0101ffc4 	movi	r4,2047
    c6c0:	49006626 	beq	r9,r4,c85c <__subdf3+0x62c>
    c6c4:	0085c83a 	sub	r2,zero,r2
    c6c8:	18c02034 	orhi	r3,r3,128
    c6cc:	01000e04 	movi	r4,56
    c6d0:	20807e16 	blt	r4,r2,c8cc <__subdf3+0x69c>
    c6d4:	010007c4 	movi	r4,31
    c6d8:	2080e716 	blt	r4,r2,ca78 <__subdf3+0x848>
    c6dc:	01000804 	movi	r4,32
    c6e0:	2089c83a 	sub	r4,r4,r2
    c6e4:	1914983a 	sll	r10,r3,r4
    c6e8:	8890d83a 	srl	r8,r17,r2
    c6ec:	8908983a 	sll	r4,r17,r4
    c6f0:	1884d83a 	srl	r2,r3,r2
    c6f4:	5222b03a 	or	r17,r10,r8
    c6f8:	2006c03a 	cmpne	r3,r4,zero
    c6fc:	88e2b03a 	or	r17,r17,r3
    c700:	3463c83a 	sub	r17,r6,r17
    c704:	2885c83a 	sub	r2,r5,r2
    c708:	344d803a 	cmpltu	r6,r6,r17
    c70c:	1187c83a 	sub	r3,r2,r6
    c710:	4821883a 	mov	r16,r9
    c714:	3825883a 	mov	r18,r7
    c718:	003f2306 	br	c3a8 <__subdf3+0x178>
    c71c:	24d0b03a 	or	r8,r4,r19
    c720:	40001b1e 	bne	r8,zero,c790 <__subdf3+0x560>
    c724:	0005883a 	mov	r2,zero
    c728:	0009883a 	mov	r4,zero
    c72c:	0021883a 	mov	r16,zero
    c730:	003f4906 	br	c458 <__subdf3+0x228>
    c734:	010007c4 	movi	r4,31
    c738:	20803a16 	blt	r4,r2,c824 <__subdf3+0x5f4>
    c73c:	01000804 	movi	r4,32
    c740:	2089c83a 	sub	r4,r4,r2
    c744:	2912983a 	sll	r9,r5,r4
    c748:	3090d83a 	srl	r8,r6,r2
    c74c:	3108983a 	sll	r4,r6,r4
    c750:	2884d83a 	srl	r2,r5,r2
    c754:	4a12b03a 	or	r9,r9,r8
    c758:	2008c03a 	cmpne	r4,r4,zero
    c75c:	4912b03a 	or	r9,r9,r4
    c760:	003f4e06 	br	c49c <__subdf3+0x26c>
    c764:	1c48b03a 	or	r4,r3,r17
    c768:	20003c26 	beq	r4,zero,c85c <__subdf3+0x62c>
    c76c:	0084303a 	nor	r2,zero,r2
    c770:	1000381e 	bne	r2,zero,c854 <__subdf3+0x624>
    c774:	3463c83a 	sub	r17,r6,r17
    c778:	28c5c83a 	sub	r2,r5,r3
    c77c:	344d803a 	cmpltu	r6,r6,r17
    c780:	1187c83a 	sub	r3,r2,r6
    c784:	4821883a 	mov	r16,r9
    c788:	3825883a 	mov	r18,r7
    c78c:	003f0606 	br	c3a8 <__subdf3+0x178>
    c790:	2023883a 	mov	r17,r4
    c794:	003f0906 	br	c3bc <__subdf3+0x18c>
    c798:	0101ffc4 	movi	r4,2047
    c79c:	813f3a1e 	bne	r16,r4,c488 <__subdf3+0x258>
    c7a0:	003ec406 	br	c2b4 <__subdf3+0x84>
    c7a4:	0005883a 	mov	r2,zero
    c7a8:	003fb106 	br	c670 <__subdf3+0x440>
    c7ac:	0005883a 	mov	r2,zero
    c7b0:	003fbc06 	br	c6a4 <__subdf3+0x474>
    c7b4:	1c44b03a 	or	r2,r3,r17
    c7b8:	80008e1e 	bne	r16,zero,c9f4 <__subdf3+0x7c4>
    c7bc:	1000c826 	beq	r2,zero,cae0 <__subdf3+0x8b0>
    c7c0:	2984b03a 	or	r2,r5,r6
    c7c4:	103ebb26 	beq	r2,zero,c2b4 <__subdf3+0x84>
    c7c8:	8989883a 	add	r4,r17,r6
    c7cc:	1945883a 	add	r2,r3,r5
    c7d0:	2447803a 	cmpltu	r3,r4,r17
    c7d4:	1887883a 	add	r3,r3,r2
    c7d8:	1880202c 	andhi	r2,r3,128
    c7dc:	2023883a 	mov	r17,r4
    c7e0:	103f1626 	beq	r2,zero,c43c <__subdf3+0x20c>
    c7e4:	00bfe034 	movhi	r2,65408
    c7e8:	10bfffc4 	addi	r2,r2,-1
    c7ec:	5021883a 	mov	r16,r10
    c7f0:	1886703a 	and	r3,r3,r2
    c7f4:	003eaf06 	br	c2b4 <__subdf3+0x84>
    c7f8:	3825883a 	mov	r18,r7
    c7fc:	003f0f06 	br	c43c <__subdf3+0x20c>
    c800:	1c44b03a 	or	r2,r3,r17
    c804:	8000251e 	bne	r16,zero,c89c <__subdf3+0x66c>
    c808:	1000661e 	bne	r2,zero,c9a4 <__subdf3+0x774>
    c80c:	2990b03a 	or	r8,r5,r6
    c810:	40009626 	beq	r8,zero,ca6c <__subdf3+0x83c>
    c814:	2807883a 	mov	r3,r5
    c818:	3023883a 	mov	r17,r6
    c81c:	3825883a 	mov	r18,r7
    c820:	003ea406 	br	c2b4 <__subdf3+0x84>
    c824:	127ff804 	addi	r9,r2,-32
    c828:	01000804 	movi	r4,32
    c82c:	2a52d83a 	srl	r9,r5,r9
    c830:	11008c26 	beq	r2,r4,ca64 <__subdf3+0x834>
    c834:	01001004 	movi	r4,64
    c838:	2085c83a 	sub	r2,r4,r2
    c83c:	2884983a 	sll	r2,r5,r2
    c840:	118cb03a 	or	r6,r2,r6
    c844:	300cc03a 	cmpne	r6,r6,zero
    c848:	4992b03a 	or	r9,r9,r6
    c84c:	0005883a 	mov	r2,zero
    c850:	003f1206 	br	c49c <__subdf3+0x26c>
    c854:	0101ffc4 	movi	r4,2047
    c858:	493f9c1e 	bne	r9,r4,c6cc <__subdf3+0x49c>
    c85c:	2807883a 	mov	r3,r5
    c860:	3023883a 	mov	r17,r6
    c864:	4821883a 	mov	r16,r9
    c868:	3825883a 	mov	r18,r7
    c86c:	003e9106 	br	c2b4 <__subdf3+0x84>
    c870:	80001f1e 	bne	r16,zero,c8f0 <__subdf3+0x6c0>
    c874:	1c48b03a 	or	r4,r3,r17
    c878:	20005a26 	beq	r4,zero,c9e4 <__subdf3+0x7b4>
    c87c:	0084303a 	nor	r2,zero,r2
    c880:	1000561e 	bne	r2,zero,c9dc <__subdf3+0x7ac>
    c884:	89a3883a 	add	r17,r17,r6
    c888:	1945883a 	add	r2,r3,r5
    c88c:	898d803a 	cmpltu	r6,r17,r6
    c890:	3087883a 	add	r3,r6,r2
    c894:	4821883a 	mov	r16,r9
    c898:	003f0506 	br	c4b0 <__subdf3+0x280>
    c89c:	10002b1e 	bne	r2,zero,c94c <__subdf3+0x71c>
    c8a0:	2984b03a 	or	r2,r5,r6
    c8a4:	10008026 	beq	r2,zero,caa8 <__subdf3+0x878>
    c8a8:	2807883a 	mov	r3,r5
    c8ac:	3023883a 	mov	r17,r6
    c8b0:	3825883a 	mov	r18,r7
    c8b4:	0401ffc4 	movi	r16,2047
    c8b8:	003e7e06 	br	c2b4 <__subdf3+0x84>
    c8bc:	3809883a 	mov	r4,r7
    c8c0:	0011883a 	mov	r8,zero
    c8c4:	0005883a 	mov	r2,zero
    c8c8:	003ee306 	br	c458 <__subdf3+0x228>
    c8cc:	1c62b03a 	or	r17,r3,r17
    c8d0:	8822c03a 	cmpne	r17,r17,zero
    c8d4:	0005883a 	mov	r2,zero
    c8d8:	003f8906 	br	c700 <__subdf3+0x4d0>
    c8dc:	3809883a 	mov	r4,r7
    c8e0:	4821883a 	mov	r16,r9
    c8e4:	0011883a 	mov	r8,zero
    c8e8:	0005883a 	mov	r2,zero
    c8ec:	003eda06 	br	c458 <__subdf3+0x228>
    c8f0:	0101ffc4 	movi	r4,2047
    c8f4:	49003b26 	beq	r9,r4,c9e4 <__subdf3+0x7b4>
    c8f8:	0085c83a 	sub	r2,zero,r2
    c8fc:	18c02034 	orhi	r3,r3,128
    c900:	01000e04 	movi	r4,56
    c904:	20806e16 	blt	r4,r2,cac0 <__subdf3+0x890>
    c908:	010007c4 	movi	r4,31
    c90c:	20807716 	blt	r4,r2,caec <__subdf3+0x8bc>
    c910:	01000804 	movi	r4,32
    c914:	2089c83a 	sub	r4,r4,r2
    c918:	1914983a 	sll	r10,r3,r4
    c91c:	8890d83a 	srl	r8,r17,r2
    c920:	8908983a 	sll	r4,r17,r4
    c924:	1884d83a 	srl	r2,r3,r2
    c928:	5222b03a 	or	r17,r10,r8
    c92c:	2006c03a 	cmpne	r3,r4,zero
    c930:	88e2b03a 	or	r17,r17,r3
    c934:	89a3883a 	add	r17,r17,r6
    c938:	1145883a 	add	r2,r2,r5
    c93c:	898d803a 	cmpltu	r6,r17,r6
    c940:	3087883a 	add	r3,r6,r2
    c944:	4821883a 	mov	r16,r9
    c948:	003ed906 	br	c4b0 <__subdf3+0x280>
    c94c:	2984b03a 	or	r2,r5,r6
    c950:	10004226 	beq	r2,zero,ca5c <__subdf3+0x82c>
    c954:	1808d0fa 	srli	r4,r3,3
    c958:	8822d0fa 	srli	r17,r17,3
    c95c:	1806977a 	slli	r3,r3,29
    c960:	2080022c 	andhi	r2,r4,8
    c964:	1c62b03a 	or	r17,r3,r17
    c968:	10000826 	beq	r2,zero,c98c <__subdf3+0x75c>
    c96c:	2812d0fa 	srli	r9,r5,3
    c970:	4880022c 	andhi	r2,r9,8
    c974:	1000051e 	bne	r2,zero,c98c <__subdf3+0x75c>
    c978:	300cd0fa 	srli	r6,r6,3
    c97c:	2804977a 	slli	r2,r5,29
    c980:	4809883a 	mov	r4,r9
    c984:	3825883a 	mov	r18,r7
    c988:	11a2b03a 	or	r17,r2,r6
    c98c:	8806d77a 	srli	r3,r17,29
    c990:	200890fa 	slli	r4,r4,3
    c994:	882290fa 	slli	r17,r17,3
    c998:	0401ffc4 	movi	r16,2047
    c99c:	1906b03a 	or	r3,r3,r4
    c9a0:	003e4406 	br	c2b4 <__subdf3+0x84>
    c9a4:	2984b03a 	or	r2,r5,r6
    c9a8:	103e4226 	beq	r2,zero,c2b4 <__subdf3+0x84>
    c9ac:	8989c83a 	sub	r4,r17,r6
    c9b0:	8911803a 	cmpltu	r8,r17,r4
    c9b4:	1945c83a 	sub	r2,r3,r5
    c9b8:	1205c83a 	sub	r2,r2,r8
    c9bc:	1200202c 	andhi	r8,r2,128
    c9c0:	403e9a26 	beq	r8,zero,c42c <__subdf3+0x1fc>
    c9c4:	3463c83a 	sub	r17,r6,r17
    c9c8:	28c5c83a 	sub	r2,r5,r3
    c9cc:	344d803a 	cmpltu	r6,r6,r17
    c9d0:	1187c83a 	sub	r3,r2,r6
    c9d4:	3825883a 	mov	r18,r7
    c9d8:	003e3606 	br	c2b4 <__subdf3+0x84>
    c9dc:	0101ffc4 	movi	r4,2047
    c9e0:	493fc71e 	bne	r9,r4,c900 <__subdf3+0x6d0>
    c9e4:	2807883a 	mov	r3,r5
    c9e8:	3023883a 	mov	r17,r6
    c9ec:	4821883a 	mov	r16,r9
    c9f0:	003e3006 	br	c2b4 <__subdf3+0x84>
    c9f4:	10003626 	beq	r2,zero,cad0 <__subdf3+0x8a0>
    c9f8:	2984b03a 	or	r2,r5,r6
    c9fc:	10001726 	beq	r2,zero,ca5c <__subdf3+0x82c>
    ca00:	1808d0fa 	srli	r4,r3,3
    ca04:	8822d0fa 	srli	r17,r17,3
    ca08:	1806977a 	slli	r3,r3,29
    ca0c:	2080022c 	andhi	r2,r4,8
    ca10:	1c62b03a 	or	r17,r3,r17
    ca14:	10000726 	beq	r2,zero,ca34 <__subdf3+0x804>
    ca18:	2812d0fa 	srli	r9,r5,3
    ca1c:	4880022c 	andhi	r2,r9,8
    ca20:	1000041e 	bne	r2,zero,ca34 <__subdf3+0x804>
    ca24:	300cd0fa 	srli	r6,r6,3
    ca28:	2804977a 	slli	r2,r5,29
    ca2c:	4809883a 	mov	r4,r9
    ca30:	11a2b03a 	or	r17,r2,r6
    ca34:	8806d77a 	srli	r3,r17,29
    ca38:	200890fa 	slli	r4,r4,3
    ca3c:	882290fa 	slli	r17,r17,3
    ca40:	3825883a 	mov	r18,r7
    ca44:	1906b03a 	or	r3,r3,r4
    ca48:	0401ffc4 	movi	r16,2047
    ca4c:	003e1906 	br	c2b4 <__subdf3+0x84>
    ca50:	000b883a 	mov	r5,zero
    ca54:	0005883a 	mov	r2,zero
    ca58:	003e2e06 	br	c314 <__subdf3+0xe4>
    ca5c:	0401ffc4 	movi	r16,2047
    ca60:	003e1406 	br	c2b4 <__subdf3+0x84>
    ca64:	0005883a 	mov	r2,zero
    ca68:	003f7506 	br	c840 <__subdf3+0x610>
    ca6c:	0005883a 	mov	r2,zero
    ca70:	0009883a 	mov	r4,zero
    ca74:	003e7806 	br	c458 <__subdf3+0x228>
    ca78:	123ff804 	addi	r8,r2,-32
    ca7c:	01000804 	movi	r4,32
    ca80:	1a10d83a 	srl	r8,r3,r8
    ca84:	11002526 	beq	r2,r4,cb1c <__subdf3+0x8ec>
    ca88:	01001004 	movi	r4,64
    ca8c:	2085c83a 	sub	r2,r4,r2
    ca90:	1884983a 	sll	r2,r3,r2
    ca94:	1444b03a 	or	r2,r2,r17
    ca98:	1004c03a 	cmpne	r2,r2,zero
    ca9c:	40a2b03a 	or	r17,r8,r2
    caa0:	0005883a 	mov	r2,zero
    caa4:	003f1606 	br	c700 <__subdf3+0x4d0>
    caa8:	02000434 	movhi	r8,16
    caac:	0009883a 	mov	r4,zero
    cab0:	423fffc4 	addi	r8,r8,-1
    cab4:	00bfffc4 	movi	r2,-1
    cab8:	0401ffc4 	movi	r16,2047
    cabc:	003e6606 	br	c458 <__subdf3+0x228>
    cac0:	1c62b03a 	or	r17,r3,r17
    cac4:	8822c03a 	cmpne	r17,r17,zero
    cac8:	0005883a 	mov	r2,zero
    cacc:	003f9906 	br	c934 <__subdf3+0x704>
    cad0:	2807883a 	mov	r3,r5
    cad4:	3023883a 	mov	r17,r6
    cad8:	0401ffc4 	movi	r16,2047
    cadc:	003df506 	br	c2b4 <__subdf3+0x84>
    cae0:	2807883a 	mov	r3,r5
    cae4:	3023883a 	mov	r17,r6
    cae8:	003df206 	br	c2b4 <__subdf3+0x84>
    caec:	123ff804 	addi	r8,r2,-32
    caf0:	01000804 	movi	r4,32
    caf4:	1a10d83a 	srl	r8,r3,r8
    caf8:	11000a26 	beq	r2,r4,cb24 <__subdf3+0x8f4>
    cafc:	01001004 	movi	r4,64
    cb00:	2085c83a 	sub	r2,r4,r2
    cb04:	1884983a 	sll	r2,r3,r2
    cb08:	1444b03a 	or	r2,r2,r17
    cb0c:	1004c03a 	cmpne	r2,r2,zero
    cb10:	40a2b03a 	or	r17,r8,r2
    cb14:	0005883a 	mov	r2,zero
    cb18:	003f8606 	br	c934 <__subdf3+0x704>
    cb1c:	0005883a 	mov	r2,zero
    cb20:	003fdc06 	br	ca94 <__subdf3+0x864>
    cb24:	0005883a 	mov	r2,zero
    cb28:	003ff706 	br	cb08 <__subdf3+0x8d8>

0000cb2c <__fixdfsi>:
    cb2c:	280cd53a 	srli	r6,r5,20
    cb30:	00c00434 	movhi	r3,16
    cb34:	18ffffc4 	addi	r3,r3,-1
    cb38:	3181ffcc 	andi	r6,r6,2047
    cb3c:	01c0ff84 	movi	r7,1022
    cb40:	28c6703a 	and	r3,r5,r3
    cb44:	280ad7fa 	srli	r5,r5,31
    cb48:	3980120e 	bge	r7,r6,cb94 <__fixdfsi+0x68>
    cb4c:	00810744 	movi	r2,1053
    cb50:	11800c16 	blt	r2,r6,cb84 <__fixdfsi+0x58>
    cb54:	00810cc4 	movi	r2,1075
    cb58:	1185c83a 	sub	r2,r2,r6
    cb5c:	01c007c4 	movi	r7,31
    cb60:	18c00434 	orhi	r3,r3,16
    cb64:	38800d16 	blt	r7,r2,cb9c <__fixdfsi+0x70>
    cb68:	31befb44 	addi	r6,r6,-1043
    cb6c:	2084d83a 	srl	r2,r4,r2
    cb70:	1986983a 	sll	r3,r3,r6
    cb74:	1884b03a 	or	r2,r3,r2
    cb78:	28000726 	beq	r5,zero,cb98 <__fixdfsi+0x6c>
    cb7c:	0085c83a 	sub	r2,zero,r2
    cb80:	f800283a 	ret
    cb84:	00a00034 	movhi	r2,32768
    cb88:	10bfffc4 	addi	r2,r2,-1
    cb8c:	2885883a 	add	r2,r5,r2
    cb90:	f800283a 	ret
    cb94:	0005883a 	mov	r2,zero
    cb98:	f800283a 	ret
    cb9c:	008104c4 	movi	r2,1043
    cba0:	1185c83a 	sub	r2,r2,r6
    cba4:	1884d83a 	srl	r2,r3,r2
    cba8:	003ff306 	br	cb78 <__fixdfsi+0x4c>

0000cbac <__floatsidf>:
    cbac:	defffd04 	addi	sp,sp,-12
    cbb0:	dfc00215 	stw	ra,8(sp)
    cbb4:	dc400115 	stw	r17,4(sp)
    cbb8:	dc000015 	stw	r16,0(sp)
    cbbc:	20002b26 	beq	r4,zero,cc6c <__floatsidf+0xc0>
    cbc0:	2023883a 	mov	r17,r4
    cbc4:	2020d7fa 	srli	r16,r4,31
    cbc8:	20002d16 	blt	r4,zero,cc80 <__floatsidf+0xd4>
    cbcc:	8809883a 	mov	r4,r17
    cbd0:	000cd300 	call	cd30 <__clzsi2>
    cbd4:	01410784 	movi	r5,1054
    cbd8:	288bc83a 	sub	r5,r5,r2
    cbdc:	01010cc4 	movi	r4,1075
    cbe0:	2149c83a 	sub	r4,r4,r5
    cbe4:	00c007c4 	movi	r3,31
    cbe8:	1900160e 	bge	r3,r4,cc44 <__floatsidf+0x98>
    cbec:	00c104c4 	movi	r3,1043
    cbf0:	1947c83a 	sub	r3,r3,r5
    cbf4:	88c6983a 	sll	r3,r17,r3
    cbf8:	00800434 	movhi	r2,16
    cbfc:	10bfffc4 	addi	r2,r2,-1
    cc00:	1886703a 	and	r3,r3,r2
    cc04:	2941ffcc 	andi	r5,r5,2047
    cc08:	800d883a 	mov	r6,r16
    cc0c:	0005883a 	mov	r2,zero
    cc10:	280a953a 	slli	r5,r5,20
    cc14:	31803fcc 	andi	r6,r6,255
    cc18:	01000434 	movhi	r4,16
    cc1c:	300c97fa 	slli	r6,r6,31
    cc20:	213fffc4 	addi	r4,r4,-1
    cc24:	1906703a 	and	r3,r3,r4
    cc28:	1946b03a 	or	r3,r3,r5
    cc2c:	1986b03a 	or	r3,r3,r6
    cc30:	dfc00217 	ldw	ra,8(sp)
    cc34:	dc400117 	ldw	r17,4(sp)
    cc38:	dc000017 	ldw	r16,0(sp)
    cc3c:	dec00304 	addi	sp,sp,12
    cc40:	f800283a 	ret
    cc44:	00c002c4 	movi	r3,11
    cc48:	1887c83a 	sub	r3,r3,r2
    cc4c:	88c6d83a 	srl	r3,r17,r3
    cc50:	8904983a 	sll	r2,r17,r4
    cc54:	01000434 	movhi	r4,16
    cc58:	213fffc4 	addi	r4,r4,-1
    cc5c:	2941ffcc 	andi	r5,r5,2047
    cc60:	1906703a 	and	r3,r3,r4
    cc64:	800d883a 	mov	r6,r16
    cc68:	003fe906 	br	cc10 <__floatsidf+0x64>
    cc6c:	000d883a 	mov	r6,zero
    cc70:	000b883a 	mov	r5,zero
    cc74:	0007883a 	mov	r3,zero
    cc78:	0005883a 	mov	r2,zero
    cc7c:	003fe406 	br	cc10 <__floatsidf+0x64>
    cc80:	0123c83a 	sub	r17,zero,r4
    cc84:	003fd106 	br	cbcc <__floatsidf+0x20>

0000cc88 <__floatunsidf>:
    cc88:	defffe04 	addi	sp,sp,-8
    cc8c:	dc000015 	stw	r16,0(sp)
    cc90:	dfc00115 	stw	ra,4(sp)
    cc94:	2021883a 	mov	r16,r4
    cc98:	20002226 	beq	r4,zero,cd24 <__floatunsidf+0x9c>
    cc9c:	000cd300 	call	cd30 <__clzsi2>
    cca0:	01010784 	movi	r4,1054
    cca4:	2089c83a 	sub	r4,r4,r2
    cca8:	01810cc4 	movi	r6,1075
    ccac:	310dc83a 	sub	r6,r6,r4
    ccb0:	00c007c4 	movi	r3,31
    ccb4:	1980120e 	bge	r3,r6,cd00 <__floatunsidf+0x78>
    ccb8:	00c104c4 	movi	r3,1043
    ccbc:	1907c83a 	sub	r3,r3,r4
    ccc0:	80ca983a 	sll	r5,r16,r3
    ccc4:	00800434 	movhi	r2,16
    ccc8:	10bfffc4 	addi	r2,r2,-1
    cccc:	2101ffcc 	andi	r4,r4,2047
    ccd0:	0021883a 	mov	r16,zero
    ccd4:	288a703a 	and	r5,r5,r2
    ccd8:	2008953a 	slli	r4,r4,20
    ccdc:	00c00434 	movhi	r3,16
    cce0:	18ffffc4 	addi	r3,r3,-1
    cce4:	28c6703a 	and	r3,r5,r3
    cce8:	8005883a 	mov	r2,r16
    ccec:	1906b03a 	or	r3,r3,r4
    ccf0:	dfc00117 	ldw	ra,4(sp)
    ccf4:	dc000017 	ldw	r16,0(sp)
    ccf8:	dec00204 	addi	sp,sp,8
    ccfc:	f800283a 	ret
    cd00:	00c002c4 	movi	r3,11
    cd04:	188bc83a 	sub	r5,r3,r2
    cd08:	814ad83a 	srl	r5,r16,r5
    cd0c:	00c00434 	movhi	r3,16
    cd10:	18ffffc4 	addi	r3,r3,-1
    cd14:	81a0983a 	sll	r16,r16,r6
    cd18:	2101ffcc 	andi	r4,r4,2047
    cd1c:	28ca703a 	and	r5,r5,r3
    cd20:	003fed06 	br	ccd8 <__floatunsidf+0x50>
    cd24:	0009883a 	mov	r4,zero
    cd28:	000b883a 	mov	r5,zero
    cd2c:	003fea06 	br	ccd8 <__floatunsidf+0x50>

0000cd30 <__clzsi2>:
    cd30:	00bfffd4 	movui	r2,65535
    cd34:	11000536 	bltu	r2,r4,cd4c <__clzsi2+0x1c>
    cd38:	00803fc4 	movi	r2,255
    cd3c:	11000f36 	bltu	r2,r4,cd7c <__clzsi2+0x4c>
    cd40:	00800804 	movi	r2,32
    cd44:	0007883a 	mov	r3,zero
    cd48:	00000506 	br	cd60 <__clzsi2+0x30>
    cd4c:	00804034 	movhi	r2,256
    cd50:	10bfffc4 	addi	r2,r2,-1
    cd54:	11000c2e 	bgeu	r2,r4,cd88 <__clzsi2+0x58>
    cd58:	00800204 	movi	r2,8
    cd5c:	00c00604 	movi	r3,24
    cd60:	20c8d83a 	srl	r4,r4,r3
    cd64:	00c00074 	movhi	r3,1
    cd68:	18fdd204 	addi	r3,r3,-2232
    cd6c:	1909883a 	add	r4,r3,r4
    cd70:	20c00003 	ldbu	r3,0(r4)
    cd74:	10c5c83a 	sub	r2,r2,r3
    cd78:	f800283a 	ret
    cd7c:	00800604 	movi	r2,24
    cd80:	00c00204 	movi	r3,8
    cd84:	003ff606 	br	cd60 <__clzsi2+0x30>
    cd88:	00800404 	movi	r2,16
    cd8c:	1007883a 	mov	r3,r2
    cd90:	003ff306 	br	cd60 <__clzsi2+0x30>

0000cd94 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cd94:	defffe04 	addi	sp,sp,-8
    cd98:	dfc00115 	stw	ra,4(sp)
    cd9c:	df000015 	stw	fp,0(sp)
    cda0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cda4:	d0a00b17 	ldw	r2,-32724(gp)
    cda8:	10000326 	beq	r2,zero,cdb8 <alt_get_errno+0x24>
    cdac:	d0a00b17 	ldw	r2,-32724(gp)
    cdb0:	103ee83a 	callr	r2
    cdb4:	00000106 	br	cdbc <alt_get_errno+0x28>
    cdb8:	d0a6d104 	addi	r2,gp,-25788
}
    cdbc:	e037883a 	mov	sp,fp
    cdc0:	dfc00117 	ldw	ra,4(sp)
    cdc4:	df000017 	ldw	fp,0(sp)
    cdc8:	dec00204 	addi	sp,sp,8
    cdcc:	f800283a 	ret

0000cdd0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    cdd0:	defffb04 	addi	sp,sp,-20
    cdd4:	dfc00415 	stw	ra,16(sp)
    cdd8:	df000315 	stw	fp,12(sp)
    cddc:	df000304 	addi	fp,sp,12
    cde0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    cde4:	e0bfff17 	ldw	r2,-4(fp)
    cde8:	10000616 	blt	r2,zero,ce04 <close+0x34>
    cdec:	e0bfff17 	ldw	r2,-4(fp)
    cdf0:	10c00324 	muli	r3,r2,12
    cdf4:	00800074 	movhi	r2,1
    cdf8:	10805004 	addi	r2,r2,320
    cdfc:	1885883a 	add	r2,r3,r2
    ce00:	00000106 	br	ce08 <close+0x38>
    ce04:	0005883a 	mov	r2,zero
    ce08:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    ce0c:	e0bffd17 	ldw	r2,-12(fp)
    ce10:	10001926 	beq	r2,zero,ce78 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    ce14:	e0bffd17 	ldw	r2,-12(fp)
    ce18:	10800017 	ldw	r2,0(r2)
    ce1c:	10800417 	ldw	r2,16(r2)
    ce20:	10000626 	beq	r2,zero,ce3c <close+0x6c>
    ce24:	e0bffd17 	ldw	r2,-12(fp)
    ce28:	10800017 	ldw	r2,0(r2)
    ce2c:	10800417 	ldw	r2,16(r2)
    ce30:	e13ffd17 	ldw	r4,-12(fp)
    ce34:	103ee83a 	callr	r2
    ce38:	00000106 	br	ce40 <close+0x70>
    ce3c:	0005883a 	mov	r2,zero
    ce40:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    ce44:	e13fff17 	ldw	r4,-4(fp)
    ce48:	000d4d80 	call	d4d8 <alt_release_fd>
    if (rval < 0)
    ce4c:	e0bffe17 	ldw	r2,-8(fp)
    ce50:	1000070e 	bge	r2,zero,ce70 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    ce54:	000cd940 	call	cd94 <alt_get_errno>
    ce58:	1007883a 	mov	r3,r2
    ce5c:	e0bffe17 	ldw	r2,-8(fp)
    ce60:	0085c83a 	sub	r2,zero,r2
    ce64:	18800015 	stw	r2,0(r3)
      return -1;
    ce68:	00bfffc4 	movi	r2,-1
    ce6c:	00000706 	br	ce8c <close+0xbc>
    }
    return 0;
    ce70:	0005883a 	mov	r2,zero
    ce74:	00000506 	br	ce8c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    ce78:	000cd940 	call	cd94 <alt_get_errno>
    ce7c:	1007883a 	mov	r3,r2
    ce80:	00801444 	movi	r2,81
    ce84:	18800015 	stw	r2,0(r3)
    return -1;
    ce88:	00bfffc4 	movi	r2,-1
  }
}
    ce8c:	e037883a 	mov	sp,fp
    ce90:	dfc00117 	ldw	ra,4(sp)
    ce94:	df000017 	ldw	fp,0(sp)
    ce98:	dec00204 	addi	sp,sp,8
    ce9c:	f800283a 	ret

0000cea0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    cea0:	defffe04 	addi	sp,sp,-8
    cea4:	df000115 	stw	fp,4(sp)
    cea8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
    ceac:	e03fff15 	stw	zero,-4(fp)
    ceb0:	00000506 	br	cec8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
    ceb4:	e0bfff17 	ldw	r2,-4(fp)
    ceb8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
    cebc:	e0bfff17 	ldw	r2,-4(fp)
    cec0:	10800804 	addi	r2,r2,32
    cec4:	e0bfff15 	stw	r2,-4(fp)
    cec8:	e0bfff17 	ldw	r2,-4(fp)
    cecc:	10820030 	cmpltui	r2,r2,2048
    ced0:	103ff81e 	bne	r2,zero,ceb4 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    ced4:	0001883a 	nop
    ced8:	e037883a 	mov	sp,fp
    cedc:	df000017 	ldw	fp,0(sp)
    cee0:	dec00104 	addi	sp,sp,4
    cee4:	f800283a 	ret

0000cee8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    cee8:	defffc04 	addi	sp,sp,-16
    ceec:	df000315 	stw	fp,12(sp)
    cef0:	df000304 	addi	fp,sp,12
    cef4:	e13ffd15 	stw	r4,-12(fp)
    cef8:	e17ffe15 	stw	r5,-8(fp)
    cefc:	e1bfff15 	stw	r6,-4(fp)
  return len;
    cf00:	e0bfff17 	ldw	r2,-4(fp)
}
    cf04:	e037883a 	mov	sp,fp
    cf08:	df000017 	ldw	fp,0(sp)
    cf0c:	dec00104 	addi	sp,sp,4
    cf10:	f800283a 	ret

0000cf14 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cf14:	defffe04 	addi	sp,sp,-8
    cf18:	dfc00115 	stw	ra,4(sp)
    cf1c:	df000015 	stw	fp,0(sp)
    cf20:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cf24:	d0a00b17 	ldw	r2,-32724(gp)
    cf28:	10000326 	beq	r2,zero,cf38 <alt_get_errno+0x24>
    cf2c:	d0a00b17 	ldw	r2,-32724(gp)
    cf30:	103ee83a 	callr	r2
    cf34:	00000106 	br	cf3c <alt_get_errno+0x28>
    cf38:	d0a6d104 	addi	r2,gp,-25788
}
    cf3c:	e037883a 	mov	sp,fp
    cf40:	dfc00117 	ldw	ra,4(sp)
    cf44:	df000017 	ldw	fp,0(sp)
    cf48:	dec00204 	addi	sp,sp,8
    cf4c:	f800283a 	ret

0000cf50 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    cf50:	defffb04 	addi	sp,sp,-20
    cf54:	dfc00415 	stw	ra,16(sp)
    cf58:	df000315 	stw	fp,12(sp)
    cf5c:	df000304 	addi	fp,sp,12
    cf60:	e13ffe15 	stw	r4,-8(fp)
    cf64:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    cf68:	e0bffe17 	ldw	r2,-8(fp)
    cf6c:	10000616 	blt	r2,zero,cf88 <fstat+0x38>
    cf70:	e0bffe17 	ldw	r2,-8(fp)
    cf74:	10c00324 	muli	r3,r2,12
    cf78:	00800074 	movhi	r2,1
    cf7c:	10805004 	addi	r2,r2,320
    cf80:	1885883a 	add	r2,r3,r2
    cf84:	00000106 	br	cf8c <fstat+0x3c>
    cf88:	0005883a 	mov	r2,zero
    cf8c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    cf90:	e0bffd17 	ldw	r2,-12(fp)
    cf94:	10001026 	beq	r2,zero,cfd8 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    cf98:	e0bffd17 	ldw	r2,-12(fp)
    cf9c:	10800017 	ldw	r2,0(r2)
    cfa0:	10800817 	ldw	r2,32(r2)
    cfa4:	10000726 	beq	r2,zero,cfc4 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    cfa8:	e0bffd17 	ldw	r2,-12(fp)
    cfac:	10800017 	ldw	r2,0(r2)
    cfb0:	10800817 	ldw	r2,32(r2)
    cfb4:	e17fff17 	ldw	r5,-4(fp)
    cfb8:	e13ffd17 	ldw	r4,-12(fp)
    cfbc:	103ee83a 	callr	r2
    cfc0:	00000a06 	br	cfec <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    cfc4:	e0bfff17 	ldw	r2,-4(fp)
    cfc8:	00c80004 	movi	r3,8192
    cfcc:	10c00115 	stw	r3,4(r2)
      return 0;
    cfd0:	0005883a 	mov	r2,zero
    cfd4:	00000506 	br	cfec <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cfd8:	000cf140 	call	cf14 <alt_get_errno>
    cfdc:	1007883a 	mov	r3,r2
    cfe0:	00801444 	movi	r2,81
    cfe4:	18800015 	stw	r2,0(r3)
    return -1;
    cfe8:	00bfffc4 	movi	r2,-1
  }
}
    cfec:	e037883a 	mov	sp,fp
    cff0:	dfc00117 	ldw	ra,4(sp)
    cff4:	df000017 	ldw	fp,0(sp)
    cff8:	dec00204 	addi	sp,sp,8
    cffc:	f800283a 	ret

0000d000 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d000:	defffe04 	addi	sp,sp,-8
    d004:	dfc00115 	stw	ra,4(sp)
    d008:	df000015 	stw	fp,0(sp)
    d00c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d010:	d0a00b17 	ldw	r2,-32724(gp)
    d014:	10000326 	beq	r2,zero,d024 <alt_get_errno+0x24>
    d018:	d0a00b17 	ldw	r2,-32724(gp)
    d01c:	103ee83a 	callr	r2
    d020:	00000106 	br	d028 <alt_get_errno+0x28>
    d024:	d0a6d104 	addi	r2,gp,-25788
}
    d028:	e037883a 	mov	sp,fp
    d02c:	dfc00117 	ldw	ra,4(sp)
    d030:	df000017 	ldw	fp,0(sp)
    d034:	dec00204 	addi	sp,sp,8
    d038:	f800283a 	ret

0000d03c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d03c:	deffed04 	addi	sp,sp,-76
    d040:	dfc01215 	stw	ra,72(sp)
    d044:	df001115 	stw	fp,68(sp)
    d048:	df001104 	addi	fp,sp,68
    d04c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d050:	e0bfff17 	ldw	r2,-4(fp)
    d054:	10000616 	blt	r2,zero,d070 <isatty+0x34>
    d058:	e0bfff17 	ldw	r2,-4(fp)
    d05c:	10c00324 	muli	r3,r2,12
    d060:	00800074 	movhi	r2,1
    d064:	10805004 	addi	r2,r2,320
    d068:	1885883a 	add	r2,r3,r2
    d06c:	00000106 	br	d074 <isatty+0x38>
    d070:	0005883a 	mov	r2,zero
    d074:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d078:	e0bfef17 	ldw	r2,-68(fp)
    d07c:	10000e26 	beq	r2,zero,d0b8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d080:	e0bfef17 	ldw	r2,-68(fp)
    d084:	10800017 	ldw	r2,0(r2)
    d088:	10800817 	ldw	r2,32(r2)
    d08c:	1000021e 	bne	r2,zero,d098 <isatty+0x5c>
    {
      return 1;
    d090:	00800044 	movi	r2,1
    d094:	00000d06 	br	d0cc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d098:	e0bff004 	addi	r2,fp,-64
    d09c:	100b883a 	mov	r5,r2
    d0a0:	e13fff17 	ldw	r4,-4(fp)
    d0a4:	000cf500 	call	cf50 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d0a8:	e0bff117 	ldw	r2,-60(fp)
    d0ac:	10880020 	cmpeqi	r2,r2,8192
    d0b0:	10803fcc 	andi	r2,r2,255
    d0b4:	00000506 	br	d0cc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d0b8:	000d0000 	call	d000 <alt_get_errno>
    d0bc:	1007883a 	mov	r3,r2
    d0c0:	00801444 	movi	r2,81
    d0c4:	18800015 	stw	r2,0(r3)
    return 0;
    d0c8:	0005883a 	mov	r2,zero
  }
}
    d0cc:	e037883a 	mov	sp,fp
    d0d0:	dfc00117 	ldw	ra,4(sp)
    d0d4:	df000017 	ldw	fp,0(sp)
    d0d8:	dec00204 	addi	sp,sp,8
    d0dc:	f800283a 	ret

0000d0e0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d0e0:	defffc04 	addi	sp,sp,-16
    d0e4:	df000315 	stw	fp,12(sp)
    d0e8:	df000304 	addi	fp,sp,12
    d0ec:	e13ffd15 	stw	r4,-12(fp)
    d0f0:	e17ffe15 	stw	r5,-8(fp)
    d0f4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d0f8:	e0fffe17 	ldw	r3,-8(fp)
    d0fc:	e0bffd17 	ldw	r2,-12(fp)
    d100:	18800c26 	beq	r3,r2,d134 <alt_load_section+0x54>
  {
    while( to != end )
    d104:	00000806 	br	d128 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d108:	e0bffe17 	ldw	r2,-8(fp)
    d10c:	10c00104 	addi	r3,r2,4
    d110:	e0fffe15 	stw	r3,-8(fp)
    d114:	e0fffd17 	ldw	r3,-12(fp)
    d118:	19000104 	addi	r4,r3,4
    d11c:	e13ffd15 	stw	r4,-12(fp)
    d120:	18c00017 	ldw	r3,0(r3)
    d124:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d128:	e0fffe17 	ldw	r3,-8(fp)
    d12c:	e0bfff17 	ldw	r2,-4(fp)
    d130:	18bff51e 	bne	r3,r2,d108 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
    d134:	0001883a 	nop
    d138:	e037883a 	mov	sp,fp
    d13c:	df000017 	ldw	fp,0(sp)
    d140:	dec00104 	addi	sp,sp,4
    d144:	f800283a 	ret

0000d148 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d148:	defffe04 	addi	sp,sp,-8
    d14c:	dfc00115 	stw	ra,4(sp)
    d150:	df000015 	stw	fp,0(sp)
    d154:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d158:	01800074 	movhi	r6,1
    d15c:	3184d804 	addi	r6,r6,4960
    d160:	01400074 	movhi	r5,1
    d164:	297e1d04 	addi	r5,r5,-1932
    d168:	01000074 	movhi	r4,1
    d16c:	2104d804 	addi	r4,r4,4960
    d170:	000d0e00 	call	d0e0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d174:	01800034 	movhi	r6,0
    d178:	31809104 	addi	r6,r6,580
    d17c:	01400034 	movhi	r5,0
    d180:	29400804 	addi	r5,r5,32
    d184:	01000034 	movhi	r4,0
    d188:	21000804 	addi	r4,r4,32
    d18c:	000d0e00 	call	d0e0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d190:	01800074 	movhi	r6,1
    d194:	31be1d04 	addi	r6,r6,-1932
    d198:	01400074 	movhi	r5,1
    d19c:	297d5004 	addi	r5,r5,-2752
    d1a0:	01000074 	movhi	r4,1
    d1a4:	213d5004 	addi	r4,r4,-2752
    d1a8:	000d0e00 	call	d0e0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d1ac:	000cea00 	call	cea0 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d1b0:	000e6140 	call	e614 <alt_icache_flush_all>
}
    d1b4:	0001883a 	nop
    d1b8:	e037883a 	mov	sp,fp
    d1bc:	dfc00117 	ldw	ra,4(sp)
    d1c0:	df000017 	ldw	fp,0(sp)
    d1c4:	dec00204 	addi	sp,sp,8
    d1c8:	f800283a 	ret

0000d1cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d1cc:	defffe04 	addi	sp,sp,-8
    d1d0:	dfc00115 	stw	ra,4(sp)
    d1d4:	df000015 	stw	fp,0(sp)
    d1d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d1dc:	d0a00b17 	ldw	r2,-32724(gp)
    d1e0:	10000326 	beq	r2,zero,d1f0 <alt_get_errno+0x24>
    d1e4:	d0a00b17 	ldw	r2,-32724(gp)
    d1e8:	103ee83a 	callr	r2
    d1ec:	00000106 	br	d1f4 <alt_get_errno+0x28>
    d1f0:	d0a6d104 	addi	r2,gp,-25788
}
    d1f4:	e037883a 	mov	sp,fp
    d1f8:	dfc00117 	ldw	ra,4(sp)
    d1fc:	df000017 	ldw	fp,0(sp)
    d200:	dec00204 	addi	sp,sp,8
    d204:	f800283a 	ret

0000d208 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d208:	defff904 	addi	sp,sp,-28
    d20c:	dfc00615 	stw	ra,24(sp)
    d210:	df000515 	stw	fp,20(sp)
    d214:	df000504 	addi	fp,sp,20
    d218:	e13ffd15 	stw	r4,-12(fp)
    d21c:	e17ffe15 	stw	r5,-8(fp)
    d220:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d224:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d228:	e0bffd17 	ldw	r2,-12(fp)
    d22c:	10000616 	blt	r2,zero,d248 <lseek+0x40>
    d230:	e0bffd17 	ldw	r2,-12(fp)
    d234:	10c00324 	muli	r3,r2,12
    d238:	00800074 	movhi	r2,1
    d23c:	10805004 	addi	r2,r2,320
    d240:	1885883a 	add	r2,r3,r2
    d244:	00000106 	br	d24c <lseek+0x44>
    d248:	0005883a 	mov	r2,zero
    d24c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d250:	e0bffc17 	ldw	r2,-16(fp)
    d254:	10001026 	beq	r2,zero,d298 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d258:	e0bffc17 	ldw	r2,-16(fp)
    d25c:	10800017 	ldw	r2,0(r2)
    d260:	10800717 	ldw	r2,28(r2)
    d264:	10000926 	beq	r2,zero,d28c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d268:	e0bffc17 	ldw	r2,-16(fp)
    d26c:	10800017 	ldw	r2,0(r2)
    d270:	10800717 	ldw	r2,28(r2)
    d274:	e1bfff17 	ldw	r6,-4(fp)
    d278:	e17ffe17 	ldw	r5,-8(fp)
    d27c:	e13ffc17 	ldw	r4,-16(fp)
    d280:	103ee83a 	callr	r2
    d284:	e0bffb15 	stw	r2,-20(fp)
    d288:	00000506 	br	d2a0 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d28c:	00bfde84 	movi	r2,-134
    d290:	e0bffb15 	stw	r2,-20(fp)
    d294:	00000206 	br	d2a0 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    d298:	00bfebc4 	movi	r2,-81
    d29c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d2a0:	e0bffb17 	ldw	r2,-20(fp)
    d2a4:	1000070e 	bge	r2,zero,d2c4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    d2a8:	000d1cc0 	call	d1cc <alt_get_errno>
    d2ac:	1007883a 	mov	r3,r2
    d2b0:	e0bffb17 	ldw	r2,-20(fp)
    d2b4:	0085c83a 	sub	r2,zero,r2
    d2b8:	18800015 	stw	r2,0(r3)
    rc = -1;
    d2bc:	00bfffc4 	movi	r2,-1
    d2c0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d2c4:	e0bffb17 	ldw	r2,-20(fp)
}
    d2c8:	e037883a 	mov	sp,fp
    d2cc:	dfc00117 	ldw	ra,4(sp)
    d2d0:	df000017 	ldw	fp,0(sp)
    d2d4:	dec00204 	addi	sp,sp,8
    d2d8:	f800283a 	ret

0000d2dc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d2dc:	defffd04 	addi	sp,sp,-12
    d2e0:	dfc00215 	stw	ra,8(sp)
    d2e4:	df000115 	stw	fp,4(sp)
    d2e8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d2ec:	0009883a 	mov	r4,zero
    d2f0:	000d7540 	call	d754 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d2f4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d2f8:	000d78c0 	call	d78c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d2fc:	01800074 	movhi	r6,1
    d300:	31be1504 	addi	r6,r6,-1964
    d304:	01400074 	movhi	r5,1
    d308:	297e1504 	addi	r5,r5,-1964
    d30c:	01000074 	movhi	r4,1
    d310:	213e1504 	addi	r4,r4,-1964
    d314:	000e9ac0 	call	e9ac <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d318:	000e5540 	call	e554 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d31c:	01000074 	movhi	r4,1
    d320:	21396d04 	addi	r4,r4,-6732
    d324:	000f1ac0 	call	f1ac <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d328:	d0a6d217 	ldw	r2,-25784(gp)
    d32c:	d0e6d317 	ldw	r3,-25780(gp)
    d330:	d126d417 	ldw	r4,-25776(gp)
    d334:	200d883a 	mov	r6,r4
    d338:	180b883a 	mov	r5,r3
    d33c:	1009883a 	mov	r4,r2
    d340:	00004280 	call	428 <main>
    d344:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d348:	01000044 	movi	r4,1
    d34c:	000cdd00 	call	cdd0 <close>
  exit (result);
    d350:	e13fff17 	ldw	r4,-4(fp)
    d354:	000f1c00 	call	f1c0 <exit>

0000d358 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d358:	defffe04 	addi	sp,sp,-8
    d35c:	df000115 	stw	fp,4(sp)
    d360:	df000104 	addi	fp,sp,4
    d364:	e13fff15 	stw	r4,-4(fp)
}
    d368:	0001883a 	nop
    d36c:	e037883a 	mov	sp,fp
    d370:	df000017 	ldw	fp,0(sp)
    d374:	dec00104 	addi	sp,sp,4
    d378:	f800283a 	ret

0000d37c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d37c:	defffe04 	addi	sp,sp,-8
    d380:	df000115 	stw	fp,4(sp)
    d384:	df000104 	addi	fp,sp,4
    d388:	e13fff15 	stw	r4,-4(fp)
}
    d38c:	0001883a 	nop
    d390:	e037883a 	mov	sp,fp
    d394:	df000017 	ldw	fp,0(sp)
    d398:	dec00104 	addi	sp,sp,4
    d39c:	f800283a 	ret

0000d3a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d3a0:	defffe04 	addi	sp,sp,-8
    d3a4:	dfc00115 	stw	ra,4(sp)
    d3a8:	df000015 	stw	fp,0(sp)
    d3ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d3b0:	d0a00b17 	ldw	r2,-32724(gp)
    d3b4:	10000326 	beq	r2,zero,d3c4 <alt_get_errno+0x24>
    d3b8:	d0a00b17 	ldw	r2,-32724(gp)
    d3bc:	103ee83a 	callr	r2
    d3c0:	00000106 	br	d3c8 <alt_get_errno+0x28>
    d3c4:	d0a6d104 	addi	r2,gp,-25788
}
    d3c8:	e037883a 	mov	sp,fp
    d3cc:	dfc00117 	ldw	ra,4(sp)
    d3d0:	df000017 	ldw	fp,0(sp)
    d3d4:	dec00204 	addi	sp,sp,8
    d3d8:	f800283a 	ret

0000d3dc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d3dc:	defff904 	addi	sp,sp,-28
    d3e0:	dfc00615 	stw	ra,24(sp)
    d3e4:	df000515 	stw	fp,20(sp)
    d3e8:	df000504 	addi	fp,sp,20
    d3ec:	e13ffd15 	stw	r4,-12(fp)
    d3f0:	e17ffe15 	stw	r5,-8(fp)
    d3f4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d3f8:	e0bffd17 	ldw	r2,-12(fp)
    d3fc:	10000616 	blt	r2,zero,d418 <read+0x3c>
    d400:	e0bffd17 	ldw	r2,-12(fp)
    d404:	10c00324 	muli	r3,r2,12
    d408:	00800074 	movhi	r2,1
    d40c:	10805004 	addi	r2,r2,320
    d410:	1885883a 	add	r2,r3,r2
    d414:	00000106 	br	d41c <read+0x40>
    d418:	0005883a 	mov	r2,zero
    d41c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d420:	e0bffb17 	ldw	r2,-20(fp)
    d424:	10002226 	beq	r2,zero,d4b0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d428:	e0bffb17 	ldw	r2,-20(fp)
    d42c:	10800217 	ldw	r2,8(r2)
    d430:	108000cc 	andi	r2,r2,3
    d434:	10800060 	cmpeqi	r2,r2,1
    d438:	1000181e 	bne	r2,zero,d49c <read+0xc0>
        (fd->dev->read))
    d43c:	e0bffb17 	ldw	r2,-20(fp)
    d440:	10800017 	ldw	r2,0(r2)
    d444:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d448:	10001426 	beq	r2,zero,d49c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d44c:	e0bffb17 	ldw	r2,-20(fp)
    d450:	10800017 	ldw	r2,0(r2)
    d454:	10800517 	ldw	r2,20(r2)
    d458:	e0ffff17 	ldw	r3,-4(fp)
    d45c:	180d883a 	mov	r6,r3
    d460:	e17ffe17 	ldw	r5,-8(fp)
    d464:	e13ffb17 	ldw	r4,-20(fp)
    d468:	103ee83a 	callr	r2
    d46c:	e0bffc15 	stw	r2,-16(fp)
    d470:	e0bffc17 	ldw	r2,-16(fp)
    d474:	1000070e 	bge	r2,zero,d494 <read+0xb8>
        {
          ALT_ERRNO = -rval;
    d478:	000d3a00 	call	d3a0 <alt_get_errno>
    d47c:	1007883a 	mov	r3,r2
    d480:	e0bffc17 	ldw	r2,-16(fp)
    d484:	0085c83a 	sub	r2,zero,r2
    d488:	18800015 	stw	r2,0(r3)
          return -1;
    d48c:	00bfffc4 	movi	r2,-1
    d490:	00000c06 	br	d4c4 <read+0xe8>
        }
        return rval;
    d494:	e0bffc17 	ldw	r2,-16(fp)
    d498:	00000a06 	br	d4c4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d49c:	000d3a00 	call	d3a0 <alt_get_errno>
    d4a0:	1007883a 	mov	r3,r2
    d4a4:	00800344 	movi	r2,13
    d4a8:	18800015 	stw	r2,0(r3)
    d4ac:	00000406 	br	d4c0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d4b0:	000d3a00 	call	d3a0 <alt_get_errno>
    d4b4:	1007883a 	mov	r3,r2
    d4b8:	00801444 	movi	r2,81
    d4bc:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d4c0:	00bfffc4 	movi	r2,-1
}
    d4c4:	e037883a 	mov	sp,fp
    d4c8:	dfc00117 	ldw	ra,4(sp)
    d4cc:	df000017 	ldw	fp,0(sp)
    d4d0:	dec00204 	addi	sp,sp,8
    d4d4:	f800283a 	ret

0000d4d8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d4d8:	defffe04 	addi	sp,sp,-8
    d4dc:	df000115 	stw	fp,4(sp)
    d4e0:	df000104 	addi	fp,sp,4
    d4e4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d4e8:	e0bfff17 	ldw	r2,-4(fp)
    d4ec:	108000d0 	cmplti	r2,r2,3
    d4f0:	10000d1e 	bne	r2,zero,d528 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    d4f4:	00800074 	movhi	r2,1
    d4f8:	10805004 	addi	r2,r2,320
    d4fc:	e0ffff17 	ldw	r3,-4(fp)
    d500:	18c00324 	muli	r3,r3,12
    d504:	10c5883a 	add	r2,r2,r3
    d508:	10800204 	addi	r2,r2,8
    d50c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d510:	00800074 	movhi	r2,1
    d514:	10805004 	addi	r2,r2,320
    d518:	e0ffff17 	ldw	r3,-4(fp)
    d51c:	18c00324 	muli	r3,r3,12
    d520:	10c5883a 	add	r2,r2,r3
    d524:	10000015 	stw	zero,0(r2)
  }
}
    d528:	0001883a 	nop
    d52c:	e037883a 	mov	sp,fp
    d530:	df000017 	ldw	fp,0(sp)
    d534:	dec00104 	addi	sp,sp,4
    d538:	f800283a 	ret

0000d53c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d53c:	defff904 	addi	sp,sp,-28
    d540:	df000615 	stw	fp,24(sp)
    d544:	df000604 	addi	fp,sp,24
    d548:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d54c:	0005303a 	rdctl	r2,status
    d550:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d554:	e0fffe17 	ldw	r3,-8(fp)
    d558:	00bfff84 	movi	r2,-2
    d55c:	1884703a 	and	r2,r3,r2
    d560:	1001703a 	wrctl	status,r2
  
  return context;
    d564:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d568:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d56c:	d0a00c17 	ldw	r2,-32720(gp)
    d570:	10c000c4 	addi	r3,r2,3
    d574:	00bfff04 	movi	r2,-4
    d578:	1884703a 	and	r2,r3,r2
    d57c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d580:	d0e00c17 	ldw	r3,-32720(gp)
    d584:	e0bfff17 	ldw	r2,-4(fp)
    d588:	1887883a 	add	r3,r3,r2
    d58c:	008000b4 	movhi	r2,2
    d590:	10a1a804 	addi	r2,r2,-31072
    d594:	10c0062e 	bgeu	r2,r3,d5b0 <sbrk+0x74>
    d598:	e0bffb17 	ldw	r2,-20(fp)
    d59c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d5a0:	e0bffa17 	ldw	r2,-24(fp)
    d5a4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d5a8:	00bfffc4 	movi	r2,-1
    d5ac:	00000b06 	br	d5dc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d5b0:	d0a00c17 	ldw	r2,-32720(gp)
    d5b4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    d5b8:	d0e00c17 	ldw	r3,-32720(gp)
    d5bc:	e0bfff17 	ldw	r2,-4(fp)
    d5c0:	1885883a 	add	r2,r3,r2
    d5c4:	d0a00c15 	stw	r2,-32720(gp)
    d5c8:	e0bffb17 	ldw	r2,-20(fp)
    d5cc:	e0bffc15 	stw	r2,-16(fp)
    d5d0:	e0bffc17 	ldw	r2,-16(fp)
    d5d4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d5d8:	e0bffd17 	ldw	r2,-12(fp)
} 
    d5dc:	e037883a 	mov	sp,fp
    d5e0:	df000017 	ldw	fp,0(sp)
    d5e4:	dec00104 	addi	sp,sp,4
    d5e8:	f800283a 	ret

0000d5ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d5ec:	defffe04 	addi	sp,sp,-8
    d5f0:	dfc00115 	stw	ra,4(sp)
    d5f4:	df000015 	stw	fp,0(sp)
    d5f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d5fc:	d0a00b17 	ldw	r2,-32724(gp)
    d600:	10000326 	beq	r2,zero,d610 <alt_get_errno+0x24>
    d604:	d0a00b17 	ldw	r2,-32724(gp)
    d608:	103ee83a 	callr	r2
    d60c:	00000106 	br	d614 <alt_get_errno+0x28>
    d610:	d0a6d104 	addi	r2,gp,-25788
}
    d614:	e037883a 	mov	sp,fp
    d618:	dfc00117 	ldw	ra,4(sp)
    d61c:	df000017 	ldw	fp,0(sp)
    d620:	dec00204 	addi	sp,sp,8
    d624:	f800283a 	ret

0000d628 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d628:	defff904 	addi	sp,sp,-28
    d62c:	dfc00615 	stw	ra,24(sp)
    d630:	df000515 	stw	fp,20(sp)
    d634:	df000504 	addi	fp,sp,20
    d638:	e13ffd15 	stw	r4,-12(fp)
    d63c:	e17ffe15 	stw	r5,-8(fp)
    d640:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d644:	e0bffd17 	ldw	r2,-12(fp)
    d648:	10000616 	blt	r2,zero,d664 <write+0x3c>
    d64c:	e0bffd17 	ldw	r2,-12(fp)
    d650:	10c00324 	muli	r3,r2,12
    d654:	00800074 	movhi	r2,1
    d658:	10805004 	addi	r2,r2,320
    d65c:	1885883a 	add	r2,r3,r2
    d660:	00000106 	br	d668 <write+0x40>
    d664:	0005883a 	mov	r2,zero
    d668:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d66c:	e0bffb17 	ldw	r2,-20(fp)
    d670:	10002126 	beq	r2,zero,d6f8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d674:	e0bffb17 	ldw	r2,-20(fp)
    d678:	10800217 	ldw	r2,8(r2)
    d67c:	108000cc 	andi	r2,r2,3
    d680:	10001826 	beq	r2,zero,d6e4 <write+0xbc>
    d684:	e0bffb17 	ldw	r2,-20(fp)
    d688:	10800017 	ldw	r2,0(r2)
    d68c:	10800617 	ldw	r2,24(r2)
    d690:	10001426 	beq	r2,zero,d6e4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d694:	e0bffb17 	ldw	r2,-20(fp)
    d698:	10800017 	ldw	r2,0(r2)
    d69c:	10800617 	ldw	r2,24(r2)
    d6a0:	e0ffff17 	ldw	r3,-4(fp)
    d6a4:	180d883a 	mov	r6,r3
    d6a8:	e17ffe17 	ldw	r5,-8(fp)
    d6ac:	e13ffb17 	ldw	r4,-20(fp)
    d6b0:	103ee83a 	callr	r2
    d6b4:	e0bffc15 	stw	r2,-16(fp)
    d6b8:	e0bffc17 	ldw	r2,-16(fp)
    d6bc:	1000070e 	bge	r2,zero,d6dc <write+0xb4>
      {
        ALT_ERRNO = -rval;
    d6c0:	000d5ec0 	call	d5ec <alt_get_errno>
    d6c4:	1007883a 	mov	r3,r2
    d6c8:	e0bffc17 	ldw	r2,-16(fp)
    d6cc:	0085c83a 	sub	r2,zero,r2
    d6d0:	18800015 	stw	r2,0(r3)
        return -1;
    d6d4:	00bfffc4 	movi	r2,-1
    d6d8:	00000c06 	br	d70c <write+0xe4>
      }
      return rval;
    d6dc:	e0bffc17 	ldw	r2,-16(fp)
    d6e0:	00000a06 	br	d70c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d6e4:	000d5ec0 	call	d5ec <alt_get_errno>
    d6e8:	1007883a 	mov	r3,r2
    d6ec:	00800344 	movi	r2,13
    d6f0:	18800015 	stw	r2,0(r3)
    d6f4:	00000406 	br	d708 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d6f8:	000d5ec0 	call	d5ec <alt_get_errno>
    d6fc:	1007883a 	mov	r3,r2
    d700:	00801444 	movi	r2,81
    d704:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d708:	00bfffc4 	movi	r2,-1
}
    d70c:	e037883a 	mov	sp,fp
    d710:	dfc00117 	ldw	ra,4(sp)
    d714:	df000017 	ldw	fp,0(sp)
    d718:	dec00204 	addi	sp,sp,8
    d71c:	f800283a 	ret

0000d720 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d720:	defffd04 	addi	sp,sp,-12
    d724:	dfc00215 	stw	ra,8(sp)
    d728:	df000115 	stw	fp,4(sp)
    d72c:	df000104 	addi	fp,sp,4
    d730:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d734:	d1600804 	addi	r5,gp,-32736
    d738:	e13fff17 	ldw	r4,-4(fp)
    d73c:	000e4b00 	call	e4b0 <alt_dev_llist_insert>
}
    d740:	e037883a 	mov	sp,fp
    d744:	dfc00117 	ldw	ra,4(sp)
    d748:	df000017 	ldw	fp,0(sp)
    d74c:	dec00204 	addi	sp,sp,8
    d750:	f800283a 	ret

0000d754 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d754:	defffd04 	addi	sp,sp,-12
    d758:	dfc00215 	stw	ra,8(sp)
    d75c:	df000115 	stw	fp,4(sp)
    d760:	df000104 	addi	fp,sp,4
    d764:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    d768:	000ee200 	call	ee20 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d76c:	00800044 	movi	r2,1
    d770:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d774:	0001883a 	nop
    d778:	e037883a 	mov	sp,fp
    d77c:	dfc00117 	ldw	ra,4(sp)
    d780:	df000017 	ldw	fp,0(sp)
    d784:	dec00204 	addi	sp,sp,8
    d788:	f800283a 	ret

0000d78c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d78c:	defffe04 	addi	sp,sp,-8
    d790:	dfc00115 	stw	ra,4(sp)
    d794:	df000015 	stw	fp,0(sp)
    d798:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    d79c:	01c0fa04 	movi	r7,1000
    d7a0:	01800044 	movi	r6,1
    d7a4:	000b883a 	mov	r5,zero
    d7a8:	010000b4 	movhi	r4,2
    d7ac:	21000804 	addi	r4,r4,32
    d7b0:	000e2cc0 	call	e2cc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
    d7b4:	000d883a 	mov	r6,zero
    d7b8:	000b883a 	mov	r5,zero
    d7bc:	01000074 	movhi	r4,1
    d7c0:	2100ba04 	addi	r4,r4,744
    d7c4:	000d9500 	call	d950 <altera_avalon_jtag_uart_init>
    d7c8:	01000074 	movhi	r4,1
    d7cc:	2100b004 	addi	r4,r4,704
    d7d0:	000d7200 	call	d720 <alt_dev_reg>
}
    d7d4:	0001883a 	nop
    d7d8:	e037883a 	mov	sp,fp
    d7dc:	dfc00117 	ldw	ra,4(sp)
    d7e0:	df000017 	ldw	fp,0(sp)
    d7e4:	dec00204 	addi	sp,sp,8
    d7e8:	f800283a 	ret

0000d7ec <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    d7ec:	defffa04 	addi	sp,sp,-24
    d7f0:	dfc00515 	stw	ra,20(sp)
    d7f4:	df000415 	stw	fp,16(sp)
    d7f8:	df000404 	addi	fp,sp,16
    d7fc:	e13ffd15 	stw	r4,-12(fp)
    d800:	e17ffe15 	stw	r5,-8(fp)
    d804:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d808:	e0bffd17 	ldw	r2,-12(fp)
    d80c:	10800017 	ldw	r2,0(r2)
    d810:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    d814:	e0bffc17 	ldw	r2,-16(fp)
    d818:	10c00a04 	addi	r3,r2,40
    d81c:	e0bffd17 	ldw	r2,-12(fp)
    d820:	10800217 	ldw	r2,8(r2)
    d824:	100f883a 	mov	r7,r2
    d828:	e1bfff17 	ldw	r6,-4(fp)
    d82c:	e17ffe17 	ldw	r5,-8(fp)
    d830:	1809883a 	mov	r4,r3
    d834:	000de140 	call	de14 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    d838:	e037883a 	mov	sp,fp
    d83c:	dfc00117 	ldw	ra,4(sp)
    d840:	df000017 	ldw	fp,0(sp)
    d844:	dec00204 	addi	sp,sp,8
    d848:	f800283a 	ret

0000d84c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    d84c:	defffa04 	addi	sp,sp,-24
    d850:	dfc00515 	stw	ra,20(sp)
    d854:	df000415 	stw	fp,16(sp)
    d858:	df000404 	addi	fp,sp,16
    d85c:	e13ffd15 	stw	r4,-12(fp)
    d860:	e17ffe15 	stw	r5,-8(fp)
    d864:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d868:	e0bffd17 	ldw	r2,-12(fp)
    d86c:	10800017 	ldw	r2,0(r2)
    d870:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    d874:	e0bffc17 	ldw	r2,-16(fp)
    d878:	10c00a04 	addi	r3,r2,40
    d87c:	e0bffd17 	ldw	r2,-12(fp)
    d880:	10800217 	ldw	r2,8(r2)
    d884:	100f883a 	mov	r7,r2
    d888:	e1bfff17 	ldw	r6,-4(fp)
    d88c:	e17ffe17 	ldw	r5,-8(fp)
    d890:	1809883a 	mov	r4,r3
    d894:	000e0300 	call	e030 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    d898:	e037883a 	mov	sp,fp
    d89c:	dfc00117 	ldw	ra,4(sp)
    d8a0:	df000017 	ldw	fp,0(sp)
    d8a4:	dec00204 	addi	sp,sp,8
    d8a8:	f800283a 	ret

0000d8ac <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    d8ac:	defffc04 	addi	sp,sp,-16
    d8b0:	dfc00315 	stw	ra,12(sp)
    d8b4:	df000215 	stw	fp,8(sp)
    d8b8:	df000204 	addi	fp,sp,8
    d8bc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d8c0:	e0bfff17 	ldw	r2,-4(fp)
    d8c4:	10800017 	ldw	r2,0(r2)
    d8c8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    d8cc:	e0bffe17 	ldw	r2,-8(fp)
    d8d0:	10c00a04 	addi	r3,r2,40
    d8d4:	e0bfff17 	ldw	r2,-4(fp)
    d8d8:	10800217 	ldw	r2,8(r2)
    d8dc:	100b883a 	mov	r5,r2
    d8e0:	1809883a 	mov	r4,r3
    d8e4:	000dcbc0 	call	dcbc <altera_avalon_jtag_uart_close>
}
    d8e8:	e037883a 	mov	sp,fp
    d8ec:	dfc00117 	ldw	ra,4(sp)
    d8f0:	df000017 	ldw	fp,0(sp)
    d8f4:	dec00204 	addi	sp,sp,8
    d8f8:	f800283a 	ret

0000d8fc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    d8fc:	defffa04 	addi	sp,sp,-24
    d900:	dfc00515 	stw	ra,20(sp)
    d904:	df000415 	stw	fp,16(sp)
    d908:	df000404 	addi	fp,sp,16
    d90c:	e13ffd15 	stw	r4,-12(fp)
    d910:	e17ffe15 	stw	r5,-8(fp)
    d914:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    d918:	e0bffd17 	ldw	r2,-12(fp)
    d91c:	10800017 	ldw	r2,0(r2)
    d920:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    d924:	e0bffc17 	ldw	r2,-16(fp)
    d928:	10800a04 	addi	r2,r2,40
    d92c:	e1bfff17 	ldw	r6,-4(fp)
    d930:	e17ffe17 	ldw	r5,-8(fp)
    d934:	1009883a 	mov	r4,r2
    d938:	000dd240 	call	dd24 <altera_avalon_jtag_uart_ioctl>
}
    d93c:	e037883a 	mov	sp,fp
    d940:	dfc00117 	ldw	ra,4(sp)
    d944:	df000017 	ldw	fp,0(sp)
    d948:	dec00204 	addi	sp,sp,8
    d94c:	f800283a 	ret

0000d950 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    d950:	defffa04 	addi	sp,sp,-24
    d954:	dfc00515 	stw	ra,20(sp)
    d958:	df000415 	stw	fp,16(sp)
    d95c:	df000404 	addi	fp,sp,16
    d960:	e13ffd15 	stw	r4,-12(fp)
    d964:	e17ffe15 	stw	r5,-8(fp)
    d968:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    d96c:	e0bffd17 	ldw	r2,-12(fp)
    d970:	00c00044 	movi	r3,1
    d974:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    d978:	e0bffd17 	ldw	r2,-12(fp)
    d97c:	10800017 	ldw	r2,0(r2)
    d980:	10800104 	addi	r2,r2,4
    d984:	1007883a 	mov	r3,r2
    d988:	e0bffd17 	ldw	r2,-12(fp)
    d98c:	10800817 	ldw	r2,32(r2)
    d990:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    d994:	e0bffe17 	ldw	r2,-8(fp)
    d998:	e0ffff17 	ldw	r3,-4(fp)
    d99c:	d8000015 	stw	zero,0(sp)
    d9a0:	e1fffd17 	ldw	r7,-12(fp)
    d9a4:	01800074 	movhi	r6,1
    d9a8:	31b68404 	addi	r6,r6,-9712
    d9ac:	180b883a 	mov	r5,r3
    d9b0:	1009883a 	mov	r4,r2
    d9b4:	000e6480 	call	e648 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    d9b8:	e0bffd17 	ldw	r2,-12(fp)
    d9bc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    d9c0:	e0bffd17 	ldw	r2,-12(fp)
    d9c4:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    d9c8:	d0e6d617 	ldw	r3,-25768(gp)
    d9cc:	e1fffd17 	ldw	r7,-12(fp)
    d9d0:	01800074 	movhi	r6,1
    d9d4:	31b70704 	addi	r6,r6,-9188
    d9d8:	180b883a 	mov	r5,r3
    d9dc:	1009883a 	mov	r4,r2
    d9e0:	000e3480 	call	e348 <alt_alarm_start>
    d9e4:	1000040e 	bge	r2,zero,d9f8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    d9e8:	e0fffd17 	ldw	r3,-12(fp)
    d9ec:	00a00034 	movhi	r2,32768
    d9f0:	10bfffc4 	addi	r2,r2,-1
    d9f4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    d9f8:	0001883a 	nop
    d9fc:	e037883a 	mov	sp,fp
    da00:	dfc00117 	ldw	ra,4(sp)
    da04:	df000017 	ldw	fp,0(sp)
    da08:	dec00204 	addi	sp,sp,8
    da0c:	f800283a 	ret

0000da10 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    da10:	defff804 	addi	sp,sp,-32
    da14:	df000715 	stw	fp,28(sp)
    da18:	df000704 	addi	fp,sp,28
    da1c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    da20:	e0bfff17 	ldw	r2,-4(fp)
    da24:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    da28:	e0bffb17 	ldw	r2,-20(fp)
    da2c:	10800017 	ldw	r2,0(r2)
    da30:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    da34:	e0bffc17 	ldw	r2,-16(fp)
    da38:	10800104 	addi	r2,r2,4
    da3c:	10800037 	ldwio	r2,0(r2)
    da40:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    da44:	e0bffd17 	ldw	r2,-12(fp)
    da48:	1080c00c 	andi	r2,r2,768
    da4c:	10006d26 	beq	r2,zero,dc04 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    da50:	e0bffd17 	ldw	r2,-12(fp)
    da54:	1080400c 	andi	r2,r2,256
    da58:	10003526 	beq	r2,zero,db30 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    da5c:	00800074 	movhi	r2,1
    da60:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    da64:	e0bffb17 	ldw	r2,-20(fp)
    da68:	10800a17 	ldw	r2,40(r2)
    da6c:	10800044 	addi	r2,r2,1
    da70:	1081ffcc 	andi	r2,r2,2047
    da74:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    da78:	e0bffb17 	ldw	r2,-20(fp)
    da7c:	10c00b17 	ldw	r3,44(r2)
    da80:	e0bffe17 	ldw	r2,-8(fp)
    da84:	18801526 	beq	r3,r2,dadc <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    da88:	e0bffc17 	ldw	r2,-16(fp)
    da8c:	10800037 	ldwio	r2,0(r2)
    da90:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    da94:	e0bff917 	ldw	r2,-28(fp)
    da98:	10a0000c 	andi	r2,r2,32768
    da9c:	10001126 	beq	r2,zero,dae4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    daa0:	e0bffb17 	ldw	r2,-20(fp)
    daa4:	10800a17 	ldw	r2,40(r2)
    daa8:	e0fff917 	ldw	r3,-28(fp)
    daac:	1809883a 	mov	r4,r3
    dab0:	e0fffb17 	ldw	r3,-20(fp)
    dab4:	1885883a 	add	r2,r3,r2
    dab8:	10800e04 	addi	r2,r2,56
    dabc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dac0:	e0bffb17 	ldw	r2,-20(fp)
    dac4:	10800a17 	ldw	r2,40(r2)
    dac8:	10800044 	addi	r2,r2,1
    dacc:	10c1ffcc 	andi	r3,r2,2047
    dad0:	e0bffb17 	ldw	r2,-20(fp)
    dad4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    dad8:	003fe206 	br	da64 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    dadc:	0001883a 	nop
    dae0:	00000106 	br	dae8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    dae4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    dae8:	e0bff917 	ldw	r2,-28(fp)
    daec:	10bfffec 	andhi	r2,r2,65535
    daf0:	10000f26 	beq	r2,zero,db30 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    daf4:	e0bffb17 	ldw	r2,-20(fp)
    daf8:	10c00817 	ldw	r3,32(r2)
    dafc:	00bfff84 	movi	r2,-2
    db00:	1886703a 	and	r3,r3,r2
    db04:	e0bffb17 	ldw	r2,-20(fp)
    db08:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    db0c:	e0bffc17 	ldw	r2,-16(fp)
    db10:	10800104 	addi	r2,r2,4
    db14:	1007883a 	mov	r3,r2
    db18:	e0bffb17 	ldw	r2,-20(fp)
    db1c:	10800817 	ldw	r2,32(r2)
    db20:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    db24:	e0bffc17 	ldw	r2,-16(fp)
    db28:	10800104 	addi	r2,r2,4
    db2c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    db30:	e0bffd17 	ldw	r2,-12(fp)
    db34:	1080800c 	andi	r2,r2,512
    db38:	103fbe26 	beq	r2,zero,da34 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    db3c:	e0bffd17 	ldw	r2,-12(fp)
    db40:	1004d43a 	srli	r2,r2,16
    db44:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    db48:	00001406 	br	db9c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    db4c:	e0bffc17 	ldw	r2,-16(fp)
    db50:	e0fffb17 	ldw	r3,-20(fp)
    db54:	18c00d17 	ldw	r3,52(r3)
    db58:	e13ffb17 	ldw	r4,-20(fp)
    db5c:	20c7883a 	add	r3,r4,r3
    db60:	18c20e04 	addi	r3,r3,2104
    db64:	18c00003 	ldbu	r3,0(r3)
    db68:	18c03fcc 	andi	r3,r3,255
    db6c:	18c0201c 	xori	r3,r3,128
    db70:	18ffe004 	addi	r3,r3,-128
    db74:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    db78:	e0bffb17 	ldw	r2,-20(fp)
    db7c:	10800d17 	ldw	r2,52(r2)
    db80:	10800044 	addi	r2,r2,1
    db84:	10c1ffcc 	andi	r3,r2,2047
    db88:	e0bffb17 	ldw	r2,-20(fp)
    db8c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    db90:	e0bffa17 	ldw	r2,-24(fp)
    db94:	10bfffc4 	addi	r2,r2,-1
    db98:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    db9c:	e0bffa17 	ldw	r2,-24(fp)
    dba0:	10000526 	beq	r2,zero,dbb8 <altera_avalon_jtag_uart_irq+0x1a8>
    dba4:	e0bffb17 	ldw	r2,-20(fp)
    dba8:	10c00d17 	ldw	r3,52(r2)
    dbac:	e0bffb17 	ldw	r2,-20(fp)
    dbb0:	10800c17 	ldw	r2,48(r2)
    dbb4:	18bfe51e 	bne	r3,r2,db4c <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    dbb8:	e0bffa17 	ldw	r2,-24(fp)
    dbbc:	103f9d26 	beq	r2,zero,da34 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    dbc0:	e0bffb17 	ldw	r2,-20(fp)
    dbc4:	10c00817 	ldw	r3,32(r2)
    dbc8:	00bfff44 	movi	r2,-3
    dbcc:	1886703a 	and	r3,r3,r2
    dbd0:	e0bffb17 	ldw	r2,-20(fp)
    dbd4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    dbd8:	e0bffb17 	ldw	r2,-20(fp)
    dbdc:	10800017 	ldw	r2,0(r2)
    dbe0:	10800104 	addi	r2,r2,4
    dbe4:	1007883a 	mov	r3,r2
    dbe8:	e0bffb17 	ldw	r2,-20(fp)
    dbec:	10800817 	ldw	r2,32(r2)
    dbf0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dbf4:	e0bffc17 	ldw	r2,-16(fp)
    dbf8:	10800104 	addi	r2,r2,4
    dbfc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    dc00:	003f8c06 	br	da34 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    dc04:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    dc08:	0001883a 	nop
    dc0c:	e037883a 	mov	sp,fp
    dc10:	df000017 	ldw	fp,0(sp)
    dc14:	dec00104 	addi	sp,sp,4
    dc18:	f800283a 	ret

0000dc1c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    dc1c:	defff804 	addi	sp,sp,-32
    dc20:	df000715 	stw	fp,28(sp)
    dc24:	df000704 	addi	fp,sp,28
    dc28:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    dc2c:	e0bffb17 	ldw	r2,-20(fp)
    dc30:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    dc34:	e0bff917 	ldw	r2,-28(fp)
    dc38:	10800017 	ldw	r2,0(r2)
    dc3c:	10800104 	addi	r2,r2,4
    dc40:	10800037 	ldwio	r2,0(r2)
    dc44:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    dc48:	e0bffa17 	ldw	r2,-24(fp)
    dc4c:	1081000c 	andi	r2,r2,1024
    dc50:	10000b26 	beq	r2,zero,dc80 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    dc54:	e0bff917 	ldw	r2,-28(fp)
    dc58:	10800017 	ldw	r2,0(r2)
    dc5c:	10800104 	addi	r2,r2,4
    dc60:	1007883a 	mov	r3,r2
    dc64:	e0bff917 	ldw	r2,-28(fp)
    dc68:	10800817 	ldw	r2,32(r2)
    dc6c:	10810014 	ori	r2,r2,1024
    dc70:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    dc74:	e0bff917 	ldw	r2,-28(fp)
    dc78:	10000915 	stw	zero,36(r2)
    dc7c:	00000a06 	br	dca8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    dc80:	e0bff917 	ldw	r2,-28(fp)
    dc84:	10c00917 	ldw	r3,36(r2)
    dc88:	00a00034 	movhi	r2,32768
    dc8c:	10bfff04 	addi	r2,r2,-4
    dc90:	10c00536 	bltu	r2,r3,dca8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    dc94:	e0bff917 	ldw	r2,-28(fp)
    dc98:	10800917 	ldw	r2,36(r2)
    dc9c:	10c00044 	addi	r3,r2,1
    dca0:	e0bff917 	ldw	r2,-28(fp)
    dca4:	10c00915 	stw	r3,36(r2)
    dca8:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    dcac:	e037883a 	mov	sp,fp
    dcb0:	df000017 	ldw	fp,0(sp)
    dcb4:	dec00104 	addi	sp,sp,4
    dcb8:	f800283a 	ret

0000dcbc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    dcbc:	defffd04 	addi	sp,sp,-12
    dcc0:	df000215 	stw	fp,8(sp)
    dcc4:	df000204 	addi	fp,sp,8
    dcc8:	e13ffe15 	stw	r4,-8(fp)
    dccc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dcd0:	00000506 	br	dce8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    dcd4:	e0bfff17 	ldw	r2,-4(fp)
    dcd8:	1090000c 	andi	r2,r2,16384
    dcdc:	10000226 	beq	r2,zero,dce8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    dce0:	00bffd44 	movi	r2,-11
    dce4:	00000b06 	br	dd14 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dce8:	e0bffe17 	ldw	r2,-8(fp)
    dcec:	10c00d17 	ldw	r3,52(r2)
    dcf0:	e0bffe17 	ldw	r2,-8(fp)
    dcf4:	10800c17 	ldw	r2,48(r2)
    dcf8:	18800526 	beq	r3,r2,dd10 <altera_avalon_jtag_uart_close+0x54>
    dcfc:	e0bffe17 	ldw	r2,-8(fp)
    dd00:	10c00917 	ldw	r3,36(r2)
    dd04:	e0bffe17 	ldw	r2,-8(fp)
    dd08:	10800117 	ldw	r2,4(r2)
    dd0c:	18bff136 	bltu	r3,r2,dcd4 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    dd10:	0005883a 	mov	r2,zero
}
    dd14:	e037883a 	mov	sp,fp
    dd18:	df000017 	ldw	fp,0(sp)
    dd1c:	dec00104 	addi	sp,sp,4
    dd20:	f800283a 	ret

0000dd24 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    dd24:	defffa04 	addi	sp,sp,-24
    dd28:	df000515 	stw	fp,20(sp)
    dd2c:	df000504 	addi	fp,sp,20
    dd30:	e13ffd15 	stw	r4,-12(fp)
    dd34:	e17ffe15 	stw	r5,-8(fp)
    dd38:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    dd3c:	00bff9c4 	movi	r2,-25
    dd40:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    dd44:	e0bffe17 	ldw	r2,-8(fp)
    dd48:	10da8060 	cmpeqi	r3,r2,27137
    dd4c:	1800031e 	bne	r3,zero,dd5c <altera_avalon_jtag_uart_ioctl+0x38>
    dd50:	109a80a0 	cmpeqi	r2,r2,27138
    dd54:	1000181e 	bne	r2,zero,ddb8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    dd58:	00002906 	br	de00 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    dd5c:	e0bffd17 	ldw	r2,-12(fp)
    dd60:	10c00117 	ldw	r3,4(r2)
    dd64:	00a00034 	movhi	r2,32768
    dd68:	10bfffc4 	addi	r2,r2,-1
    dd6c:	18802126 	beq	r3,r2,ddf4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    dd70:	e0bfff17 	ldw	r2,-4(fp)
    dd74:	10800017 	ldw	r2,0(r2)
    dd78:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    dd7c:	e0bffc17 	ldw	r2,-16(fp)
    dd80:	10800090 	cmplti	r2,r2,2
    dd84:	1000061e 	bne	r2,zero,dda0 <altera_avalon_jtag_uart_ioctl+0x7c>
    dd88:	e0fffc17 	ldw	r3,-16(fp)
    dd8c:	00a00034 	movhi	r2,32768
    dd90:	10bfffc4 	addi	r2,r2,-1
    dd94:	18800226 	beq	r3,r2,dda0 <altera_avalon_jtag_uart_ioctl+0x7c>
    dd98:	e0bffc17 	ldw	r2,-16(fp)
    dd9c:	00000206 	br	dda8 <altera_avalon_jtag_uart_ioctl+0x84>
    dda0:	00a00034 	movhi	r2,32768
    dda4:	10bfff84 	addi	r2,r2,-2
    dda8:	e0fffd17 	ldw	r3,-12(fp)
    ddac:	18800115 	stw	r2,4(r3)
      rc = 0;
    ddb0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ddb4:	00000f06 	br	ddf4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    ddb8:	e0bffd17 	ldw	r2,-12(fp)
    ddbc:	10c00117 	ldw	r3,4(r2)
    ddc0:	00a00034 	movhi	r2,32768
    ddc4:	10bfffc4 	addi	r2,r2,-1
    ddc8:	18800c26 	beq	r3,r2,ddfc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    ddcc:	e0bffd17 	ldw	r2,-12(fp)
    ddd0:	10c00917 	ldw	r3,36(r2)
    ddd4:	e0bffd17 	ldw	r2,-12(fp)
    ddd8:	10800117 	ldw	r2,4(r2)
    dddc:	1885803a 	cmpltu	r2,r3,r2
    dde0:	10c03fcc 	andi	r3,r2,255
    dde4:	e0bfff17 	ldw	r2,-4(fp)
    dde8:	10c00015 	stw	r3,0(r2)
      rc = 0;
    ddec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ddf0:	00000206 	br	ddfc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    ddf4:	0001883a 	nop
    ddf8:	00000106 	br	de00 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    ddfc:	0001883a 	nop

  default:
    break;
  }

  return rc;
    de00:	e0bffb17 	ldw	r2,-20(fp)
}
    de04:	e037883a 	mov	sp,fp
    de08:	df000017 	ldw	fp,0(sp)
    de0c:	dec00104 	addi	sp,sp,4
    de10:	f800283a 	ret

0000de14 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    de14:	defff304 	addi	sp,sp,-52
    de18:	dfc00c15 	stw	ra,48(sp)
    de1c:	df000b15 	stw	fp,44(sp)
    de20:	df000b04 	addi	fp,sp,44
    de24:	e13ffc15 	stw	r4,-16(fp)
    de28:	e17ffd15 	stw	r5,-12(fp)
    de2c:	e1bffe15 	stw	r6,-8(fp)
    de30:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    de34:	e0bffd17 	ldw	r2,-12(fp)
    de38:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    de3c:	00004706 	br	df5c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    de40:	e0bffc17 	ldw	r2,-16(fp)
    de44:	10800a17 	ldw	r2,40(r2)
    de48:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    de4c:	e0bffc17 	ldw	r2,-16(fp)
    de50:	10800b17 	ldw	r2,44(r2)
    de54:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    de58:	e0fff717 	ldw	r3,-36(fp)
    de5c:	e0bff817 	ldw	r2,-32(fp)
    de60:	18800536 	bltu	r3,r2,de78 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    de64:	e0fff717 	ldw	r3,-36(fp)
    de68:	e0bff817 	ldw	r2,-32(fp)
    de6c:	1885c83a 	sub	r2,r3,r2
    de70:	e0bff615 	stw	r2,-40(fp)
    de74:	00000406 	br	de88 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    de78:	00c20004 	movi	r3,2048
    de7c:	e0bff817 	ldw	r2,-32(fp)
    de80:	1885c83a 	sub	r2,r3,r2
    de84:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    de88:	e0bff617 	ldw	r2,-40(fp)
    de8c:	10001e26 	beq	r2,zero,df08 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    de90:	e0fffe17 	ldw	r3,-8(fp)
    de94:	e0bff617 	ldw	r2,-40(fp)
    de98:	1880022e 	bgeu	r3,r2,dea4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    de9c:	e0bffe17 	ldw	r2,-8(fp)
    dea0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    dea4:	e0bffc17 	ldw	r2,-16(fp)
    dea8:	10c00e04 	addi	r3,r2,56
    deac:	e0bff817 	ldw	r2,-32(fp)
    deb0:	1885883a 	add	r2,r3,r2
    deb4:	e1bff617 	ldw	r6,-40(fp)
    deb8:	100b883a 	mov	r5,r2
    debc:	e13ff517 	ldw	r4,-44(fp)
    dec0:	00004740 	call	474 <memcpy>
      ptr   += n;
    dec4:	e0fff517 	ldw	r3,-44(fp)
    dec8:	e0bff617 	ldw	r2,-40(fp)
    decc:	1885883a 	add	r2,r3,r2
    ded0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    ded4:	e0fffe17 	ldw	r3,-8(fp)
    ded8:	e0bff617 	ldw	r2,-40(fp)
    dedc:	1885c83a 	sub	r2,r3,r2
    dee0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dee4:	e0fff817 	ldw	r3,-32(fp)
    dee8:	e0bff617 	ldw	r2,-40(fp)
    deec:	1885883a 	add	r2,r3,r2
    def0:	10c1ffcc 	andi	r3,r2,2047
    def4:	e0bffc17 	ldw	r2,-16(fp)
    def8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    defc:	e0bffe17 	ldw	r2,-8(fp)
    df00:	00bfcf16 	blt	zero,r2,de40 <altera_avalon_jtag_uart_read+0x2c>
    df04:	00000106 	br	df0c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    df08:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    df0c:	e0fff517 	ldw	r3,-44(fp)
    df10:	e0bffd17 	ldw	r2,-12(fp)
    df14:	1880141e 	bne	r3,r2,df68 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    df18:	e0bfff17 	ldw	r2,-4(fp)
    df1c:	1090000c 	andi	r2,r2,16384
    df20:	1000131e 	bne	r2,zero,df70 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    df24:	0001883a 	nop
    df28:	e0bffc17 	ldw	r2,-16(fp)
    df2c:	10c00a17 	ldw	r3,40(r2)
    df30:	e0bff717 	ldw	r2,-36(fp)
    df34:	1880051e 	bne	r3,r2,df4c <altera_avalon_jtag_uart_read+0x138>
    df38:	e0bffc17 	ldw	r2,-16(fp)
    df3c:	10c00917 	ldw	r3,36(r2)
    df40:	e0bffc17 	ldw	r2,-16(fp)
    df44:	10800117 	ldw	r2,4(r2)
    df48:	18bff736 	bltu	r3,r2,df28 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    df4c:	e0bffc17 	ldw	r2,-16(fp)
    df50:	10c00a17 	ldw	r3,40(r2)
    df54:	e0bff717 	ldw	r2,-36(fp)
    df58:	18800726 	beq	r3,r2,df78 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    df5c:	e0bffe17 	ldw	r2,-8(fp)
    df60:	00bfb716 	blt	zero,r2,de40 <altera_avalon_jtag_uart_read+0x2c>
    df64:	00000506 	br	df7c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    df68:	0001883a 	nop
    df6c:	00000306 	br	df7c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    df70:	0001883a 	nop
    df74:	00000106 	br	df7c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    df78:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    df7c:	e0fff517 	ldw	r3,-44(fp)
    df80:	e0bffd17 	ldw	r2,-12(fp)
    df84:	18801826 	beq	r3,r2,dfe8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    df88:	0005303a 	rdctl	r2,status
    df8c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    df90:	e0fffb17 	ldw	r3,-20(fp)
    df94:	00bfff84 	movi	r2,-2
    df98:	1884703a 	and	r2,r3,r2
    df9c:	1001703a 	wrctl	status,r2
  
  return context;
    dfa0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    dfa4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dfa8:	e0bffc17 	ldw	r2,-16(fp)
    dfac:	10800817 	ldw	r2,32(r2)
    dfb0:	10c00054 	ori	r3,r2,1
    dfb4:	e0bffc17 	ldw	r2,-16(fp)
    dfb8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    dfbc:	e0bffc17 	ldw	r2,-16(fp)
    dfc0:	10800017 	ldw	r2,0(r2)
    dfc4:	10800104 	addi	r2,r2,4
    dfc8:	1007883a 	mov	r3,r2
    dfcc:	e0bffc17 	ldw	r2,-16(fp)
    dfd0:	10800817 	ldw	r2,32(r2)
    dfd4:	18800035 	stwio	r2,0(r3)
    dfd8:	e0bffa17 	ldw	r2,-24(fp)
    dfdc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dfe0:	e0bff917 	ldw	r2,-28(fp)
    dfe4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    dfe8:	e0fff517 	ldw	r3,-44(fp)
    dfec:	e0bffd17 	ldw	r2,-12(fp)
    dff0:	18800426 	beq	r3,r2,e004 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    dff4:	e0fff517 	ldw	r3,-44(fp)
    dff8:	e0bffd17 	ldw	r2,-12(fp)
    dffc:	1885c83a 	sub	r2,r3,r2
    e000:	00000606 	br	e01c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e004:	e0bfff17 	ldw	r2,-4(fp)
    e008:	1090000c 	andi	r2,r2,16384
    e00c:	10000226 	beq	r2,zero,e018 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e010:	00bffd44 	movi	r2,-11
    e014:	00000106 	br	e01c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e018:	00bffec4 	movi	r2,-5
}
    e01c:	e037883a 	mov	sp,fp
    e020:	dfc00117 	ldw	ra,4(sp)
    e024:	df000017 	ldw	fp,0(sp)
    e028:	dec00204 	addi	sp,sp,8
    e02c:	f800283a 	ret

0000e030 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e030:	defff304 	addi	sp,sp,-52
    e034:	dfc00c15 	stw	ra,48(sp)
    e038:	df000b15 	stw	fp,44(sp)
    e03c:	df000b04 	addi	fp,sp,44
    e040:	e13ffc15 	stw	r4,-16(fp)
    e044:	e17ffd15 	stw	r5,-12(fp)
    e048:	e1bffe15 	stw	r6,-8(fp)
    e04c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e050:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e054:	e0bffd17 	ldw	r2,-12(fp)
    e058:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e05c:	00003706 	br	e13c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e060:	e0bffc17 	ldw	r2,-16(fp)
    e064:	10800c17 	ldw	r2,48(r2)
    e068:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    e06c:	e0bffc17 	ldw	r2,-16(fp)
    e070:	10800d17 	ldw	r2,52(r2)
    e074:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e078:	e0fff917 	ldw	r3,-28(fp)
    e07c:	e0bff517 	ldw	r2,-44(fp)
    e080:	1880062e 	bgeu	r3,r2,e09c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e084:	e0fff517 	ldw	r3,-44(fp)
    e088:	e0bff917 	ldw	r2,-28(fp)
    e08c:	1885c83a 	sub	r2,r3,r2
    e090:	10bfffc4 	addi	r2,r2,-1
    e094:	e0bff615 	stw	r2,-40(fp)
    e098:	00000b06 	br	e0c8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e09c:	e0bff517 	ldw	r2,-44(fp)
    e0a0:	10000526 	beq	r2,zero,e0b8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e0a4:	00c20004 	movi	r3,2048
    e0a8:	e0bff917 	ldw	r2,-28(fp)
    e0ac:	1885c83a 	sub	r2,r3,r2
    e0b0:	e0bff615 	stw	r2,-40(fp)
    e0b4:	00000406 	br	e0c8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e0b8:	00c1ffc4 	movi	r3,2047
    e0bc:	e0bff917 	ldw	r2,-28(fp)
    e0c0:	1885c83a 	sub	r2,r3,r2
    e0c4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e0c8:	e0bff617 	ldw	r2,-40(fp)
    e0cc:	10001e26 	beq	r2,zero,e148 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e0d0:	e0fffe17 	ldw	r3,-8(fp)
    e0d4:	e0bff617 	ldw	r2,-40(fp)
    e0d8:	1880022e 	bgeu	r3,r2,e0e4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e0dc:	e0bffe17 	ldw	r2,-8(fp)
    e0e0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e0e4:	e0bffc17 	ldw	r2,-16(fp)
    e0e8:	10c20e04 	addi	r3,r2,2104
    e0ec:	e0bff917 	ldw	r2,-28(fp)
    e0f0:	1885883a 	add	r2,r3,r2
    e0f4:	e1bff617 	ldw	r6,-40(fp)
    e0f8:	e17ffd17 	ldw	r5,-12(fp)
    e0fc:	1009883a 	mov	r4,r2
    e100:	00004740 	call	474 <memcpy>
      ptr   += n;
    e104:	e0fffd17 	ldw	r3,-12(fp)
    e108:	e0bff617 	ldw	r2,-40(fp)
    e10c:	1885883a 	add	r2,r3,r2
    e110:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e114:	e0fffe17 	ldw	r3,-8(fp)
    e118:	e0bff617 	ldw	r2,-40(fp)
    e11c:	1885c83a 	sub	r2,r3,r2
    e120:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e124:	e0fff917 	ldw	r3,-28(fp)
    e128:	e0bff617 	ldw	r2,-40(fp)
    e12c:	1885883a 	add	r2,r3,r2
    e130:	10c1ffcc 	andi	r3,r2,2047
    e134:	e0bffc17 	ldw	r2,-16(fp)
    e138:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e13c:	e0bffe17 	ldw	r2,-8(fp)
    e140:	00bfc716 	blt	zero,r2,e060 <altera_avalon_jtag_uart_write+0x30>
    e144:	00000106 	br	e14c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    e148:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e14c:	0005303a 	rdctl	r2,status
    e150:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e154:	e0fffb17 	ldw	r3,-20(fp)
    e158:	00bfff84 	movi	r2,-2
    e15c:	1884703a 	and	r2,r3,r2
    e160:	1001703a 	wrctl	status,r2
  
  return context;
    e164:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e168:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e16c:	e0bffc17 	ldw	r2,-16(fp)
    e170:	10800817 	ldw	r2,32(r2)
    e174:	10c00094 	ori	r3,r2,2
    e178:	e0bffc17 	ldw	r2,-16(fp)
    e17c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e180:	e0bffc17 	ldw	r2,-16(fp)
    e184:	10800017 	ldw	r2,0(r2)
    e188:	10800104 	addi	r2,r2,4
    e18c:	1007883a 	mov	r3,r2
    e190:	e0bffc17 	ldw	r2,-16(fp)
    e194:	10800817 	ldw	r2,32(r2)
    e198:	18800035 	stwio	r2,0(r3)
    e19c:	e0bffa17 	ldw	r2,-24(fp)
    e1a0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e1a4:	e0bff817 	ldw	r2,-32(fp)
    e1a8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e1ac:	e0bffe17 	ldw	r2,-8(fp)
    e1b0:	0080100e 	bge	zero,r2,e1f4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e1b4:	e0bfff17 	ldw	r2,-4(fp)
    e1b8:	1090000c 	andi	r2,r2,16384
    e1bc:	1000101e 	bne	r2,zero,e200 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e1c0:	0001883a 	nop
    e1c4:	e0bffc17 	ldw	r2,-16(fp)
    e1c8:	10c00d17 	ldw	r3,52(r2)
    e1cc:	e0bff517 	ldw	r2,-44(fp)
    e1d0:	1880051e 	bne	r3,r2,e1e8 <altera_avalon_jtag_uart_write+0x1b8>
    e1d4:	e0bffc17 	ldw	r2,-16(fp)
    e1d8:	10c00917 	ldw	r3,36(r2)
    e1dc:	e0bffc17 	ldw	r2,-16(fp)
    e1e0:	10800117 	ldw	r2,4(r2)
    e1e4:	18bff736 	bltu	r3,r2,e1c4 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e1e8:	e0bffc17 	ldw	r2,-16(fp)
    e1ec:	10800917 	ldw	r2,36(r2)
    e1f0:	1000051e 	bne	r2,zero,e208 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e1f4:	e0bffe17 	ldw	r2,-8(fp)
    e1f8:	00bfd016 	blt	zero,r2,e13c <altera_avalon_jtag_uart_write+0x10c>
    e1fc:	00000306 	br	e20c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    e200:	0001883a 	nop
    e204:	00000106 	br	e20c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    e208:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e20c:	e0fffd17 	ldw	r3,-12(fp)
    e210:	e0bff717 	ldw	r2,-36(fp)
    e214:	18800426 	beq	r3,r2,e228 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e218:	e0fffd17 	ldw	r3,-12(fp)
    e21c:	e0bff717 	ldw	r2,-36(fp)
    e220:	1885c83a 	sub	r2,r3,r2
    e224:	00000606 	br	e240 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e228:	e0bfff17 	ldw	r2,-4(fp)
    e22c:	1090000c 	andi	r2,r2,16384
    e230:	10000226 	beq	r2,zero,e23c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e234:	00bffd44 	movi	r2,-11
    e238:	00000106 	br	e240 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e23c:	00bffec4 	movi	r2,-5
}
    e240:	e037883a 	mov	sp,fp
    e244:	dfc00117 	ldw	ra,4(sp)
    e248:	df000017 	ldw	fp,0(sp)
    e24c:	dec00204 	addi	sp,sp,8
    e250:	f800283a 	ret

0000e254 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    e254:	defffa04 	addi	sp,sp,-24
    e258:	dfc00515 	stw	ra,20(sp)
    e25c:	df000415 	stw	fp,16(sp)
    e260:	df000404 	addi	fp,sp,16
    e264:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    e268:	0007883a 	mov	r3,zero
    e26c:	e0bfff17 	ldw	r2,-4(fp)
    e270:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    e274:	e0bfff17 	ldw	r2,-4(fp)
    e278:	10800104 	addi	r2,r2,4
    e27c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e280:	0005303a 	rdctl	r2,status
    e284:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e288:	e0fffd17 	ldw	r3,-12(fp)
    e28c:	00bfff84 	movi	r2,-2
    e290:	1884703a 	and	r2,r3,r2
    e294:	1001703a 	wrctl	status,r2
  
  return context;
    e298:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    e29c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
    e2a0:	000ed180 	call	ed18 <alt_tick>
    e2a4:	e0bffc17 	ldw	r2,-16(fp)
    e2a8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e2ac:	e0bffe17 	ldw	r2,-8(fp)
    e2b0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    e2b4:	0001883a 	nop
    e2b8:	e037883a 	mov	sp,fp
    e2bc:	dfc00117 	ldw	ra,4(sp)
    e2c0:	df000017 	ldw	fp,0(sp)
    e2c4:	dec00204 	addi	sp,sp,8
    e2c8:	f800283a 	ret

0000e2cc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    e2cc:	defff804 	addi	sp,sp,-32
    e2d0:	dfc00715 	stw	ra,28(sp)
    e2d4:	df000615 	stw	fp,24(sp)
    e2d8:	df000604 	addi	fp,sp,24
    e2dc:	e13ffc15 	stw	r4,-16(fp)
    e2e0:	e17ffd15 	stw	r5,-12(fp)
    e2e4:	e1bffe15 	stw	r6,-8(fp)
    e2e8:	e1ffff15 	stw	r7,-4(fp)
    e2ec:	e0bfff17 	ldw	r2,-4(fp)
    e2f0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    e2f4:	d0a6d617 	ldw	r2,-25768(gp)
    e2f8:	1000021e 	bne	r2,zero,e304 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    e2fc:	e0bffb17 	ldw	r2,-20(fp)
    e300:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    e304:	e0bffc17 	ldw	r2,-16(fp)
    e308:	10800104 	addi	r2,r2,4
    e30c:	00c001c4 	movi	r3,7
    e310:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
    e314:	d8000015 	stw	zero,0(sp)
    e318:	e1fffc17 	ldw	r7,-16(fp)
    e31c:	01800074 	movhi	r6,1
    e320:	31b89504 	addi	r6,r6,-7596
    e324:	e17ffe17 	ldw	r5,-8(fp)
    e328:	e13ffd17 	ldw	r4,-12(fp)
    e32c:	000e6480 	call	e648 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
    e330:	0001883a 	nop
    e334:	e037883a 	mov	sp,fp
    e338:	dfc00117 	ldw	ra,4(sp)
    e33c:	df000017 	ldw	fp,0(sp)
    e340:	dec00204 	addi	sp,sp,8
    e344:	f800283a 	ret

0000e348 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e348:	defff504 	addi	sp,sp,-44
    e34c:	df000a15 	stw	fp,40(sp)
    e350:	df000a04 	addi	fp,sp,40
    e354:	e13ffc15 	stw	r4,-16(fp)
    e358:	e17ffd15 	stw	r5,-12(fp)
    e35c:	e1bffe15 	stw	r6,-8(fp)
    e360:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e364:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e368:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
    e36c:	10003c26 	beq	r2,zero,e460 <alt_alarm_start+0x118>
  {
    if (alarm)
    e370:	e0bffc17 	ldw	r2,-16(fp)
    e374:	10003826 	beq	r2,zero,e458 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e378:	e0bffc17 	ldw	r2,-16(fp)
    e37c:	e0fffe17 	ldw	r3,-8(fp)
    e380:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e384:	e0bffc17 	ldw	r2,-16(fp)
    e388:	e0ffff17 	ldw	r3,-4(fp)
    e38c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e390:	0005303a 	rdctl	r2,status
    e394:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e398:	e0fff917 	ldw	r3,-28(fp)
    e39c:	00bfff84 	movi	r2,-2
    e3a0:	1884703a 	and	r2,r3,r2
    e3a4:	1001703a 	wrctl	status,r2
  
  return context;
    e3a8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    e3ac:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e3b0:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
    e3b4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e3b8:	e0fffd17 	ldw	r3,-12(fp)
    e3bc:	e0bff617 	ldw	r2,-40(fp)
    e3c0:	1885883a 	add	r2,r3,r2
    e3c4:	10c00044 	addi	r3,r2,1
    e3c8:	e0bffc17 	ldw	r2,-16(fp)
    e3cc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e3d0:	e0bffc17 	ldw	r2,-16(fp)
    e3d4:	10c00217 	ldw	r3,8(r2)
    e3d8:	e0bff617 	ldw	r2,-40(fp)
    e3dc:	1880042e 	bgeu	r3,r2,e3f0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    e3e0:	e0bffc17 	ldw	r2,-16(fp)
    e3e4:	00c00044 	movi	r3,1
    e3e8:	10c00405 	stb	r3,16(r2)
    e3ec:	00000206 	br	e3f8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    e3f0:	e0bffc17 	ldw	r2,-16(fp)
    e3f4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e3f8:	e0bffc17 	ldw	r2,-16(fp)
    e3fc:	d0e00e04 	addi	r3,gp,-32712
    e400:	e0fffa15 	stw	r3,-24(fp)
    e404:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e408:	e0bffb17 	ldw	r2,-20(fp)
    e40c:	e0fffa17 	ldw	r3,-24(fp)
    e410:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e414:	e0bffa17 	ldw	r2,-24(fp)
    e418:	10c00017 	ldw	r3,0(r2)
    e41c:	e0bffb17 	ldw	r2,-20(fp)
    e420:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e424:	e0bffa17 	ldw	r2,-24(fp)
    e428:	10800017 	ldw	r2,0(r2)
    e42c:	e0fffb17 	ldw	r3,-20(fp)
    e430:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e434:	e0bffa17 	ldw	r2,-24(fp)
    e438:	e0fffb17 	ldw	r3,-20(fp)
    e43c:	10c00015 	stw	r3,0(r2)
    e440:	e0bff817 	ldw	r2,-32(fp)
    e444:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e448:	e0bff717 	ldw	r2,-36(fp)
    e44c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e450:	0005883a 	mov	r2,zero
    e454:	00000306 	br	e464 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    e458:	00bffa84 	movi	r2,-22
    e45c:	00000106 	br	e464 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    e460:	00bfde84 	movi	r2,-134
  }
}
    e464:	e037883a 	mov	sp,fp
    e468:	df000017 	ldw	fp,0(sp)
    e46c:	dec00104 	addi	sp,sp,4
    e470:	f800283a 	ret

0000e474 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e474:	defffe04 	addi	sp,sp,-8
    e478:	dfc00115 	stw	ra,4(sp)
    e47c:	df000015 	stw	fp,0(sp)
    e480:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e484:	d0a00b17 	ldw	r2,-32724(gp)
    e488:	10000326 	beq	r2,zero,e498 <alt_get_errno+0x24>
    e48c:	d0a00b17 	ldw	r2,-32724(gp)
    e490:	103ee83a 	callr	r2
    e494:	00000106 	br	e49c <alt_get_errno+0x28>
    e498:	d0a6d104 	addi	r2,gp,-25788
}
    e49c:	e037883a 	mov	sp,fp
    e4a0:	dfc00117 	ldw	ra,4(sp)
    e4a4:	df000017 	ldw	fp,0(sp)
    e4a8:	dec00204 	addi	sp,sp,8
    e4ac:	f800283a 	ret

0000e4b0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e4b0:	defffa04 	addi	sp,sp,-24
    e4b4:	dfc00515 	stw	ra,20(sp)
    e4b8:	df000415 	stw	fp,16(sp)
    e4bc:	df000404 	addi	fp,sp,16
    e4c0:	e13ffe15 	stw	r4,-8(fp)
    e4c4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e4c8:	e0bffe17 	ldw	r2,-8(fp)
    e4cc:	10000326 	beq	r2,zero,e4dc <alt_dev_llist_insert+0x2c>
    e4d0:	e0bffe17 	ldw	r2,-8(fp)
    e4d4:	10800217 	ldw	r2,8(r2)
    e4d8:	1000061e 	bne	r2,zero,e4f4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e4dc:	000e4740 	call	e474 <alt_get_errno>
    e4e0:	1007883a 	mov	r3,r2
    e4e4:	00800584 	movi	r2,22
    e4e8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e4ec:	00bffa84 	movi	r2,-22
    e4f0:	00001306 	br	e540 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e4f4:	e0bffe17 	ldw	r2,-8(fp)
    e4f8:	e0ffff17 	ldw	r3,-4(fp)
    e4fc:	e0fffc15 	stw	r3,-16(fp)
    e500:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e504:	e0bffd17 	ldw	r2,-12(fp)
    e508:	e0fffc17 	ldw	r3,-16(fp)
    e50c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e510:	e0bffc17 	ldw	r2,-16(fp)
    e514:	10c00017 	ldw	r3,0(r2)
    e518:	e0bffd17 	ldw	r2,-12(fp)
    e51c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e520:	e0bffc17 	ldw	r2,-16(fp)
    e524:	10800017 	ldw	r2,0(r2)
    e528:	e0fffd17 	ldw	r3,-12(fp)
    e52c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e530:	e0bffc17 	ldw	r2,-16(fp)
    e534:	e0fffd17 	ldw	r3,-12(fp)
    e538:	10c00015 	stw	r3,0(r2)

  return 0;  
    e53c:	0005883a 	mov	r2,zero
}
    e540:	e037883a 	mov	sp,fp
    e544:	dfc00117 	ldw	ra,4(sp)
    e548:	df000017 	ldw	fp,0(sp)
    e54c:	dec00204 	addi	sp,sp,8
    e550:	f800283a 	ret

0000e554 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e554:	defffd04 	addi	sp,sp,-12
    e558:	dfc00215 	stw	ra,8(sp)
    e55c:	df000115 	stw	fp,4(sp)
    e560:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e564:	00800074 	movhi	r2,1
    e568:	10bd4f04 	addi	r2,r2,-2756
    e56c:	e0bfff15 	stw	r2,-4(fp)
    e570:	00000606 	br	e58c <_do_ctors+0x38>
        (*ctor) (); 
    e574:	e0bfff17 	ldw	r2,-4(fp)
    e578:	10800017 	ldw	r2,0(r2)
    e57c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e580:	e0bfff17 	ldw	r2,-4(fp)
    e584:	10bfff04 	addi	r2,r2,-4
    e588:	e0bfff15 	stw	r2,-4(fp)
    e58c:	e0ffff17 	ldw	r3,-4(fp)
    e590:	00800074 	movhi	r2,1
    e594:	10bd5004 	addi	r2,r2,-2752
    e598:	18bff62e 	bgeu	r3,r2,e574 <_do_ctors+0x20>
        (*ctor) (); 
}
    e59c:	0001883a 	nop
    e5a0:	e037883a 	mov	sp,fp
    e5a4:	dfc00117 	ldw	ra,4(sp)
    e5a8:	df000017 	ldw	fp,0(sp)
    e5ac:	dec00204 	addi	sp,sp,8
    e5b0:	f800283a 	ret

0000e5b4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e5b4:	defffd04 	addi	sp,sp,-12
    e5b8:	dfc00215 	stw	ra,8(sp)
    e5bc:	df000115 	stw	fp,4(sp)
    e5c0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e5c4:	00800074 	movhi	r2,1
    e5c8:	10bd4f04 	addi	r2,r2,-2756
    e5cc:	e0bfff15 	stw	r2,-4(fp)
    e5d0:	00000606 	br	e5ec <_do_dtors+0x38>
        (*dtor) (); 
    e5d4:	e0bfff17 	ldw	r2,-4(fp)
    e5d8:	10800017 	ldw	r2,0(r2)
    e5dc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e5e0:	e0bfff17 	ldw	r2,-4(fp)
    e5e4:	10bfff04 	addi	r2,r2,-4
    e5e8:	e0bfff15 	stw	r2,-4(fp)
    e5ec:	e0ffff17 	ldw	r3,-4(fp)
    e5f0:	00800074 	movhi	r2,1
    e5f4:	10bd5004 	addi	r2,r2,-2752
    e5f8:	18bff62e 	bgeu	r3,r2,e5d4 <_do_dtors+0x20>
        (*dtor) (); 
}
    e5fc:	0001883a 	nop
    e600:	e037883a 	mov	sp,fp
    e604:	dfc00117 	ldw	ra,4(sp)
    e608:	df000017 	ldw	fp,0(sp)
    e60c:	dec00204 	addi	sp,sp,8
    e610:	f800283a 	ret

0000e614 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e614:	defffe04 	addi	sp,sp,-8
    e618:	dfc00115 	stw	ra,4(sp)
    e61c:	df000015 	stw	fp,0(sp)
    e620:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
    e624:	01440004 	movi	r5,4096
    e628:	0009883a 	mov	r4,zero
    e62c:	000f0800 	call	f080 <alt_icache_flush>
#endif
}
    e630:	0001883a 	nop
    e634:	e037883a 	mov	sp,fp
    e638:	dfc00117 	ldw	ra,4(sp)
    e63c:	df000017 	ldw	fp,0(sp)
    e640:	dec00204 	addi	sp,sp,8
    e644:	f800283a 	ret

0000e648 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e648:	defff904 	addi	sp,sp,-28
    e64c:	dfc00615 	stw	ra,24(sp)
    e650:	df000515 	stw	fp,20(sp)
    e654:	df000504 	addi	fp,sp,20
    e658:	e13ffc15 	stw	r4,-16(fp)
    e65c:	e17ffd15 	stw	r5,-12(fp)
    e660:	e1bffe15 	stw	r6,-8(fp)
    e664:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e668:	e0800217 	ldw	r2,8(fp)
    e66c:	d8800015 	stw	r2,0(sp)
    e670:	e1ffff17 	ldw	r7,-4(fp)
    e674:	e1bffe17 	ldw	r6,-8(fp)
    e678:	e17ffd17 	ldw	r5,-12(fp)
    e67c:	e13ffc17 	ldw	r4,-16(fp)
    e680:	000e7f80 	call	e7f8 <alt_iic_isr_register>
}  
    e684:	e037883a 	mov	sp,fp
    e688:	dfc00117 	ldw	ra,4(sp)
    e68c:	df000017 	ldw	fp,0(sp)
    e690:	dec00204 	addi	sp,sp,8
    e694:	f800283a 	ret

0000e698 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    e698:	defff904 	addi	sp,sp,-28
    e69c:	df000615 	stw	fp,24(sp)
    e6a0:	df000604 	addi	fp,sp,24
    e6a4:	e13ffe15 	stw	r4,-8(fp)
    e6a8:	e17fff15 	stw	r5,-4(fp)
    e6ac:	e0bfff17 	ldw	r2,-4(fp)
    e6b0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e6b4:	0005303a 	rdctl	r2,status
    e6b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e6bc:	e0fffb17 	ldw	r3,-20(fp)
    e6c0:	00bfff84 	movi	r2,-2
    e6c4:	1884703a 	and	r2,r3,r2
    e6c8:	1001703a 	wrctl	status,r2
  
  return context;
    e6cc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e6d0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    e6d4:	00c00044 	movi	r3,1
    e6d8:	e0bffa17 	ldw	r2,-24(fp)
    e6dc:	1884983a 	sll	r2,r3,r2
    e6e0:	1007883a 	mov	r3,r2
    e6e4:	d0a6d517 	ldw	r2,-25772(gp)
    e6e8:	1884b03a 	or	r2,r3,r2
    e6ec:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e6f0:	d0a6d517 	ldw	r2,-25772(gp)
    e6f4:	100170fa 	wrctl	ienable,r2
    e6f8:	e0bffc17 	ldw	r2,-16(fp)
    e6fc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e700:	e0bffd17 	ldw	r2,-12(fp)
    e704:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e708:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    e70c:	0001883a 	nop
}
    e710:	e037883a 	mov	sp,fp
    e714:	df000017 	ldw	fp,0(sp)
    e718:	dec00104 	addi	sp,sp,4
    e71c:	f800283a 	ret

0000e720 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    e720:	defff904 	addi	sp,sp,-28
    e724:	df000615 	stw	fp,24(sp)
    e728:	df000604 	addi	fp,sp,24
    e72c:	e13ffe15 	stw	r4,-8(fp)
    e730:	e17fff15 	stw	r5,-4(fp)
    e734:	e0bfff17 	ldw	r2,-4(fp)
    e738:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e73c:	0005303a 	rdctl	r2,status
    e740:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e744:	e0fffb17 	ldw	r3,-20(fp)
    e748:	00bfff84 	movi	r2,-2
    e74c:	1884703a 	and	r2,r3,r2
    e750:	1001703a 	wrctl	status,r2
  
  return context;
    e754:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e758:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    e75c:	00c00044 	movi	r3,1
    e760:	e0bffa17 	ldw	r2,-24(fp)
    e764:	1884983a 	sll	r2,r3,r2
    e768:	0084303a 	nor	r2,zero,r2
    e76c:	1007883a 	mov	r3,r2
    e770:	d0a6d517 	ldw	r2,-25772(gp)
    e774:	1884703a 	and	r2,r3,r2
    e778:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e77c:	d0a6d517 	ldw	r2,-25772(gp)
    e780:	100170fa 	wrctl	ienable,r2
    e784:	e0bffc17 	ldw	r2,-16(fp)
    e788:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e78c:	e0bffd17 	ldw	r2,-12(fp)
    e790:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e794:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    e798:	0001883a 	nop
}
    e79c:	e037883a 	mov	sp,fp
    e7a0:	df000017 	ldw	fp,0(sp)
    e7a4:	dec00104 	addi	sp,sp,4
    e7a8:	f800283a 	ret

0000e7ac <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    e7ac:	defffc04 	addi	sp,sp,-16
    e7b0:	df000315 	stw	fp,12(sp)
    e7b4:	df000304 	addi	fp,sp,12
    e7b8:	e13ffe15 	stw	r4,-8(fp)
    e7bc:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e7c0:	000530fa 	rdctl	r2,ienable
    e7c4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    e7c8:	00c00044 	movi	r3,1
    e7cc:	e0bfff17 	ldw	r2,-4(fp)
    e7d0:	1884983a 	sll	r2,r3,r2
    e7d4:	1007883a 	mov	r3,r2
    e7d8:	e0bffd17 	ldw	r2,-12(fp)
    e7dc:	1884703a 	and	r2,r3,r2
    e7e0:	1004c03a 	cmpne	r2,r2,zero
    e7e4:	10803fcc 	andi	r2,r2,255
}
    e7e8:	e037883a 	mov	sp,fp
    e7ec:	df000017 	ldw	fp,0(sp)
    e7f0:	dec00104 	addi	sp,sp,4
    e7f4:	f800283a 	ret

0000e7f8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e7f8:	defff504 	addi	sp,sp,-44
    e7fc:	dfc00a15 	stw	ra,40(sp)
    e800:	df000915 	stw	fp,36(sp)
    e804:	df000904 	addi	fp,sp,36
    e808:	e13ffc15 	stw	r4,-16(fp)
    e80c:	e17ffd15 	stw	r5,-12(fp)
    e810:	e1bffe15 	stw	r6,-8(fp)
    e814:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    e818:	00bffa84 	movi	r2,-22
    e81c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    e820:	e0bffd17 	ldw	r2,-12(fp)
    e824:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e828:	e0bff817 	ldw	r2,-32(fp)
    e82c:	10800808 	cmpgei	r2,r2,32
    e830:	1000271e 	bne	r2,zero,e8d0 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e834:	0005303a 	rdctl	r2,status
    e838:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e83c:	e0fffb17 	ldw	r3,-20(fp)
    e840:	00bfff84 	movi	r2,-2
    e844:	1884703a 	and	r2,r3,r2
    e848:	1001703a 	wrctl	status,r2
  
  return context;
    e84c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    e850:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    e854:	00800074 	movhi	r2,1
    e858:	108bab04 	addi	r2,r2,11948
    e85c:	e0fff817 	ldw	r3,-32(fp)
    e860:	180690fa 	slli	r3,r3,3
    e864:	10c5883a 	add	r2,r2,r3
    e868:	e0fffe17 	ldw	r3,-8(fp)
    e86c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    e870:	00800074 	movhi	r2,1
    e874:	108bab04 	addi	r2,r2,11948
    e878:	e0fff817 	ldw	r3,-32(fp)
    e87c:	180690fa 	slli	r3,r3,3
    e880:	10c5883a 	add	r2,r2,r3
    e884:	10800104 	addi	r2,r2,4
    e888:	e0ffff17 	ldw	r3,-4(fp)
    e88c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e890:	e0bffe17 	ldw	r2,-8(fp)
    e894:	10000526 	beq	r2,zero,e8ac <alt_iic_isr_register+0xb4>
    e898:	e0bff817 	ldw	r2,-32(fp)
    e89c:	100b883a 	mov	r5,r2
    e8a0:	e13ffc17 	ldw	r4,-16(fp)
    e8a4:	000e6980 	call	e698 <alt_ic_irq_enable>
    e8a8:	00000406 	br	e8bc <alt_iic_isr_register+0xc4>
    e8ac:	e0bff817 	ldw	r2,-32(fp)
    e8b0:	100b883a 	mov	r5,r2
    e8b4:	e13ffc17 	ldw	r4,-16(fp)
    e8b8:	000e7200 	call	e720 <alt_ic_irq_disable>
    e8bc:	e0bff715 	stw	r2,-36(fp)
    e8c0:	e0bffa17 	ldw	r2,-24(fp)
    e8c4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e8c8:	e0bff917 	ldw	r2,-28(fp)
    e8cc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    e8d0:	e0bff717 	ldw	r2,-36(fp)
}
    e8d4:	e037883a 	mov	sp,fp
    e8d8:	dfc00117 	ldw	ra,4(sp)
    e8dc:	df000017 	ldw	fp,0(sp)
    e8e0:	dec00204 	addi	sp,sp,8
    e8e4:	f800283a 	ret

0000e8e8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e8e8:	defff904 	addi	sp,sp,-28
    e8ec:	dfc00615 	stw	ra,24(sp)
    e8f0:	df000515 	stw	fp,20(sp)
    e8f4:	df000504 	addi	fp,sp,20
    e8f8:	e13ffc15 	stw	r4,-16(fp)
    e8fc:	e17ffd15 	stw	r5,-12(fp)
    e900:	e1bffe15 	stw	r6,-8(fp)
    e904:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
    e908:	e1bfff17 	ldw	r6,-4(fp)
    e90c:	e17ffe17 	ldw	r5,-8(fp)
    e910:	e13ffd17 	ldw	r4,-12(fp)
    e914:	000eb280 	call	eb28 <open>
    e918:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
    e91c:	e0bffb17 	ldw	r2,-20(fp)
    e920:	10001c16 	blt	r2,zero,e994 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
    e924:	00800074 	movhi	r2,1
    e928:	10805004 	addi	r2,r2,320
    e92c:	e0fffb17 	ldw	r3,-20(fp)
    e930:	18c00324 	muli	r3,r3,12
    e934:	10c5883a 	add	r2,r2,r3
    e938:	10c00017 	ldw	r3,0(r2)
    e93c:	e0bffc17 	ldw	r2,-16(fp)
    e940:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    e944:	00800074 	movhi	r2,1
    e948:	10805004 	addi	r2,r2,320
    e94c:	e0fffb17 	ldw	r3,-20(fp)
    e950:	18c00324 	muli	r3,r3,12
    e954:	10c5883a 	add	r2,r2,r3
    e958:	10800104 	addi	r2,r2,4
    e95c:	10c00017 	ldw	r3,0(r2)
    e960:	e0bffc17 	ldw	r2,-16(fp)
    e964:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e968:	00800074 	movhi	r2,1
    e96c:	10805004 	addi	r2,r2,320
    e970:	e0fffb17 	ldw	r3,-20(fp)
    e974:	18c00324 	muli	r3,r3,12
    e978:	10c5883a 	add	r2,r2,r3
    e97c:	10800204 	addi	r2,r2,8
    e980:	10c00017 	ldw	r3,0(r2)
    e984:	e0bffc17 	ldw	r2,-16(fp)
    e988:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    e98c:	e13ffb17 	ldw	r4,-20(fp)
    e990:	000d4d80 	call	d4d8 <alt_release_fd>
  }
} 
    e994:	0001883a 	nop
    e998:	e037883a 	mov	sp,fp
    e99c:	dfc00117 	ldw	ra,4(sp)
    e9a0:	df000017 	ldw	fp,0(sp)
    e9a4:	dec00204 	addi	sp,sp,8
    e9a8:	f800283a 	ret

0000e9ac <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e9ac:	defffb04 	addi	sp,sp,-20
    e9b0:	dfc00415 	stw	ra,16(sp)
    e9b4:	df000315 	stw	fp,12(sp)
    e9b8:	df000304 	addi	fp,sp,12
    e9bc:	e13ffd15 	stw	r4,-12(fp)
    e9c0:	e17ffe15 	stw	r5,-8(fp)
    e9c4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e9c8:	01c07fc4 	movi	r7,511
    e9cc:	01800044 	movi	r6,1
    e9d0:	e17ffd17 	ldw	r5,-12(fp)
    e9d4:	01000074 	movhi	r4,1
    e9d8:	21005304 	addi	r4,r4,332
    e9dc:	000e8e80 	call	e8e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e9e0:	01c07fc4 	movi	r7,511
    e9e4:	000d883a 	mov	r6,zero
    e9e8:	e17ffe17 	ldw	r5,-8(fp)
    e9ec:	01000074 	movhi	r4,1
    e9f0:	21005004 	addi	r4,r4,320
    e9f4:	000e8e80 	call	e8e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e9f8:	01c07fc4 	movi	r7,511
    e9fc:	01800044 	movi	r6,1
    ea00:	e17fff17 	ldw	r5,-4(fp)
    ea04:	01000074 	movhi	r4,1
    ea08:	21005604 	addi	r4,r4,344
    ea0c:	000e8e80 	call	e8e8 <alt_open_fd>
}  
    ea10:	0001883a 	nop
    ea14:	e037883a 	mov	sp,fp
    ea18:	dfc00117 	ldw	ra,4(sp)
    ea1c:	df000017 	ldw	fp,0(sp)
    ea20:	dec00204 	addi	sp,sp,8
    ea24:	f800283a 	ret

0000ea28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ea28:	defffe04 	addi	sp,sp,-8
    ea2c:	dfc00115 	stw	ra,4(sp)
    ea30:	df000015 	stw	fp,0(sp)
    ea34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ea38:	d0a00b17 	ldw	r2,-32724(gp)
    ea3c:	10000326 	beq	r2,zero,ea4c <alt_get_errno+0x24>
    ea40:	d0a00b17 	ldw	r2,-32724(gp)
    ea44:	103ee83a 	callr	r2
    ea48:	00000106 	br	ea50 <alt_get_errno+0x28>
    ea4c:	d0a6d104 	addi	r2,gp,-25788
}
    ea50:	e037883a 	mov	sp,fp
    ea54:	dfc00117 	ldw	ra,4(sp)
    ea58:	df000017 	ldw	fp,0(sp)
    ea5c:	dec00204 	addi	sp,sp,8
    ea60:	f800283a 	ret

0000ea64 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    ea64:	defffd04 	addi	sp,sp,-12
    ea68:	df000215 	stw	fp,8(sp)
    ea6c:	df000204 	addi	fp,sp,8
    ea70:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ea74:	e0bfff17 	ldw	r2,-4(fp)
    ea78:	10800217 	ldw	r2,8(r2)
    ea7c:	10d00034 	orhi	r3,r2,16384
    ea80:	e0bfff17 	ldw	r2,-4(fp)
    ea84:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ea88:	e03ffe15 	stw	zero,-8(fp)
    ea8c:	00001d06 	br	eb04 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ea90:	00800074 	movhi	r2,1
    ea94:	10805004 	addi	r2,r2,320
    ea98:	e0fffe17 	ldw	r3,-8(fp)
    ea9c:	18c00324 	muli	r3,r3,12
    eaa0:	10c5883a 	add	r2,r2,r3
    eaa4:	10c00017 	ldw	r3,0(r2)
    eaa8:	e0bfff17 	ldw	r2,-4(fp)
    eaac:	10800017 	ldw	r2,0(r2)
    eab0:	1880111e 	bne	r3,r2,eaf8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    eab4:	00800074 	movhi	r2,1
    eab8:	10805004 	addi	r2,r2,320
    eabc:	e0fffe17 	ldw	r3,-8(fp)
    eac0:	18c00324 	muli	r3,r3,12
    eac4:	10c5883a 	add	r2,r2,r3
    eac8:	10800204 	addi	r2,r2,8
    eacc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ead0:	1000090e 	bge	r2,zero,eaf8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    ead4:	e0bffe17 	ldw	r2,-8(fp)
    ead8:	10c00324 	muli	r3,r2,12
    eadc:	00800074 	movhi	r2,1
    eae0:	10805004 	addi	r2,r2,320
    eae4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    eae8:	e0bfff17 	ldw	r2,-4(fp)
    eaec:	18800226 	beq	r3,r2,eaf8 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    eaf0:	00bffcc4 	movi	r2,-13
    eaf4:	00000806 	br	eb18 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    eaf8:	e0bffe17 	ldw	r2,-8(fp)
    eafc:	10800044 	addi	r2,r2,1
    eb00:	e0bffe15 	stw	r2,-8(fp)
    eb04:	d0a00a17 	ldw	r2,-32728(gp)
    eb08:	1007883a 	mov	r3,r2
    eb0c:	e0bffe17 	ldw	r2,-8(fp)
    eb10:	18bfdf2e 	bgeu	r3,r2,ea90 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    eb14:	0005883a 	mov	r2,zero
}
    eb18:	e037883a 	mov	sp,fp
    eb1c:	df000017 	ldw	fp,0(sp)
    eb20:	dec00104 	addi	sp,sp,4
    eb24:	f800283a 	ret

0000eb28 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    eb28:	defff604 	addi	sp,sp,-40
    eb2c:	dfc00915 	stw	ra,36(sp)
    eb30:	df000815 	stw	fp,32(sp)
    eb34:	df000804 	addi	fp,sp,32
    eb38:	e13ffd15 	stw	r4,-12(fp)
    eb3c:	e17ffe15 	stw	r5,-8(fp)
    eb40:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    eb44:	00bfffc4 	movi	r2,-1
    eb48:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    eb4c:	00bffb44 	movi	r2,-19
    eb50:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    eb54:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    eb58:	d1600804 	addi	r5,gp,-32736
    eb5c:	e13ffd17 	ldw	r4,-12(fp)
    eb60:	000ee440 	call	ee44 <alt_find_dev>
    eb64:	e0bff815 	stw	r2,-32(fp)
    eb68:	e0bff817 	ldw	r2,-32(fp)
    eb6c:	1000051e 	bne	r2,zero,eb84 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    eb70:	e13ffd17 	ldw	r4,-12(fp)
    eb74:	000eed40 	call	eed4 <alt_find_file>
    eb78:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    eb7c:	00800044 	movi	r2,1
    eb80:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    eb84:	e0bff817 	ldw	r2,-32(fp)
    eb88:	10002926 	beq	r2,zero,ec30 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
    eb8c:	e13ff817 	ldw	r4,-32(fp)
    eb90:	000efdc0 	call	efdc <alt_get_fd>
    eb94:	e0bff915 	stw	r2,-28(fp)
    eb98:	e0bff917 	ldw	r2,-28(fp)
    eb9c:	1000030e 	bge	r2,zero,ebac <open+0x84>
    {
      status = index;
    eba0:	e0bff917 	ldw	r2,-28(fp)
    eba4:	e0bffa15 	stw	r2,-24(fp)
    eba8:	00002306 	br	ec38 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
    ebac:	e0bff917 	ldw	r2,-28(fp)
    ebb0:	10c00324 	muli	r3,r2,12
    ebb4:	00800074 	movhi	r2,1
    ebb8:	10805004 	addi	r2,r2,320
    ebbc:	1885883a 	add	r2,r3,r2
    ebc0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    ebc4:	e0fffe17 	ldw	r3,-8(fp)
    ebc8:	00900034 	movhi	r2,16384
    ebcc:	10bfffc4 	addi	r2,r2,-1
    ebd0:	1886703a 	and	r3,r3,r2
    ebd4:	e0bffc17 	ldw	r2,-16(fp)
    ebd8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    ebdc:	e0bffb17 	ldw	r2,-20(fp)
    ebe0:	1000051e 	bne	r2,zero,ebf8 <open+0xd0>
    ebe4:	e13ffc17 	ldw	r4,-16(fp)
    ebe8:	000ea640 	call	ea64 <alt_file_locked>
    ebec:	e0bffa15 	stw	r2,-24(fp)
    ebf0:	e0bffa17 	ldw	r2,-24(fp)
    ebf4:	10001016 	blt	r2,zero,ec38 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    ebf8:	e0bff817 	ldw	r2,-32(fp)
    ebfc:	10800317 	ldw	r2,12(r2)
    ec00:	10000826 	beq	r2,zero,ec24 <open+0xfc>
    ec04:	e0bff817 	ldw	r2,-32(fp)
    ec08:	10800317 	ldw	r2,12(r2)
    ec0c:	e1ffff17 	ldw	r7,-4(fp)
    ec10:	e1bffe17 	ldw	r6,-8(fp)
    ec14:	e17ffd17 	ldw	r5,-12(fp)
    ec18:	e13ffc17 	ldw	r4,-16(fp)
    ec1c:	103ee83a 	callr	r2
    ec20:	00000106 	br	ec28 <open+0x100>
    ec24:	0005883a 	mov	r2,zero
    ec28:	e0bffa15 	stw	r2,-24(fp)
    ec2c:	00000206 	br	ec38 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
    ec30:	00bffb44 	movi	r2,-19
    ec34:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    ec38:	e0bffa17 	ldw	r2,-24(fp)
    ec3c:	1000090e 	bge	r2,zero,ec64 <open+0x13c>
  {
    alt_release_fd (index);  
    ec40:	e13ff917 	ldw	r4,-28(fp)
    ec44:	000d4d80 	call	d4d8 <alt_release_fd>
    ALT_ERRNO = -status;
    ec48:	000ea280 	call	ea28 <alt_get_errno>
    ec4c:	1007883a 	mov	r3,r2
    ec50:	e0bffa17 	ldw	r2,-24(fp)
    ec54:	0085c83a 	sub	r2,zero,r2
    ec58:	18800015 	stw	r2,0(r3)
    return -1;
    ec5c:	00bfffc4 	movi	r2,-1
    ec60:	00000106 	br	ec68 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
    ec64:	e0bff917 	ldw	r2,-28(fp)
}
    ec68:	e037883a 	mov	sp,fp
    ec6c:	dfc00117 	ldw	ra,4(sp)
    ec70:	df000017 	ldw	fp,0(sp)
    ec74:	dec00204 	addi	sp,sp,8
    ec78:	f800283a 	ret

0000ec7c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    ec7c:	defffa04 	addi	sp,sp,-24
    ec80:	df000515 	stw	fp,20(sp)
    ec84:	df000504 	addi	fp,sp,20
    ec88:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ec8c:	0005303a 	rdctl	r2,status
    ec90:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec94:	e0fffc17 	ldw	r3,-16(fp)
    ec98:	00bfff84 	movi	r2,-2
    ec9c:	1884703a 	and	r2,r3,r2
    eca0:	1001703a 	wrctl	status,r2
  
  return context;
    eca4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    eca8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    ecac:	e0bfff17 	ldw	r2,-4(fp)
    ecb0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    ecb4:	e0bffd17 	ldw	r2,-12(fp)
    ecb8:	10800017 	ldw	r2,0(r2)
    ecbc:	e0fffd17 	ldw	r3,-12(fp)
    ecc0:	18c00117 	ldw	r3,4(r3)
    ecc4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    ecc8:	e0bffd17 	ldw	r2,-12(fp)
    eccc:	10800117 	ldw	r2,4(r2)
    ecd0:	e0fffd17 	ldw	r3,-12(fp)
    ecd4:	18c00017 	ldw	r3,0(r3)
    ecd8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    ecdc:	e0bffd17 	ldw	r2,-12(fp)
    ece0:	e0fffd17 	ldw	r3,-12(fp)
    ece4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    ece8:	e0bffd17 	ldw	r2,-12(fp)
    ecec:	e0fffd17 	ldw	r3,-12(fp)
    ecf0:	10c00015 	stw	r3,0(r2)
    ecf4:	e0bffb17 	ldw	r2,-20(fp)
    ecf8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ecfc:	e0bffe17 	ldw	r2,-8(fp)
    ed00:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    ed04:	0001883a 	nop
    ed08:	e037883a 	mov	sp,fp
    ed0c:	df000017 	ldw	fp,0(sp)
    ed10:	dec00104 	addi	sp,sp,4
    ed14:	f800283a 	ret

0000ed18 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    ed18:	defffb04 	addi	sp,sp,-20
    ed1c:	dfc00415 	stw	ra,16(sp)
    ed20:	df000315 	stw	fp,12(sp)
    ed24:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ed28:	d0a00e17 	ldw	r2,-32712(gp)
    ed2c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ed30:	d0a6d717 	ldw	r2,-25764(gp)
    ed34:	10800044 	addi	r2,r2,1
    ed38:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ed3c:	00002e06 	br	edf8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    ed40:	e0bffd17 	ldw	r2,-12(fp)
    ed44:	10800017 	ldw	r2,0(r2)
    ed48:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    ed4c:	e0bffd17 	ldw	r2,-12(fp)
    ed50:	10800403 	ldbu	r2,16(r2)
    ed54:	10803fcc 	andi	r2,r2,255
    ed58:	10000426 	beq	r2,zero,ed6c <alt_tick+0x54>
    ed5c:	d0a6d717 	ldw	r2,-25764(gp)
    ed60:	1000021e 	bne	r2,zero,ed6c <alt_tick+0x54>
    {
      alarm->rollover = 0;
    ed64:	e0bffd17 	ldw	r2,-12(fp)
    ed68:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    ed6c:	e0bffd17 	ldw	r2,-12(fp)
    ed70:	10800217 	ldw	r2,8(r2)
    ed74:	d0e6d717 	ldw	r3,-25764(gp)
    ed78:	18801d36 	bltu	r3,r2,edf0 <alt_tick+0xd8>
    ed7c:	e0bffd17 	ldw	r2,-12(fp)
    ed80:	10800403 	ldbu	r2,16(r2)
    ed84:	10803fcc 	andi	r2,r2,255
    ed88:	1000191e 	bne	r2,zero,edf0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    ed8c:	e0bffd17 	ldw	r2,-12(fp)
    ed90:	10800317 	ldw	r2,12(r2)
    ed94:	e0fffd17 	ldw	r3,-12(fp)
    ed98:	18c00517 	ldw	r3,20(r3)
    ed9c:	1809883a 	mov	r4,r3
    eda0:	103ee83a 	callr	r2
    eda4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    eda8:	e0bfff17 	ldw	r2,-4(fp)
    edac:	1000031e 	bne	r2,zero,edbc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    edb0:	e13ffd17 	ldw	r4,-12(fp)
    edb4:	000ec7c0 	call	ec7c <alt_alarm_stop>
    edb8:	00000d06 	br	edf0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    edbc:	e0bffd17 	ldw	r2,-12(fp)
    edc0:	10c00217 	ldw	r3,8(r2)
    edc4:	e0bfff17 	ldw	r2,-4(fp)
    edc8:	1887883a 	add	r3,r3,r2
    edcc:	e0bffd17 	ldw	r2,-12(fp)
    edd0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    edd4:	e0bffd17 	ldw	r2,-12(fp)
    edd8:	10c00217 	ldw	r3,8(r2)
    eddc:	d0a6d717 	ldw	r2,-25764(gp)
    ede0:	1880032e 	bgeu	r3,r2,edf0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    ede4:	e0bffd17 	ldw	r2,-12(fp)
    ede8:	00c00044 	movi	r3,1
    edec:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    edf0:	e0bffe17 	ldw	r2,-8(fp)
    edf4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    edf8:	e0fffd17 	ldw	r3,-12(fp)
    edfc:	d0a00e04 	addi	r2,gp,-32712
    ee00:	18bfcf1e 	bne	r3,r2,ed40 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    ee04:	0001883a 	nop
}
    ee08:	0001883a 	nop
    ee0c:	e037883a 	mov	sp,fp
    ee10:	dfc00117 	ldw	ra,4(sp)
    ee14:	df000017 	ldw	fp,0(sp)
    ee18:	dec00204 	addi	sp,sp,8
    ee1c:	f800283a 	ret

0000ee20 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    ee20:	deffff04 	addi	sp,sp,-4
    ee24:	df000015 	stw	fp,0(sp)
    ee28:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    ee2c:	000170fa 	wrctl	ienable,zero
}
    ee30:	0001883a 	nop
    ee34:	e037883a 	mov	sp,fp
    ee38:	df000017 	ldw	fp,0(sp)
    ee3c:	dec00104 	addi	sp,sp,4
    ee40:	f800283a 	ret

0000ee44 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ee44:	defffa04 	addi	sp,sp,-24
    ee48:	dfc00515 	stw	ra,20(sp)
    ee4c:	df000415 	stw	fp,16(sp)
    ee50:	df000404 	addi	fp,sp,16
    ee54:	e13ffe15 	stw	r4,-8(fp)
    ee58:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    ee5c:	e0bfff17 	ldw	r2,-4(fp)
    ee60:	10800017 	ldw	r2,0(r2)
    ee64:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    ee68:	e13ffe17 	ldw	r4,-8(fp)
    ee6c:	00006fc0 	call	6fc <strlen>
    ee70:	10800044 	addi	r2,r2,1
    ee74:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ee78:	00000d06 	br	eeb0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    ee7c:	e0bffc17 	ldw	r2,-16(fp)
    ee80:	10800217 	ldw	r2,8(r2)
    ee84:	e0fffd17 	ldw	r3,-12(fp)
    ee88:	180d883a 	mov	r6,r3
    ee8c:	e17ffe17 	ldw	r5,-8(fp)
    ee90:	1009883a 	mov	r4,r2
    ee94:	000f1f80 	call	f1f8 <memcmp>
    ee98:	1000021e 	bne	r2,zero,eea4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    ee9c:	e0bffc17 	ldw	r2,-16(fp)
    eea0:	00000706 	br	eec0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    eea4:	e0bffc17 	ldw	r2,-16(fp)
    eea8:	10800017 	ldw	r2,0(r2)
    eeac:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    eeb0:	e0fffc17 	ldw	r3,-16(fp)
    eeb4:	e0bfff17 	ldw	r2,-4(fp)
    eeb8:	18bff01e 	bne	r3,r2,ee7c <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    eebc:	0005883a 	mov	r2,zero
}
    eec0:	e037883a 	mov	sp,fp
    eec4:	dfc00117 	ldw	ra,4(sp)
    eec8:	df000017 	ldw	fp,0(sp)
    eecc:	dec00204 	addi	sp,sp,8
    eed0:	f800283a 	ret

0000eed4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    eed4:	defffb04 	addi	sp,sp,-20
    eed8:	dfc00415 	stw	ra,16(sp)
    eedc:	df000315 	stw	fp,12(sp)
    eee0:	df000304 	addi	fp,sp,12
    eee4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    eee8:	d0a00617 	ldw	r2,-32744(gp)
    eeec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    eef0:	00003106 	br	efb8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    eef4:	e0bffd17 	ldw	r2,-12(fp)
    eef8:	10800217 	ldw	r2,8(r2)
    eefc:	1009883a 	mov	r4,r2
    ef00:	00006fc0 	call	6fc <strlen>
    ef04:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    ef08:	e0bffd17 	ldw	r2,-12(fp)
    ef0c:	10c00217 	ldw	r3,8(r2)
    ef10:	e0bffe17 	ldw	r2,-8(fp)
    ef14:	10bfffc4 	addi	r2,r2,-1
    ef18:	1885883a 	add	r2,r3,r2
    ef1c:	10800003 	ldbu	r2,0(r2)
    ef20:	10803fcc 	andi	r2,r2,255
    ef24:	1080201c 	xori	r2,r2,128
    ef28:	10bfe004 	addi	r2,r2,-128
    ef2c:	10800bd8 	cmpnei	r2,r2,47
    ef30:	1000031e 	bne	r2,zero,ef40 <alt_find_file+0x6c>
    {
      len -= 1;
    ef34:	e0bffe17 	ldw	r2,-8(fp)
    ef38:	10bfffc4 	addi	r2,r2,-1
    ef3c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    ef40:	e0bffe17 	ldw	r2,-8(fp)
    ef44:	e0ffff17 	ldw	r3,-4(fp)
    ef48:	1885883a 	add	r2,r3,r2
    ef4c:	10800003 	ldbu	r2,0(r2)
    ef50:	10803fcc 	andi	r2,r2,255
    ef54:	1080201c 	xori	r2,r2,128
    ef58:	10bfe004 	addi	r2,r2,-128
    ef5c:	10800be0 	cmpeqi	r2,r2,47
    ef60:	1000081e 	bne	r2,zero,ef84 <alt_find_file+0xb0>
    ef64:	e0bffe17 	ldw	r2,-8(fp)
    ef68:	e0ffff17 	ldw	r3,-4(fp)
    ef6c:	1885883a 	add	r2,r3,r2
    ef70:	10800003 	ldbu	r2,0(r2)
    ef74:	10803fcc 	andi	r2,r2,255
    ef78:	1080201c 	xori	r2,r2,128
    ef7c:	10bfe004 	addi	r2,r2,-128
    ef80:	10000a1e 	bne	r2,zero,efac <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    ef84:	e0bffd17 	ldw	r2,-12(fp)
    ef88:	10800217 	ldw	r2,8(r2)
    ef8c:	e0fffe17 	ldw	r3,-8(fp)
    ef90:	180d883a 	mov	r6,r3
    ef94:	e17fff17 	ldw	r5,-4(fp)
    ef98:	1009883a 	mov	r4,r2
    ef9c:	000f1f80 	call	f1f8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    efa0:	1000021e 	bne	r2,zero,efac <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    efa4:	e0bffd17 	ldw	r2,-12(fp)
    efa8:	00000706 	br	efc8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    efac:	e0bffd17 	ldw	r2,-12(fp)
    efb0:	10800017 	ldw	r2,0(r2)
    efb4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    efb8:	e0fffd17 	ldw	r3,-12(fp)
    efbc:	d0a00604 	addi	r2,gp,-32744
    efc0:	18bfcc1e 	bne	r3,r2,eef4 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    efc4:	0005883a 	mov	r2,zero
}
    efc8:	e037883a 	mov	sp,fp
    efcc:	dfc00117 	ldw	ra,4(sp)
    efd0:	df000017 	ldw	fp,0(sp)
    efd4:	dec00204 	addi	sp,sp,8
    efd8:	f800283a 	ret

0000efdc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    efdc:	defffc04 	addi	sp,sp,-16
    efe0:	df000315 	stw	fp,12(sp)
    efe4:	df000304 	addi	fp,sp,12
    efe8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
    efec:	00bffa04 	movi	r2,-24
    eff0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    eff4:	e03ffd15 	stw	zero,-12(fp)
    eff8:	00001906 	br	f060 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
    effc:	00800074 	movhi	r2,1
    f000:	10805004 	addi	r2,r2,320
    f004:	e0fffd17 	ldw	r3,-12(fp)
    f008:	18c00324 	muli	r3,r3,12
    f00c:	10c5883a 	add	r2,r2,r3
    f010:	10800017 	ldw	r2,0(r2)
    f014:	10000f1e 	bne	r2,zero,f054 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
    f018:	00800074 	movhi	r2,1
    f01c:	10805004 	addi	r2,r2,320
    f020:	e0fffd17 	ldw	r3,-12(fp)
    f024:	18c00324 	muli	r3,r3,12
    f028:	10c5883a 	add	r2,r2,r3
    f02c:	e0ffff17 	ldw	r3,-4(fp)
    f030:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    f034:	d0e00a17 	ldw	r3,-32728(gp)
    f038:	e0bffd17 	ldw	r2,-12(fp)
    f03c:	1880020e 	bge	r3,r2,f048 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
    f040:	e0bffd17 	ldw	r2,-12(fp)
    f044:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
    f048:	e0bffd17 	ldw	r2,-12(fp)
    f04c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    f050:	00000606 	br	f06c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f054:	e0bffd17 	ldw	r2,-12(fp)
    f058:	10800044 	addi	r2,r2,1
    f05c:	e0bffd15 	stw	r2,-12(fp)
    f060:	e0bffd17 	ldw	r2,-12(fp)
    f064:	10800810 	cmplti	r2,r2,32
    f068:	103fe41e 	bne	r2,zero,effc <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f06c:	e0bffe17 	ldw	r2,-8(fp)
}
    f070:	e037883a 	mov	sp,fp
    f074:	df000017 	ldw	fp,0(sp)
    f078:	dec00104 	addi	sp,sp,4
    f07c:	f800283a 	ret

0000f080 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
    f080:	defffb04 	addi	sp,sp,-20
    f084:	df000415 	stw	fp,16(sp)
    f088:	df000404 	addi	fp,sp,16
    f08c:	e13ffe15 	stw	r4,-8(fp)
    f090:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
    f094:	e0bfff17 	ldw	r2,-4(fp)
    f098:	10840070 	cmpltui	r2,r2,4097
    f09c:	1000021e 	bne	r2,zero,f0a8 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
    f0a0:	00840004 	movi	r2,4096
    f0a4:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
    f0a8:	e0fffe17 	ldw	r3,-8(fp)
    f0ac:	e0bfff17 	ldw	r2,-4(fp)
    f0b0:	1885883a 	add	r2,r3,r2
    f0b4:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
    f0b8:	e0bffe17 	ldw	r2,-8(fp)
    f0bc:	e0bffc15 	stw	r2,-16(fp)
    f0c0:	00000506 	br	f0d8 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
    f0c4:	e0bffc17 	ldw	r2,-16(fp)
    f0c8:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
    f0cc:	e0bffc17 	ldw	r2,-16(fp)
    f0d0:	10800804 	addi	r2,r2,32
    f0d4:	e0bffc15 	stw	r2,-16(fp)
    f0d8:	e0fffc17 	ldw	r3,-16(fp)
    f0dc:	e0bffd17 	ldw	r2,-12(fp)
    f0e0:	18bff836 	bltu	r3,r2,f0c4 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
    f0e4:	e0bffe17 	ldw	r2,-8(fp)
    f0e8:	108007cc 	andi	r2,r2,31
    f0ec:	10000226 	beq	r2,zero,f0f8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
    f0f0:	e0bffc17 	ldw	r2,-16(fp)
    f0f4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
    f0f8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
    f0fc:	0001883a 	nop
    f100:	e037883a 	mov	sp,fp
    f104:	df000017 	ldw	fp,0(sp)
    f108:	dec00104 	addi	sp,sp,4
    f10c:	f800283a 	ret

0000f110 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f110:	defffe04 	addi	sp,sp,-8
    f114:	df000115 	stw	fp,4(sp)
    f118:	df000104 	addi	fp,sp,4
    f11c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f120:	e0bfff17 	ldw	r2,-4(fp)
    f124:	10bffe84 	addi	r2,r2,-6
    f128:	10c00428 	cmpgeui	r3,r2,16
    f12c:	18001a1e 	bne	r3,zero,f198 <alt_exception_cause_generated_bad_addr+0x88>
    f130:	100690ba 	slli	r3,r2,2
    f134:	00800074 	movhi	r2,1
    f138:	10bc5204 	addi	r2,r2,-3768
    f13c:	1885883a 	add	r2,r3,r2
    f140:	10800017 	ldw	r2,0(r2)
    f144:	1000683a 	jmp	r2
    f148:	0000f188 	cmpgei	zero,zero,966
    f14c:	0000f188 	cmpgei	zero,zero,966
    f150:	0000f198 	cmpnei	zero,zero,966
    f154:	0000f198 	cmpnei	zero,zero,966
    f158:	0000f198 	cmpnei	zero,zero,966
    f15c:	0000f188 	cmpgei	zero,zero,966
    f160:	0000f190 	cmplti	zero,zero,966
    f164:	0000f198 	cmpnei	zero,zero,966
    f168:	0000f188 	cmpgei	zero,zero,966
    f16c:	0000f188 	cmpgei	zero,zero,966
    f170:	0000f198 	cmpnei	zero,zero,966
    f174:	0000f188 	cmpgei	zero,zero,966
    f178:	0000f190 	cmplti	zero,zero,966
    f17c:	0000f198 	cmpnei	zero,zero,966
    f180:	0000f198 	cmpnei	zero,zero,966
    f184:	0000f188 	cmpgei	zero,zero,966
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f188:	00800044 	movi	r2,1
    f18c:	00000306 	br	f19c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f190:	0005883a 	mov	r2,zero
    f194:	00000106 	br	f19c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    f198:	0005883a 	mov	r2,zero
  }
}
    f19c:	e037883a 	mov	sp,fp
    f1a0:	df000017 	ldw	fp,0(sp)
    f1a4:	dec00104 	addi	sp,sp,4
    f1a8:	f800283a 	ret

0000f1ac <atexit>:
    f1ac:	200b883a 	mov	r5,r4
    f1b0:	000f883a 	mov	r7,zero
    f1b4:	000d883a 	mov	r6,zero
    f1b8:	0009883a 	mov	r4,zero
    f1bc:	000f2741 	jmpi	f274 <__register_exitproc>

0000f1c0 <exit>:
    f1c0:	defffe04 	addi	sp,sp,-8
    f1c4:	000b883a 	mov	r5,zero
    f1c8:	dc000015 	stw	r16,0(sp)
    f1cc:	dfc00115 	stw	ra,4(sp)
    f1d0:	2021883a 	mov	r16,r4
    f1d4:	000f38c0 	call	f38c <__call_exitprocs>
    f1d8:	00800074 	movhi	r2,1
    f1dc:	1084c804 	addi	r2,r2,4896
    f1e0:	11000017 	ldw	r4,0(r2)
    f1e4:	20800f17 	ldw	r2,60(r4)
    f1e8:	10000126 	beq	r2,zero,f1f0 <exit+0x30>
    f1ec:	103ee83a 	callr	r2
    f1f0:	8009883a 	mov	r4,r16
    f1f4:	000f50c0 	call	f50c <_exit>

0000f1f8 <memcmp>:
    f1f8:	01c000c4 	movi	r7,3
    f1fc:	3980192e 	bgeu	r7,r6,f264 <memcmp+0x6c>
    f200:	2144b03a 	or	r2,r4,r5
    f204:	11c4703a 	and	r2,r2,r7
    f208:	10000f26 	beq	r2,zero,f248 <memcmp+0x50>
    f20c:	20800003 	ldbu	r2,0(r4)
    f210:	28c00003 	ldbu	r3,0(r5)
    f214:	10c0151e 	bne	r2,r3,f26c <memcmp+0x74>
    f218:	31bfff84 	addi	r6,r6,-2
    f21c:	01ffffc4 	movi	r7,-1
    f220:	00000406 	br	f234 <memcmp+0x3c>
    f224:	20800003 	ldbu	r2,0(r4)
    f228:	28c00003 	ldbu	r3,0(r5)
    f22c:	31bfffc4 	addi	r6,r6,-1
    f230:	10c00e1e 	bne	r2,r3,f26c <memcmp+0x74>
    f234:	21000044 	addi	r4,r4,1
    f238:	29400044 	addi	r5,r5,1
    f23c:	31fff91e 	bne	r6,r7,f224 <memcmp+0x2c>
    f240:	0005883a 	mov	r2,zero
    f244:	f800283a 	ret
    f248:	20c00017 	ldw	r3,0(r4)
    f24c:	28800017 	ldw	r2,0(r5)
    f250:	18bfee1e 	bne	r3,r2,f20c <memcmp+0x14>
    f254:	31bfff04 	addi	r6,r6,-4
    f258:	21000104 	addi	r4,r4,4
    f25c:	29400104 	addi	r5,r5,4
    f260:	39bff936 	bltu	r7,r6,f248 <memcmp+0x50>
    f264:	303fe91e 	bne	r6,zero,f20c <memcmp+0x14>
    f268:	003ff506 	br	f240 <memcmp+0x48>
    f26c:	10c5c83a 	sub	r2,r2,r3
    f270:	f800283a 	ret

0000f274 <__register_exitproc>:
    f274:	defffa04 	addi	sp,sp,-24
    f278:	dc000315 	stw	r16,12(sp)
    f27c:	04000074 	movhi	r16,1
    f280:	8404c804 	addi	r16,r16,4896
    f284:	80c00017 	ldw	r3,0(r16)
    f288:	dc400415 	stw	r17,16(sp)
    f28c:	dfc00515 	stw	ra,20(sp)
    f290:	18805217 	ldw	r2,328(r3)
    f294:	2023883a 	mov	r17,r4
    f298:	10003726 	beq	r2,zero,f378 <__register_exitproc+0x104>
    f29c:	10c00117 	ldw	r3,4(r2)
    f2a0:	010007c4 	movi	r4,31
    f2a4:	20c00e16 	blt	r4,r3,f2e0 <__register_exitproc+0x6c>
    f2a8:	1a000044 	addi	r8,r3,1
    f2ac:	8800221e 	bne	r17,zero,f338 <__register_exitproc+0xc4>
    f2b0:	18c00084 	addi	r3,r3,2
    f2b4:	18c7883a 	add	r3,r3,r3
    f2b8:	18c7883a 	add	r3,r3,r3
    f2bc:	12000115 	stw	r8,4(r2)
    f2c0:	10c7883a 	add	r3,r2,r3
    f2c4:	19400015 	stw	r5,0(r3)
    f2c8:	0005883a 	mov	r2,zero
    f2cc:	dfc00517 	ldw	ra,20(sp)
    f2d0:	dc400417 	ldw	r17,16(sp)
    f2d4:	dc000317 	ldw	r16,12(sp)
    f2d8:	dec00604 	addi	sp,sp,24
    f2dc:	f800283a 	ret
    f2e0:	00800034 	movhi	r2,0
    f2e4:	10800004 	addi	r2,r2,0
    f2e8:	10002626 	beq	r2,zero,f384 <__register_exitproc+0x110>
    f2ec:	01006404 	movi	r4,400
    f2f0:	d9400015 	stw	r5,0(sp)
    f2f4:	d9800115 	stw	r6,4(sp)
    f2f8:	d9c00215 	stw	r7,8(sp)
    f2fc:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f300:	d9400017 	ldw	r5,0(sp)
    f304:	d9800117 	ldw	r6,4(sp)
    f308:	d9c00217 	ldw	r7,8(sp)
    f30c:	10001d26 	beq	r2,zero,f384 <__register_exitproc+0x110>
    f310:	81000017 	ldw	r4,0(r16)
    f314:	10000115 	stw	zero,4(r2)
    f318:	02000044 	movi	r8,1
    f31c:	22405217 	ldw	r9,328(r4)
    f320:	0007883a 	mov	r3,zero
    f324:	12400015 	stw	r9,0(r2)
    f328:	20805215 	stw	r2,328(r4)
    f32c:	10006215 	stw	zero,392(r2)
    f330:	10006315 	stw	zero,396(r2)
    f334:	883fde26 	beq	r17,zero,f2b0 <__register_exitproc+0x3c>
    f338:	18c9883a 	add	r4,r3,r3
    f33c:	2109883a 	add	r4,r4,r4
    f340:	1109883a 	add	r4,r2,r4
    f344:	21802215 	stw	r6,136(r4)
    f348:	01800044 	movi	r6,1
    f34c:	12406217 	ldw	r9,392(r2)
    f350:	30cc983a 	sll	r6,r6,r3
    f354:	4992b03a 	or	r9,r9,r6
    f358:	12406215 	stw	r9,392(r2)
    f35c:	21c04215 	stw	r7,264(r4)
    f360:	01000084 	movi	r4,2
    f364:	893fd21e 	bne	r17,r4,f2b0 <__register_exitproc+0x3c>
    f368:	11006317 	ldw	r4,396(r2)
    f36c:	218cb03a 	or	r6,r4,r6
    f370:	11806315 	stw	r6,396(r2)
    f374:	003fce06 	br	f2b0 <__register_exitproc+0x3c>
    f378:	18805304 	addi	r2,r3,332
    f37c:	18805215 	stw	r2,328(r3)
    f380:	003fc606 	br	f29c <__register_exitproc+0x28>
    f384:	00bfffc4 	movi	r2,-1
    f388:	003fd006 	br	f2cc <__register_exitproc+0x58>

0000f38c <__call_exitprocs>:
    f38c:	defff504 	addi	sp,sp,-44
    f390:	df000915 	stw	fp,36(sp)
    f394:	dd400615 	stw	r21,24(sp)
    f398:	dc800315 	stw	r18,12(sp)
    f39c:	dfc00a15 	stw	ra,40(sp)
    f3a0:	ddc00815 	stw	r23,32(sp)
    f3a4:	dd800715 	stw	r22,28(sp)
    f3a8:	dd000515 	stw	r20,20(sp)
    f3ac:	dcc00415 	stw	r19,16(sp)
    f3b0:	dc400215 	stw	r17,8(sp)
    f3b4:	dc000115 	stw	r16,4(sp)
    f3b8:	d9000015 	stw	r4,0(sp)
    f3bc:	2839883a 	mov	fp,r5
    f3c0:	04800044 	movi	r18,1
    f3c4:	057fffc4 	movi	r21,-1
    f3c8:	00800074 	movhi	r2,1
    f3cc:	1084c804 	addi	r2,r2,4896
    f3d0:	12000017 	ldw	r8,0(r2)
    f3d4:	45005217 	ldw	r20,328(r8)
    f3d8:	44c05204 	addi	r19,r8,328
    f3dc:	a0001c26 	beq	r20,zero,f450 <__call_exitprocs+0xc4>
    f3e0:	a0800117 	ldw	r2,4(r20)
    f3e4:	15ffffc4 	addi	r23,r2,-1
    f3e8:	b8000d16 	blt	r23,zero,f420 <__call_exitprocs+0x94>
    f3ec:	14000044 	addi	r16,r2,1
    f3f0:	8421883a 	add	r16,r16,r16
    f3f4:	8421883a 	add	r16,r16,r16
    f3f8:	84402004 	addi	r17,r16,128
    f3fc:	a463883a 	add	r17,r20,r17
    f400:	a421883a 	add	r16,r20,r16
    f404:	e0001e26 	beq	fp,zero,f480 <__call_exitprocs+0xf4>
    f408:	80804017 	ldw	r2,256(r16)
    f40c:	e0801c26 	beq	fp,r2,f480 <__call_exitprocs+0xf4>
    f410:	bdffffc4 	addi	r23,r23,-1
    f414:	843fff04 	addi	r16,r16,-4
    f418:	8c7fff04 	addi	r17,r17,-4
    f41c:	bd7ff91e 	bne	r23,r21,f404 <__call_exitprocs+0x78>
    f420:	00800034 	movhi	r2,0
    f424:	10800004 	addi	r2,r2,0
    f428:	10000926 	beq	r2,zero,f450 <__call_exitprocs+0xc4>
    f42c:	a0800117 	ldw	r2,4(r20)
    f430:	1000301e 	bne	r2,zero,f4f4 <__call_exitprocs+0x168>
    f434:	a0800017 	ldw	r2,0(r20)
    f438:	10003226 	beq	r2,zero,f504 <__call_exitprocs+0x178>
    f43c:	a009883a 	mov	r4,r20
    f440:	98800015 	stw	r2,0(r19)
    f444:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f448:	9d000017 	ldw	r20,0(r19)
    f44c:	a03fe41e 	bne	r20,zero,f3e0 <__call_exitprocs+0x54>
    f450:	dfc00a17 	ldw	ra,40(sp)
    f454:	df000917 	ldw	fp,36(sp)
    f458:	ddc00817 	ldw	r23,32(sp)
    f45c:	dd800717 	ldw	r22,28(sp)
    f460:	dd400617 	ldw	r21,24(sp)
    f464:	dd000517 	ldw	r20,20(sp)
    f468:	dcc00417 	ldw	r19,16(sp)
    f46c:	dc800317 	ldw	r18,12(sp)
    f470:	dc400217 	ldw	r17,8(sp)
    f474:	dc000117 	ldw	r16,4(sp)
    f478:	dec00b04 	addi	sp,sp,44
    f47c:	f800283a 	ret
    f480:	a0800117 	ldw	r2,4(r20)
    f484:	80c00017 	ldw	r3,0(r16)
    f488:	10bfffc4 	addi	r2,r2,-1
    f48c:	15c01426 	beq	r2,r23,f4e0 <__call_exitprocs+0x154>
    f490:	80000015 	stw	zero,0(r16)
    f494:	183fde26 	beq	r3,zero,f410 <__call_exitprocs+0x84>
    f498:	95c8983a 	sll	r4,r18,r23
    f49c:	a0806217 	ldw	r2,392(r20)
    f4a0:	a5800117 	ldw	r22,4(r20)
    f4a4:	2084703a 	and	r2,r4,r2
    f4a8:	10000b26 	beq	r2,zero,f4d8 <__call_exitprocs+0x14c>
    f4ac:	a0806317 	ldw	r2,396(r20)
    f4b0:	2088703a 	and	r4,r4,r2
    f4b4:	20000c1e 	bne	r4,zero,f4e8 <__call_exitprocs+0x15c>
    f4b8:	89400017 	ldw	r5,0(r17)
    f4bc:	d9000017 	ldw	r4,0(sp)
    f4c0:	183ee83a 	callr	r3
    f4c4:	a0800117 	ldw	r2,4(r20)
    f4c8:	15bfbf1e 	bne	r2,r22,f3c8 <__call_exitprocs+0x3c>
    f4cc:	98800017 	ldw	r2,0(r19)
    f4d0:	153fcf26 	beq	r2,r20,f410 <__call_exitprocs+0x84>
    f4d4:	003fbc06 	br	f3c8 <__call_exitprocs+0x3c>
    f4d8:	183ee83a 	callr	r3
    f4dc:	003ff906 	br	f4c4 <__call_exitprocs+0x138>
    f4e0:	a5c00115 	stw	r23,4(r20)
    f4e4:	003feb06 	br	f494 <__call_exitprocs+0x108>
    f4e8:	89000017 	ldw	r4,0(r17)
    f4ec:	183ee83a 	callr	r3
    f4f0:	003ff406 	br	f4c4 <__call_exitprocs+0x138>
    f4f4:	a0800017 	ldw	r2,0(r20)
    f4f8:	a027883a 	mov	r19,r20
    f4fc:	1029883a 	mov	r20,r2
    f500:	003fb606 	br	f3dc <__call_exitprocs+0x50>
    f504:	0005883a 	mov	r2,zero
    f508:	003ffb06 	br	f4f8 <__call_exitprocs+0x16c>

0000f50c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f50c:	defffd04 	addi	sp,sp,-12
    f510:	df000215 	stw	fp,8(sp)
    f514:	df000204 	addi	fp,sp,8
    f518:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f51c:	0001883a 	nop
    f520:	e0bfff17 	ldw	r2,-4(fp)
    f524:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f528:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f52c:	10000226 	beq	r2,zero,f538 <_exit+0x2c>
    ALT_SIM_FAIL();
    f530:	002af070 	cmpltui	zero,zero,43969
    f534:	00000106 	br	f53c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f538:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f53c:	003fff06 	br	f53c <_exit+0x30>
